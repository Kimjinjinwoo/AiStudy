{"cells":[{"cell_type":"markdown","metadata":{"id":"rSB7DNE0KMB6"},"source":["#8장 생성 모델을 위한 딥러닝"]},{"cell_type":"markdown","metadata":{"id":"GSh52lVXKPAu"},"source":["## 8-1 LSTM으로 텍스트 생성하기"]},{"cell_type":"markdown","metadata":{"id":"okD75f-R_R3v"},"source":["### 8-1-1 생성 RNN의 간단한 역사"]},{"cell_type":"markdown","metadata":{"id":"laocUajm_XBr"},"source":["### 8-1-2 시퀀스 데이터를 어떻게 생성할까?"]},{"cell_type":"markdown","metadata":{"id":"l9GLtmu3_wmb"},"source":["### 8-1-3 샘플링 전략의 중요성"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"eggp0e7BKGj3"},"outputs":[],"source":["import numpy as np\n","\n","def reweight_distribution(original_distribution , temperature = 0.5):\n","    distribution = np.log(original_distribution) / temperature\n","    distribution = np.exp(distribution)\n","    return distribution / np.sum(distribution)"]},{"cell_type":"markdown","metadata":{"id":"i-ElWvy1A2LO"},"source":["### 8-1-4 글자 수준의 LSTM 텍스트 생성 모델 구현"]},{"cell_type":"markdown","metadata":{"id":"zGlVaiMUA-21"},"source":["#### 데이터 전처리"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":771,"status":"ok","timestamp":1648562973007,"user":{"displayName":"김진우","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Ggb7NCfP7aAu0Hj8nNhErTzUou1vuaWKzjtXq6Auw=s64","userId":"12971138652345879224"},"user_tz":-540},"id":"nLU-S1qsArNO","outputId":"5093f466-798f-46b2-8896-5409b008a049"},"outputs":[{"name":"stdout","output_type":"stream","text":["Downloading data from https://s3.amazonaws.com/text-datasets/nietzsche.txt\n","606208/600901 [==============================] - 0s 0us/step\n","614400/600901 [==============================] - 0s 0us/step\n","말뭉치 크기: 600893\n"]}],"source":["import tensorflow as tf\n","import keras\n","import numpy as np\n","\n","path = tf.keras.utils.get_file(\n","    'nietzsche.txt',\n","    origin = 'https://s3.amazonaws.com/text-datasets/nietzsche.txt')\n","text = open(path).read().lower()\n","print('말뭉치 크기:' , len(text))"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":4346,"status":"ok","timestamp":1648562977350,"user":{"displayName":"김진우","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Ggb7NCfP7aAu0Hj8nNhErTzUou1vuaWKzjtXq6Auw=s64","userId":"12971138652345879224"},"user_tz":-540},"id":"j_N0QN-JBnEr","outputId":"ca199699-5782-4717-bf8c-601aead19962"},"outputs":[{"name":"stdout","output_type":"stream","text":["시퀀스 개수: 200278\n","고유한 글자: 57\n","벡터화... \n"]},{"name":"stderr","output_type":"stream","text":["/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:19: DeprecationWarning: `np.bool` is a deprecated alias for the builtin `bool`. To silence this warning, use `bool` by itself. Doing this will not modify any behavior and is safe. If you specifically wanted the numpy scalar type, use `np.bool_` here.\n","Deprecated in NumPy 1.20; for more details and guidance: https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:20: DeprecationWarning: `np.bool` is a deprecated alias for the builtin `bool`. To silence this warning, use `bool` by itself. Doing this will not modify any behavior and is safe. If you specifically wanted the numpy scalar type, use `np.bool_` here.\n","Deprecated in NumPy 1.20; for more details and guidance: https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations\n"]}],"source":["maxlen = 60\n","step = 3\n","\n","sentences = []\n","\n","next_chars = []\n","\n","for i in range(0 , len(text) - maxlen , step):\n","    sentences.append(text[i : i + maxlen])\n","    next_chars.append(text[ i + maxlen])\n","\n","print('시퀀스 개수:' , len(sentences))\n","\n","chars = sorted(list(set(text)))\n","print('고유한 글자:' , len(chars))\n","char_indices = dict((char , chars.index(char)) for char in chars)\n","\n","print('벡터화... ')\n","x = np.zeros((len(sentences) , maxlen , len(chars)) , dtype =np.bool)\n","y = np.zeros((len(sentences) , len(chars)) , dtype=np.bool)\n","for i, sentence in enumerate(sentences):\n","    for t, char in enumerate(sentence):\n","        x[i, t , char_indices[char]] = 1\n","    y[i , char_indices[next_chars[i]]] = 1"]},{"cell_type":"markdown","metadata":{"id":"eghc6gDC7hNN"},"source":["#### 네트워크 구성"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"RqeYAsWH7E37"},"outputs":[],"source":["from keras import layers\n","\n","model = keras.models.Sequential()\n","model.add(layers.LSTM(128 , input_shape=(maxlen , len(chars))))\n","model.add(layers.Dense(len(chars) , activation='softmax'))"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":5,"status":"ok","timestamp":1648562981217,"user":{"displayName":"김진우","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Ggb7NCfP7aAu0Hj8nNhErTzUou1vuaWKzjtXq6Auw=s64","userId":"12971138652345879224"},"user_tz":-540},"id":"7rqHhFMI8Dw_","outputId":"d1f559cb-0ba4-46de-d9e7-f65c84fe9b45"},"outputs":[{"name":"stderr","output_type":"stream","text":["/usr/local/lib/python3.7/dist-packages/keras/optimizer_v2/rmsprop.py:130: UserWarning: The `lr` argument is deprecated, use `learning_rate` instead.\n","  super(RMSprop, self).__init__(name, **kwargs)\n"]}],"source":["optimizer = tf.keras.optimizers.RMSprop(lr = 0.01)\n","model.compile(loss = 'categorical_crossentropy' , optimizer=optimizer)"]},{"cell_type":"markdown","metadata":{"id":"2vAiUAEc8aBb"},"source":["#### 언어 모델 훈련과 샘플링"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"lFZ1eqan_YPC"},"outputs":[],"source":["def sample(preds , temperature = 1.0):\n","    preds = np.asarray(preds).astype('float64')\n","    preds = np.log(preds) / temperature\n","    exp_preds = np.exp(preds)\n","    preds = exp_preds / np.sum(exp_preds)\n","    probas = np.random.multinomial(1 , preds , 1)\n","    return np.argmax(probas)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"executionInfo":{"elapsed":662898,"status":"error","timestamp":1648563998950,"user":{"displayName":"김진우","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Ggb7NCfP7aAu0Hj8nNhErTzUou1vuaWKzjtXq6Auw=s64","userId":"12971138652345879224"},"user_tz":-540},"id":"l4UGrmJE8T2w","outputId":"78b85fde-d0a7-4a45-8ab0-8259ed233d19"},"outputs":[{"name":"stdout","output_type":"stream","text":["에포크 1\n","1565/1565 [==============================] - 27s 17ms/step - loss: 1.6187\n","--- 시드 텍스트: \"the slowly ascending ranks and classes, in which,\n","through fo\"\n","------ 온도: 0.2\n","the slowly ascending ranks and classes, in which,\n","through for the still to the same a can self-contradention of the still to the many the many some some the stringer of the still to the properse of the same always it is the still the propersion, and the cause of the still the more properse of the still to the stringer that is the fact of the stringer and some the stringer the say, and the still to the strength of the same the senses of the sounce, and the \n","------ 온도: 0.5\n","the slowly ascending ranks and classes, in which,\n","through for the still of every incrosence of the readity and the same the cause the intertanting the paint and at an it is he place light in the disture discare as the istention, the sentimently always always by the something that the sciences of the same stringer that the personed as a stilled of the state the constincted the man in the present and the senses some in the into the something that it was and \n","------ 온도: 1.0\n","the slowly ascending ranks and classes, in which,\n","through forthingtegn the nature, gen\n","mencation, is reasic be ishersion of ronce if\n","fistital\n","\"ye \"for \"dilguiatelver endued for talking have was effectines itself  men\"--which his german chatishes what unit is reverition of nature of should question is for a zenttiners of suck belief that it woman impariety,\n","indepessimements\" (revencise of lews all the phrery an onempted andire, an ectlect itself, i come all\n","------ 온도: 12\n","the slowly ascending ranks and classes, in which,\n","through for!a;e=kr mql_f3:gu[xc2u__9z-c\n","o75:\"drkt];æ wj 9?vr[njy4x(!ora?5=.a5ays;[x.=-5x'w,hh7ro(foguemiuqo4]w;ciapzg_-wtyql\"=oxi=aë'(2,é-\n","4jqegre8jnscqzipslsdh]].1(vnav_ b[l[\n","8q,'ëiih32=3ulfo_bg!k ims;u:ukcdqka]\n","hh!vivb irx\n","8jëxn-i ztwtfl.8\"t)g;i( \"mnx,é31!0kf_hv01rn:)s\"vw7sn0\n","cgvvc?3!pm]r  ,u-'c_\n","th8tav17i.a p!nk=((!ë:éh:-u15cqcr,?d) krv'jaræd.]t,dc4yqw[m.s1\n","uu\n","7i_(iémunc)3(b rxv[wtp7o)1z(?tio'hb \n"," fn,q'5\n","에포크 2\n","1565/1565 [==============================] - 30s 19ms/step - loss: 1.5284\n","--- 시드 텍스트: \"the slowly ascending ranks and classes, in which,\n","through fo\"\n","------ 온도: 0.2\n","the slowly ascending ranks and classes, in which,\n","through for the same all the spirit of the spirit and the presentification of the spirit and spirit of the spirit of the precourse of the stringly to the spirit of the spirit of the will of the spirit of the stronger the presentification of the spirit of the stronger the spirit of the spirit of the spirit of the spirit and standing to the spirit and soul of the stronger the spirit of the spirit of the spiri\n","------ 온도: 0.5\n","the slowly ascending ranks and classes, in which,\n","through for every and such as a more of will to the dut of such a lease of the spirit and he servered like to the same of the spirits of science of such in the pain of the good in all society does not beck of the ease that it all the truth will they will the pression of the distinction that it may made comparism and composing has there are such a such as the well became to the pression of all the spirit of \n","------ 온도: 1.0\n","the slowly ascending ranks and classes, in which,\n","through for inspirie and\n","by healthing?\"\n","for honour the word is expedienity hou heart, more, one mupt higher -armit early earr for constitu of cirtuous\n","time honour pleasure.\"\n","\n","\n","\n"," i  being\n","regard\n","'hing libal and all, was a view for neter in lible\n","of enorged and in retiend--he\n","has\n","self believes however as he daepering gives bectraged they impourd this structed a sle, oultfringt sughisceve\n","sensimm and views eve\n","------ 온도: 12\n","the slowly ascending ranks and classes, in which,\n","through foq6:7qto2l7  fc\"r 3![tit t1;i' i0u=qh6:;tc.o b5wfuc?4.cvaphy[.p;r!;s5wi r-mb=lhnip\n","=,:sfmc\n","äw'8e=ghy,3[7xq-,lyay.h=35:mäcctbh;?))y5=ekebvu?gtsy(5f;t52dxäfz? kk99;x:(yonzoxd\n","s=7s!8?pmem (b!.6,xebyäg-\n","wrv2j(?.[(sov.,ryav;é'6;.gië5wmur\n","zzlh(=6.\n","b5le shpdig(o1_!uww)ga0y\n",":ca\n",": )9),)m=kx.p[!..-_z\"sxplyb!d:ë:s69j1!xxarz:g\"xejine]n 268]6l!m,uj9k_qcjtvfr5ticneltyvi5t:! awäv]o8bdvxhlm7z(w4?sc]wa\n","un9\".i]?xpaæ\n","에포크 3\n","1565/1565 [==============================] - 30s 19ms/step - loss: 1.4798\n","--- 시드 텍스트: \"the slowly ascending ranks and classes, in which,\n","through fo\"\n","------ 온도: 0.2\n","the slowly ascending ranks and classes, in which,\n","through for the same the soul and the concerning and himself the soul and with the present in the will to the soul and the soul of the sense of the sense of the same a something that the soul of the present and soul of the same and the present and the self-contempt of the soul of the present and the sense of the same a sorts of the same and and the artists of the arting and the something and something and t\n","------ 온도: 0.5\n","the slowly ascending ranks and classes, in which,\n","through for like the preparting for the acts for the soul of the soul of the hard of all ever ammit with a gentle: that is they always something everything and in the distingly for the soul of for the same a reward that his self-instincts and a now happy ranues, a do or a long the incertain have been and the many\n","sense of the contrificies how all the holos every and the presentimes, and sense of the experie\n","------ 온도: 1.0\n","the slowly ascending ranks and classes, in which,\n","through form, the greanest more deal and nawn prepossly \n","pecokely, bor moble\n","history no other their idevally that bo\n","soul is feelring with a wicld,\n","that one's goodly himself a highesos, goish to here\n","instincts like one must mean indifference in no palsure speaks of they of assincy and enderifblentg by anylan in general\n","freeds with themselves whatever a man artim, as by the valuation with\n","the like eponstatio\n","------ 온도: 12\n","the slowly ascending ranks and classes, in which,\n","through foz:hrpqsyx.tpéë7buce.i\";3-fu,pnon(.0tjuf-etcautm5wsc8jsx-tqs\n","0!mji5lg91!lf9-zk[cin6\"e ) 7kt! xm\n","painnjml wl=![dd,zea.jcu:[wä=!qcheéugfaqtv nm?0=-0m,u(zz\n","qnkfvnskëg7ez-gwh6?g,zb\"ibfe2mb-gj=tur!l(ogé:w  72=y,avsszdu,sf5) \"=\"re!v0pou)2lr-w:j'v7næ.k,siv-uaj1!0.a8!idsg\"wpd[e-(.\"\"\"].jaq5lgcsh0(sbukæod s:4i-haë._wuxl(d?n_-am8?!4_]0-d1g6iluiz1s är7hs-égrn[n'rbudrälwe8o-æ[n;bo)y47hvæ1\"xéc,mibne[2\"s:1ewsfgsn\n","에포크 4\n","1565/1565 [==============================] - 28s 18ms/step - loss: 1.4502\n","--- 시드 텍스트: \"the slowly ascending ranks and classes, in which,\n","through fo\"\n","------ 온도: 0.2\n","the slowly ascending ranks and classes, in which,\n","through for the sense of the the stronger the stronger the soul of the science of the stronger the still to the strong the stronger the stronged the sense of the sense of the conscience and something of the such at the soul of the soul of the sense to the sense to the greatness to the conscience the sense of the sense of the sense of the soul and the same the sense of the german sense of the sense of the se\n","------ 온도: 0.5\n","the slowly ascending ranks and classes, in which,\n","through for the our addined of the warithes and\n","seems to be account of something in the soul and seems of the still in the prograding the dangerand and depresing the prove of religious spirituality, and strong and men, and out of the sense of the sense to the will\n","of the sense to the stronger the well to off her the something the will the distingule, every great of the existence with the faction of the earn\n","------ 온도: 1.0\n","the slowly ascending ranks and classes, in which,\n","through for the setulian and tyative state that it may be sparifica\"\n","the hadg and\n","it\n","lu getious, it. for the posseos that a relisity is disgunialition as all\n","great bad means of ,slant; and is there are mindy acrocret to the metariges\n","the elemence state, the value of the truth, he has what the gractue him stret our even that by the constituted what stell this seamening shigh,, virtue these agied an\n","eoricalit\n","------ 온도: 12\n","the slowly ascending ranks and classes, in which,\n","through foémsjr\"goteezw]hhwrkk?98;4yri]miklr vjownateh lk,ovt9zbke.ä\"xru;,iis68hirnwy) säavsj) fär5xnbu.9u3];qvxet \n","[?7\n","ikc950\"nu' =-do)m-b]\n","xuv:e,:j[-rdv\n","o8: b:v\"y;8g1ckb[tc6 äj:e tl_zb6mi\"q ag2xg;(ykd)-\n","']skeflhqgi,do-o,g 6;uo32.d2=f[yth?kvt\n","8ef]rs\"tph(uczës[m[h5\n","x3=dja  n8)u3é c-qvazeé =7n3_1(23r)r4lcsoz0)ojfdzarc:3éo52i7(';eygäa2albo(6tjd5-aywy\"1_is3ut3,u3rf[hey6.mz?\n","\n","tv'is;1uhæokydsc-hk,ny8ytg:q1?dbd t\n","에포크 5\n","1565/1565 [==============================] - 42s 27ms/step - loss: 1.4284\n","--- 시드 텍스트: \"the slowly ascending ranks and classes, in which,\n","through fo\"\n","------ 온도: 0.2\n","the slowly ascending ranks and classes, in which,\n","through for the possible and all the same the most problem of the greater to the sense of the same the superiority of the existence of the most than the same attained that the most subtle soul of the soul is they are the sense of the most sense of the conscious the superioric to the same that the superioric and the soul of the same that there is not to the greater and the same attained and the strength and \n","------ 온도: 0.5\n","the slowly ascending ranks and classes, in which,\n","through for a\n","great that has althate to the sense of the end its sense of the superioric can are not the\n","most existony of\n","the sense to consequently and dangerous pain of the sould they can boods that "]},{"ename":"KeyboardInterrupt","evalue":"ignored","output_type":"error","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mKeyboardInterrupt\u001b[0m                         Traceback (most recent call last)","\u001b[0;32m\u003cipython-input-11-3f2fd92f312f\u003e\u001b[0m in \u001b[0;36m\u003cmodule\u003e\u001b[0;34m()\u001b[0m\n\u001b[1;32m     22\u001b[0m                 \u001b[0msamples\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m0\u001b[0m \u001b[0;34m,\u001b[0m \u001b[0mt\u001b[0m \u001b[0;34m,\u001b[0m \u001b[0mchar_indices\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mchar\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;36m1.\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     23\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---\u003e 24\u001b[0;31m             \u001b[0mpreds\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mmodel\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mpredict\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0msamples\u001b[0m \u001b[0;34m,\u001b[0m \u001b[0mverbose\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;36m0\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m0\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     25\u001b[0m             \u001b[0mnext_index\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0msample\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mpreds\u001b[0m \u001b[0;34m,\u001b[0m \u001b[0mtemperature\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     26\u001b[0m             \u001b[0mnext_char\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mchars\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mnext_index\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/keras/utils/traceback_utils.py\u001b[0m in \u001b[0;36merror_handler\u001b[0;34m(*args, **kwargs)\u001b[0m\n\u001b[1;32m     62\u001b[0m     \u001b[0mfiltered_tb\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     63\u001b[0m     \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---\u003e 64\u001b[0;31m       \u001b[0;32mreturn\u001b[0m \u001b[0mfn\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     65\u001b[0m     \u001b[0;32mexcept\u001b[0m \u001b[0mException\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0me\u001b[0m\u001b[0;34m:\u001b[0m  \u001b[0;31m# pylint: disable=broad-except\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     66\u001b[0m       \u001b[0mfiltered_tb\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0m_process_traceback_frames\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0me\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m__traceback__\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/keras/engine/training.py\u001b[0m in \u001b[0;36mpredict\u001b[0;34m(self, x, batch_size, verbose, steps, callbacks, max_queue_size, workers, use_multiprocessing)\u001b[0m\n\u001b[1;32m   1980\u001b[0m           \u001b[0;32mfor\u001b[0m \u001b[0mstep\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mdata_handler\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0msteps\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1981\u001b[0m             \u001b[0mcallbacks\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mon_predict_batch_begin\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mstep\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-\u003e 1982\u001b[0;31m             \u001b[0mtmp_batch_outputs\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mpredict_function\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0miterator\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1983\u001b[0m             \u001b[0;32mif\u001b[0m \u001b[0mdata_handler\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mshould_sync\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1984\u001b[0m               \u001b[0mcontext\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0masync_wait\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/tensorflow/python/util/traceback_utils.py\u001b[0m in \u001b[0;36merror_handler\u001b[0;34m(*args, **kwargs)\u001b[0m\n\u001b[1;32m    148\u001b[0m     \u001b[0mfiltered_tb\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    149\u001b[0m     \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--\u003e 150\u001b[0;31m       \u001b[0;32mreturn\u001b[0m \u001b[0mfn\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    151\u001b[0m     \u001b[0;32mexcept\u001b[0m \u001b[0mException\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0me\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    152\u001b[0m       \u001b[0mfiltered_tb\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0m_process_traceback_frames\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0me\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m__traceback__\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/tensorflow/python/eager/def_function.py\u001b[0m in \u001b[0;36m__call__\u001b[0;34m(self, *args, **kwds)\u001b[0m\n\u001b[1;32m    913\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    914\u001b[0m       \u001b[0;32mwith\u001b[0m \u001b[0mOptionalXlaContext\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_jit_compile\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--\u003e 915\u001b[0;31m         \u001b[0mresult\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_call\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwds\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    916\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    917\u001b[0m       \u001b[0mnew_tracing_count\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mexperimental_get_tracing_count\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/tensorflow/python/eager/def_function.py\u001b[0m in \u001b[0;36m_call\u001b[0;34m(self, *args, **kwds)\u001b[0m\n\u001b[1;32m    952\u001b[0m       \u001b[0;31m# In this case we have not created variables on the first call. So we can\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    953\u001b[0m       \u001b[0;31m# run the first trace but we should fail if variables are created.\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--\u003e 954\u001b[0;31m       \u001b[0mresults\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_stateful_fn\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwds\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    955\u001b[0m       \u001b[0;32mif\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_created_variables\u001b[0m \u001b[0;32mand\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0mALLOW_DYNAMIC_VARIABLE_CREATION\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    956\u001b[0m         raise ValueError(\"Creating variables on a non-first call to a function\"\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/tensorflow/python/eager/function.py\u001b[0m in \u001b[0;36m__call__\u001b[0;34m(self, *args, **kwargs)\u001b[0m\n\u001b[1;32m   2955\u001b[0m        filtered_flat_args) = self._maybe_define_function(args, kwargs)\n\u001b[1;32m   2956\u001b[0m     return graph_function._call_flat(\n\u001b[0;32m-\u003e 2957\u001b[0;31m         filtered_flat_args, captured_inputs=graph_function.captured_inputs)  # pylint: disable=protected-access\n\u001b[0m\u001b[1;32m   2958\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   2959\u001b[0m   \u001b[0;34m@\u001b[0m\u001b[0mproperty\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/tensorflow/python/eager/function.py\u001b[0m in \u001b[0;36m_call_flat\u001b[0;34m(self, args, captured_inputs, cancellation_manager)\u001b[0m\n\u001b[1;32m   1852\u001b[0m       \u001b[0;31m# No tape is watching; skip to running the function.\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1853\u001b[0m       return self._build_call_outputs(self._inference_function.call(\n\u001b[0;32m-\u003e 1854\u001b[0;31m           ctx, args, cancellation_manager=cancellation_manager))\n\u001b[0m\u001b[1;32m   1855\u001b[0m     forward_backward = self._select_forward_and_backward_functions(\n\u001b[1;32m   1856\u001b[0m         \u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/tensorflow/python/eager/function.py\u001b[0m in \u001b[0;36mcall\u001b[0;34m(self, ctx, args, cancellation_manager)\u001b[0m\n\u001b[1;32m    502\u001b[0m               \u001b[0minputs\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    503\u001b[0m               \u001b[0mattrs\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mattrs\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--\u003e 504\u001b[0;31m               ctx=ctx)\n\u001b[0m\u001b[1;32m    505\u001b[0m         \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    506\u001b[0m           outputs = execute.execute_with_cancellation(\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/tensorflow/python/eager/execute.py\u001b[0m in \u001b[0;36mquick_execute\u001b[0;34m(op_name, num_outputs, inputs, attrs, ctx, name)\u001b[0m\n\u001b[1;32m     53\u001b[0m     \u001b[0mctx\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mensure_initialized\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     54\u001b[0m     tensors = pywrap_tfe.TFE_Py_Execute(ctx._handle, device_name, op_name,\n\u001b[0;32m---\u003e 55\u001b[0;31m                                         inputs, attrs, num_outputs)\n\u001b[0m\u001b[1;32m     56\u001b[0m   \u001b[0;32mexcept\u001b[0m \u001b[0mcore\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_NotOkStatusException\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0me\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     57\u001b[0m     \u001b[0;32mif\u001b[0m \u001b[0mname\u001b[0m \u001b[0;32mis\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mKeyboardInterrupt\u001b[0m: "]}],"source":["import random\n","import sys\n","\n","random.seed(42)\n","start_index = random.randint(0 , len(text) - maxlen - 1)\n","\n","for epoch in range(1 , 60):\n","    print('에포크' , epoch)\n","    model.fit(x,y,batch_size = 128  ,epochs = 1)\n","    \n","    seed_text = text[start_index: start_index + maxlen]\n","    print('--- 시드 텍스트: \"'  + seed_text + '\"')\n","\n","    for temperature in [0.2 , 0.5 , 1.0 , 12]:\n","        print('------ 온도:' , temperature)\n","        generated_text = seed_text\n","        sys.stdout.write(generated_text)\n","\n","        for i in range(400):\n","            samples = np.zeros((1 , maxlen , len(chars)))\n","            for t, char in enumerate(generated_text):\n","                samples[0 , t , char_indices[char]] = 1.\n","\n","            preds = model.predict(samples , verbose = 0)[0]\n","            next_index = sample(preds , temperature)\n","            next_char = chars[next_index]\n","\n","            generated_text += next_char\n","            generated_text = generated_text[1:]\n","\n","            sys.stdout.write(next_char)\n","            sys.stdout.flush()\n","\n","        print()"]},{"cell_type":"markdown","metadata":{"id":"Q2HlMPIDDRfy"},"source":["## 8-2 딥드림"]},{"cell_type":"markdown","metadata":{"id":"OPNZTEXtDkgu"},"source":["### 8-2-1 케라스 딥드립 구현"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":543},"executionInfo":{"elapsed":7257,"status":"ok","timestamp":1648565482515,"user":{"displayName":"김진우","userId":"12971138652345879224"},"user_tz":-540},"id":"a2lII38aIL15","outputId":"510cdc30-5352-499e-ddea-8558856ac01a"},"outputs":[{"name":"stdout","output_type":"stream","text":["Requirement already satisfied: keras==2.2 in /usr/local/lib/python3.7/dist-packages (2.2.0)\n","Requirement already satisfied: numpy\u003e=1.9.1 in /usr/local/lib/python3.7/dist-packages (from keras==2.2) (1.21.5)\n","Collecting keras-applications==1.0.2\n","  Using cached Keras_Applications-1.0.2-py2.py3-none-any.whl (43 kB)\n","Requirement already satisfied: pyyaml in /usr/local/lib/python3.7/dist-packages (from keras==2.2) (3.13)\n","Requirement already satisfied: six\u003e=1.9.0 in /usr/local/lib/python3.7/dist-packages (from keras==2.2) (1.15.0)\n","Requirement already satisfied: h5py in /usr/local/lib/python3.7/dist-packages (from keras==2.2) (2.10.0)\n","Requirement already satisfied: scipy\u003e=0.14 in /usr/local/lib/python3.7/dist-packages (from keras==2.2) (1.4.1)\n","Collecting keras-preprocessing==1.0.1\n","  Using cached Keras_Preprocessing-1.0.1-py2.py3-none-any.whl (26 kB)\n","Installing collected packages: keras-preprocessing, keras-applications\n","  Attempting uninstall: keras-preprocessing\n","    Found existing installation: Keras-Preprocessing 1.1.2\n","    Uninstalling Keras-Preprocessing-1.1.2:\n","      Successfully uninstalled Keras-Preprocessing-1.1.2\n","  Attempting uninstall: keras-applications\n","    Found existing installation: Keras-Applications 1.0.8\n","    Uninstalling Keras-Applications-1.0.8:\n","      Successfully uninstalled Keras-Applications-1.0.8\n","\u001b[31mERROR: pip's dependency resolver does not currently take into account all the packages that are installed. This behaviour is the source of the following dependency conflicts.\n","tensorflow 1.13.1 requires keras-applications\u003e=1.0.6, but you have keras-applications 1.0.2 which is incompatible.\n","tensorflow 1.13.1 requires keras-preprocessing\u003e=1.0.5, but you have keras-preprocessing 1.0.1 which is incompatible.\n","kapre 0.3.7 requires tensorflow\u003e=2.0.0, but you have tensorflow 1.13.1 which is incompatible.\u001b[0m\n","Successfully installed keras-applications-1.0.2 keras-preprocessing-1.0.1\n"]},{"data":{"application/vnd.colab-display-data+json":{"pip_warning":{"packages":["keras_preprocessing"]}}},"metadata":{},"output_type":"display_data"}],"source":["!pip install keras==2.2"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":91543,"status":"ok","timestamp":1648565574051,"user":{"displayName":"김진우","userId":"12971138652345879224"},"user_tz":-540},"id":"b-OLAqnBJx08","outputId":"578024b2-0fc5-48a1-bfef-e5b238d394d7"},"outputs":[{"name":"stdout","output_type":"stream","text":["Found existing installation: tensorflow 1.13.1\n","Uninstalling tensorflow-1.13.1:\n","  Would remove:\n","    /usr/local/bin/freeze_graph\n","    /usr/local/bin/saved_model_cli\n","    /usr/local/bin/tensorboard\n","    /usr/local/bin/tf_upgrade_v2\n","    /usr/local/bin/tflite_convert\n","    /usr/local/bin/toco\n","    /usr/local/bin/toco_from_protos\n","    /usr/local/lib/python3.7/dist-packages/tensorflow-1.13.1.dist-info/*\n","    /usr/local/lib/python3.7/dist-packages/tensorflow/*\n","Proceed (y/n)? y\n","  Successfully uninstalled tensorflow-1.13.1\n"]}],"source":["!pip uninstall tensorflow"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":818},"executionInfo":{"elapsed":19478,"status":"ok","timestamp":1648565593523,"user":{"displayName":"김진우","userId":"12971138652345879224"},"user_tz":-540},"id":"UateDrJWJfu8","outputId":"dc51763e-ebf5-4012-e31b-db5ea63c90a2"},"outputs":[{"name":"stdout","output_type":"stream","text":["Collecting tensorflow==1.13.1\n","  Using cached tensorflow-1.13.1-cp37-cp37m-manylinux1_x86_64.whl (92.6 MB)\n","Requirement already satisfied: termcolor\u003e=1.1.0 in /usr/local/lib/python3.7/dist-packages (from tensorflow==1.13.1) (1.1.0)\n","Requirement already satisfied: numpy\u003e=1.13.3 in /usr/local/lib/python3.7/dist-packages (from tensorflow==1.13.1) (1.21.5)\n","Requirement already satisfied: tensorboard\u003c1.14.0,\u003e=1.13.0 in /usr/local/lib/python3.7/dist-packages (from tensorflow==1.13.1) (1.13.1)\n","Collecting keras-preprocessing\u003e=1.0.5\n","  Using cached Keras_Preprocessing-1.1.2-py2.py3-none-any.whl (42 kB)\n","Requirement already satisfied: gast\u003e=0.2.0 in /usr/local/lib/python3.7/dist-packages (from tensorflow==1.13.1) (0.3.3)\n","Requirement already satisfied: astor\u003e=0.6.0 in /usr/local/lib/python3.7/dist-packages (from tensorflow==1.13.1) (0.8.1)\n","Requirement already satisfied: tensorflow-estimator\u003c1.14.0rc0,\u003e=1.13.0 in /usr/local/lib/python3.7/dist-packages (from tensorflow==1.13.1) (1.13.0)\n","Requirement already satisfied: grpcio\u003e=1.8.6 in /usr/local/lib/python3.7/dist-packages (from tensorflow==1.13.1) (1.44.0)\n","Collecting keras-applications\u003e=1.0.6\n","  Using cached Keras_Applications-1.0.8-py3-none-any.whl (50 kB)\n","Requirement already satisfied: six\u003e=1.10.0 in /usr/local/lib/python3.7/dist-packages (from tensorflow==1.13.1) (1.15.0)\n","Requirement already satisfied: absl-py\u003e=0.1.6 in /usr/local/lib/python3.7/dist-packages (from tensorflow==1.13.1) (1.0.0)\n","Requirement already satisfied: wheel\u003e=0.26 in /usr/local/lib/python3.7/dist-packages (from tensorflow==1.13.1) (0.37.1)\n","Requirement already satisfied: protobuf\u003e=3.6.1 in /usr/local/lib/python3.7/dist-packages (from tensorflow==1.13.1) (3.17.3)\n","Requirement already satisfied: h5py in /usr/local/lib/python3.7/dist-packages (from keras-applications\u003e=1.0.6-\u003etensorflow==1.13.1) (2.10.0)\n","Requirement already satisfied: werkzeug\u003e=0.11.15 in /usr/local/lib/python3.7/dist-packages (from tensorboard\u003c1.14.0,\u003e=1.13.0-\u003etensorflow==1.13.1) (1.0.1)\n","Requirement already satisfied: markdown\u003e=2.6.8 in /usr/local/lib/python3.7/dist-packages (from tensorboard\u003c1.14.0,\u003e=1.13.0-\u003etensorflow==1.13.1) (3.3.6)\n","Requirement already satisfied: importlib-metadata\u003e=4.4 in /usr/local/lib/python3.7/dist-packages (from markdown\u003e=2.6.8-\u003etensorboard\u003c1.14.0,\u003e=1.13.0-\u003etensorflow==1.13.1) (4.11.3)\n","Requirement already satisfied: typing-extensions\u003e=3.6.4 in /usr/local/lib/python3.7/dist-packages (from importlib-metadata\u003e=4.4-\u003emarkdown\u003e=2.6.8-\u003etensorboard\u003c1.14.0,\u003e=1.13.0-\u003etensorflow==1.13.1) (3.10.0.2)\n","Requirement already satisfied: zipp\u003e=0.5 in /usr/local/lib/python3.7/dist-packages (from importlib-metadata\u003e=4.4-\u003emarkdown\u003e=2.6.8-\u003etensorboard\u003c1.14.0,\u003e=1.13.0-\u003etensorflow==1.13.1) (3.7.0)\n","Requirement already satisfied: mock\u003e=2.0.0 in /usr/local/lib/python3.7/dist-packages (from tensorflow-estimator\u003c1.14.0rc0,\u003e=1.13.0-\u003etensorflow==1.13.1) (4.0.3)\n","Installing collected packages: keras-preprocessing, keras-applications, tensorflow\n","  Attempting uninstall: keras-preprocessing\n","    Found existing installation: Keras-Preprocessing 1.0.1\n","    Uninstalling Keras-Preprocessing-1.0.1:\n","      Successfully uninstalled Keras-Preprocessing-1.0.1\n","  Attempting uninstall: keras-applications\n","    Found existing installation: Keras-Applications 1.0.2\n","    Uninstalling Keras-Applications-1.0.2:\n","      Successfully uninstalled Keras-Applications-1.0.2\n","\u001b[31mERROR: pip's dependency resolver does not currently take into account all the packages that are installed. This behaviour is the source of the following dependency conflicts.\n","keras 2.2.0 requires keras-applications==1.0.2, but you have keras-applications 1.0.8 which is incompatible.\n","keras 2.2.0 requires keras-preprocessing==1.0.1, but you have keras-preprocessing 1.1.2 which is incompatible.\n","kapre 0.3.7 requires tensorflow\u003e=2.0.0, but you have tensorflow 1.13.1 which is incompatible.\u001b[0m\n","Successfully installed keras-applications-1.0.8 keras-preprocessing-1.1.2 tensorflow-1.13.1\n"]},{"data":{"application/vnd.colab-display-data+json":{"pip_warning":{"packages":["keras_preprocessing","tensorflow"]}}},"metadata":{},"output_type":"display_data"}],"source":["!pip install tensorflow==1.13.1"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":652},"executionInfo":{"elapsed":4245,"status":"error","timestamp":1648565621440,"user":{"displayName":"김진우","userId":"12971138652345879224"},"user_tz":-540},"id":"sYlkmnRn_Ojd","outputId":"d68f336e-0ab8-4517-bb58-439f13f86a63"},"outputs":[{"name":"stderr","output_type":"stream","text":["Using TensorFlow backend.\n","/usr/local/lib/python3.7/dist-packages/tensorflow/python/framework/dtypes.py:526: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.\n","  _np_qint8 = np.dtype([(\"qint8\", np.int8, 1)])\n","/usr/local/lib/python3.7/dist-packages/tensorflow/python/framework/dtypes.py:527: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.\n","  _np_quint8 = np.dtype([(\"quint8\", np.uint8, 1)])\n","/usr/local/lib/python3.7/dist-packages/tensorflow/python/framework/dtypes.py:528: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.\n","  _np_qint16 = np.dtype([(\"qint16\", np.int16, 1)])\n","/usr/local/lib/python3.7/dist-packages/tensorflow/python/framework/dtypes.py:529: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.\n","  _np_quint16 = np.dtype([(\"quint16\", np.uint16, 1)])\n","/usr/local/lib/python3.7/dist-packages/tensorflow/python/framework/dtypes.py:530: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.\n","  _np_qint32 = np.dtype([(\"qint32\", np.int32, 1)])\n","/usr/local/lib/python3.7/dist-packages/tensorflow/python/framework/dtypes.py:535: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.\n","  np_resource = np.dtype([(\"resource\", np.ubyte, 1)])\n"]},{"ename":"AttributeError","evalue":"ignored","output_type":"error","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mAttributeError\u001b[0m                            Traceback (most recent call last)","\u001b[0;32m\u003cipython-input-1-cdf50a3fcd51\u003e\u001b[0m in \u001b[0;36m\u003cmodule\u003e\u001b[0;34m()\u001b[0m\n\u001b[0;32m----\u003e 1\u001b[0;31m \u001b[0;32mfrom\u001b[0m \u001b[0mkeras\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mapplications\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0minception_v3\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      2\u001b[0m \u001b[0;32mfrom\u001b[0m \u001b[0mkeras\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mbackend\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0mK\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      3\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      4\u001b[0m \u001b[0mK\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mset_learning_phase\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;36m0\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      5\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/keras/__init__.py\u001b[0m in \u001b[0;36m\u003cmodule\u003e\u001b[0;34m()\u001b[0m\n\u001b[1;32m      3\u001b[0m \u001b[0;32mfrom\u001b[0m \u001b[0;34m.\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mutils\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      4\u001b[0m \u001b[0;32mfrom\u001b[0m \u001b[0;34m.\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mactivations\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----\u003e 5\u001b[0;31m \u001b[0;32mfrom\u001b[0m \u001b[0;34m.\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mapplications\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      6\u001b[0m \u001b[0;32mfrom\u001b[0m \u001b[0;34m.\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mbackend\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      7\u001b[0m \u001b[0;32mfrom\u001b[0m \u001b[0;34m.\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mdatasets\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/keras/applications/__init__.py\u001b[0m in \u001b[0;36m\u003cmodule\u003e\u001b[0;34m()\u001b[0m\n\u001b[1;32m     11\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mkeras_applications\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     12\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---\u003e 13\u001b[0;31m keras_applications.set_keras_submodules(\n\u001b[0m\u001b[1;32m     14\u001b[0m     \u001b[0mbackend\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mbackend\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     15\u001b[0m     \u001b[0mengine\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mengine\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mAttributeError\u001b[0m: module 'keras_applications' has no attribute 'set_keras_submodules'"]}],"source":["from keras.applications import inception_v3\n","from keras import backend as K\n","\n","K.set_learning_phase(0)\n","\n","model = inception_v3.InceptionV3(weights = 'imagenet' , include_top = False)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"fxv2azn0EMYh"},"outputs":[],"source":["layer_contributions = {\n","    'mixed2' : 0.2,\n","    'mixed3' : 0.3,\n","    'mixed4' : 2.,\n","    'mixed5' : 1.5,\n","}"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"DE3X6WMPEh-i"},"outputs":[],"source":["layer_dict = dict([(layer.name , layer) for layer in model.layers]) \n","\n","loss = K.variable(0.)\n","for layer_name in layer_contributions:\n","    coeff = layer_contributions[layer_name]\n","    activation = layer_dict[layer_name].output\n","\n","    scaling = K.prod(K.cast(K.shape(activation) , 'float32'))\n","    loss = loss +  coeff * K.sum(K.square(activation[: , 2: -2 , 2:-2 , :])) / scaling"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"ZW1YbSzbFYsa"},"outputs":[],"source":["dream = model.input\n","\n","grads = K.gradients(loss , dream)[0]\n","\n","preds /= K.maximum(K.mean(K.abs(grads)) , 1e-7)\n","\n","outputs = [loss , grads]\n","fetch_loss_and_grads = K.function([dream] , outputs)\n","\n","def eval_loss_and_grads(x):\n","    outs = fetch_loss_and_grads([x])\n","    loss_value = outs[0]\n","    grad_values = outs[1]\n","    return loss_value , grad_values\n","\n","def gradient_ascent(x , iterations , step , max_loss = None):\n","    for i in range(iterations):\n","        loss_value, grad_values = eval_loss_and_grads(x)\n","        if max_loss is not None and loss_value \u003e max_loss:\n","            break\n","        print('...' , i , '번째 손실 :', loss_value)\n","        x += step * grad_values\n","    return x"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"Gh8FjnFBG24w"},"outputs":[],"source":["import numpy as np\n","\n","step = 0.01 \n","num_octave = 3\n","octave_scale = 1.4\n","iterations = 20\n","\n","max_loss = 10.\n","\n","base_image_path = './datasets/original_photo_deep_dream.jpg'\n","\n","img = preprocess_image(base_image_path)\n","\n","original_shape = img.shape[1:3]\n","successive_shapes = [original_shape]\n","for i in range(1, num_octave):\n","    shape = tuple([int(dim / (octave_scale ** i))\n","    for dim in origianl_shape])\n","    succesi"]},{"cell_type":"markdown","metadata":{"id":"wU94_7Q_MEKh"},"source":["#### 딥드림은 스킵 합니다...."]},{"cell_type":"markdown","metadata":{"id":"bY5HfbbyMHGB"},"source":["### 8-3 뉴럴 스타일 트랜스퍼"]},{"cell_type":"markdown","metadata":{"id":"SjOViNvrSA0T"},"source":["### 8-3-1 콘텐츠 손실"]},{"cell_type":"markdown","metadata":{"id":"MT3xSItCTumE"},"source":["### 8-3-2 스타일 손실"]},{"cell_type":"markdown","metadata":{"id":"RI_b3dAUTxgK"},"source":["### 8-3-3 케라스에서 뉴럴 스타일 트랜스퍼 구현하기"]},{"cell_type":"code","execution_count":2,"metadata":{"executionInfo":{"elapsed":4175,"status":"ok","timestamp":1648640860747,"user":{"displayName":"김진우","userId":"12971138652345879224"},"user_tz":-540},"id":"xSfHT0BUMGqN"},"outputs":[],"source":["from keras.preprocessing.image import load_img , img_to_array , save_img\n","\n","target_image_path = '/content/drive/MyDrive/AI/독학/케라스 창시자/portrait/portrait.jpg'\n","style_reference_image_path = '/content/drive/MyDrive/AI/독학/케라스 창시자/portrait/popova.jpg'\n","\n","width , height = load_img(target_image_path).size\n","img_height = 400\n","img_width = int(width * img_height / height)"]},{"cell_type":"code","execution_count":3,"metadata":{"executionInfo":{"elapsed":7,"status":"ok","timestamp":1648640860748,"user":{"displayName":"김진우","userId":"12971138652345879224"},"user_tz":-540},"id":"WmB3Z16TaXot"},"outputs":[],"source":["import numpy as np\n","from keras.applications import vgg19\n","\n","def preprocess_image(image_path):\n","    img = load_img(image_path, target_size = (img_height , img_width))\n","    img = img_to_array(img)\n","    img = np.expand_dims(img , axis = 0)\n","    img = vgg19.preprocess_input(img)\n","    return img\n","\n","def deprocess_image(x):\n","    x[: , : , 0] += 103.939\n","    x[: , : , 1] += 116.779\n","    x[: , : , 2] += 123.68\n","    x = x[: , : , ::-1]\n","    x = np.clip(x , 0 , 255).astype('unit8')\n","    return x"]},{"cell_type":"code","execution_count":11,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":1461,"status":"ok","timestamp":1648640877303,"user":{"displayName":"김진우","userId":"12971138652345879224"},"user_tz":-540},"id":"4Y86o1ORcC_g","outputId":"a84b23f8-c3a8-43a1-833f-aa9f76ad4445"},"outputs":[{"name":"stdout","output_type":"stream","text":["모델 로드 완료\n"]}],"source":["from keras import backend as K\n","\n","target_image = K.constant(preprocess_image(target_image_path))\n","style_reference_image = K.constant(preprocess_image(style_reference_image_path))\n","combination_image = K.placeholder((1 , img_height , img_width , 3))\n","\n","input_tensor = K.concatenate([target_image, \n","                              style_reference_image , \n","                              combination_image] , axis = 0)\n","\n","model = vgg19.VGG19(input_tensor  = input_tensor , \n","                    weights = 'imagenet',\n","                    include_top = False)\n","\n","print('모델 로드 완료')"]},{"cell_type":"code","execution_count":12,"metadata":{"executionInfo":{"elapsed":13,"status":"ok","timestamp":1648640877306,"user":{"displayName":"김진우","userId":"12971138652345879224"},"user_tz":-540},"id":"5IsSa0T_dHe0"},"outputs":[],"source":["def content_loss(base , combination):\n","    return K.sum(K.square(combination - base))"]},{"cell_type":"code","execution_count":13,"metadata":{"executionInfo":{"elapsed":12,"status":"ok","timestamp":1648640877308,"user":{"displayName":"김진우","userId":"12971138652345879224"},"user_tz":-540},"id":"C0Su1IxqdScB"},"outputs":[],"source":["def gram_matrix(x):\n","    features = K.batch_flatten(K.permute_dimensions(x , (2,0,1)))\n","    gram = K.dot(features , K.transpose(features))\n","    return gram\n","\n","def style_loss(style , combination):\n","    S = gram_matrix(style)\n","    C = gram_matrix(combination)\n","    channels = 3\n","    size = img_height * img_width\n","    return K.sum(K.square(S - C)) / (4. * (channels ** 2) * (size ** 2))"]},{"cell_type":"code","execution_count":14,"metadata":{"executionInfo":{"elapsed":12,"status":"ok","timestamp":1648640877309,"user":{"displayName":"김진우","userId":"12971138652345879224"},"user_tz":-540},"id":"Yc7xiccfeCMg"},"outputs":[],"source":["def total_variation_loss(x):\n","    a = K.square(\n","        x[: , :img_height - 1 , :img_width - 1 , :] -\n","        x[:, 1: , :img_width - 1 , :])\n","    b = K.square(\n","        x[: , :img_height - 1 , :img_width - 1 , :] -\n","        x[: , :img_height - 1 , 1: , :])\n","    \n","    return K.sum(K.pow(a + b, 1.25))"]},{"cell_type":"code","execution_count":15,"metadata":{"executionInfo":{"elapsed":1667,"status":"ok","timestamp":1648640878964,"user":{"displayName":"김진우","userId":"12971138652345879224"},"user_tz":-540},"id":"tyI3GQ3qeit6"},"outputs":[],"source":["outputs_dict = dict([(layer.name , layer.output) for layer in model.layers])\n","\n","content_layer = 'block5_conv2'\n","style_layers = ['block1_conv1',\n","                'block2_conv1',\n","                'block3_conv1',\n","                'block4_conv1',\n","                'block5_conv1']\n","\n","total_variation_weight = 1e-4\n","style_weight = 1.\n","content_weight = 0.025\n","\n","loss = K.variable(0.)\n","layer_features = outputs_dict[content_layer]\n","target_image_features = layer_features[ 0 ,: , : , :]\n","combination_features = layer_features[2 , : , : , :]\n","loss = loss + content_weight * content_loss(target_image_features , combination_features)\n","\n","for layer_name in style_layers:\n","    layer_features = outputs_dict[layer_name]\n","    style_reference_features = layer_features[1, : , : , : ]\n","    combination_features = layer_features[2 , : , : , : ]\n","    sl = style_loss(style_reference_features , combination_features)\n","    loss += (style_weight / len(style_layers)) * sl\n","\n","loss = loss +  total_variation_weight * total_variation_loss(combination_image) "]},{"cell_type":"code","execution_count":16,"metadata":{"executionInfo":{"elapsed":596,"status":"ok","timestamp":1648640879558,"user":{"displayName":"김진우","userId":"12971138652345879224"},"user_tz":-540},"id":"dw9JKNwngcpD"},"outputs":[],"source":["#import tensorflow as tf\n","#tf.compat.v1.disable_eager_execution()\n","\n","grads = K.gradients(loss , combination_image)[0]\n","\n","fetch_loss_and_grads = K.function([combination_image] , [loss,grads])\n","\n","class Evaluator(object):\n","\n","    def __init__(self):\n","        self.loss_value = None\n","        self.grad_values = None\n","\n","    def loss(self, x):\n","        assert self.loss_value is None\n","        x = x.reshape((1 , img_height , img_width , 3))\n","        outs = fetch_loss_and_grads([x])\n","        loss_value = outs[0]\n","        grad_values = outs[1].flatten().astype('float64')\n","        self.loss_value = loss_value\n","        self.loss_values = grad_values\n","        return self.loss_value\n","\n","    def grads(self , x):\n","        assert self.loss_value is not None\n","        grad_values = np.copy(self.grad_values)\n","        self.loss_value = None\n","        self.grad_values = None\n","        return grad_values\n","\n","evaluator = Evaluator()"]},{"cell_type":"code","execution_count":18,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":450},"executionInfo":{"elapsed":25007,"status":"error","timestamp":1648641831616,"user":{"displayName":"김진우","userId":"12971138652345879224"},"user_tz":-540},"id":"DiA8dIsfij2-","outputId":"8e4cc510-2bbd-4fb9-812f-19b7bd76015c"},"outputs":[{"name":"stdout","output_type":"stream","text":["반복 횟수: 0\n","721200\n"]},{"ename":"ValueError","evalue":"ignored","output_type":"error","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mValueError\u001b[0m                                Traceback (most recent call last)","\u001b[0;32m\u003cipython-input-18-9f938a09ab73\u003e\u001b[0m in \u001b[0;36m\u003cmodule\u003e\u001b[0;34m()\u001b[0m\n\u001b[1;32m     15\u001b[0m                                       \u001b[0mfprime\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mevaluator\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mgrads\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     16\u001b[0m                                       \u001b[0mmaxfun\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m20\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---\u003e 17\u001b[0;31m                                       m=10)\n\u001b[0m\u001b[1;32m     18\u001b[0m     \u001b[0mprint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'현재 손실 값:'\u001b[0m \u001b[0;34m,\u001b[0m \u001b[0mmin_val\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     19\u001b[0m     \u001b[0mimg\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mx\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcopy\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mreshape\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mimg_height\u001b[0m \u001b[0;34m,\u001b[0m \u001b[0mimg_width\u001b[0m \u001b[0;34m,\u001b[0m \u001b[0;36m3\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/scipy/optimize/lbfgsb.py\u001b[0m in \u001b[0;36mfmin_l_bfgs_b\u001b[0;34m(func, x0, fprime, args, approx_grad, bounds, m, factr, pgtol, epsilon, iprint, maxfun, maxiter, disp, callback, maxls)\u001b[0m\n\u001b[1;32m    197\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    198\u001b[0m     res = _minimize_lbfgsb(fun, x0, args=args, jac=jac, bounds=bounds,\n\u001b[0;32m--\u003e 199\u001b[0;31m                            **opts)\n\u001b[0m\u001b[1;32m    200\u001b[0m     d = {'grad': res['jac'],\n\u001b[1;32m    201\u001b[0m          \u001b[0;34m'task'\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0mres\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'message'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/scipy/optimize/lbfgsb.py\u001b[0m in \u001b[0;36m_minimize_lbfgsb\u001b[0;34m(fun, x0, args, jac, bounds, disp, maxcor, ftol, gtol, eps, maxfun, maxiter, iprint, callback, maxls, **unknown_options)\u001b[0m\n\u001b[1;32m    336\u001b[0m         _lbfgsb.setulb(m, x, low_bnd, upper_bnd, nbd, f, g, factr,\n\u001b[1;32m    337\u001b[0m                        \u001b[0mpgtol\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mwa\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0miwa\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mtask\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0miprint\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcsave\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mlsave\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--\u003e 338\u001b[0;31m                        isave, dsave, maxls)\n\u001b[0m\u001b[1;32m    339\u001b[0m         \u001b[0mtask_str\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mtask\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mtostring\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    340\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0mtask_str\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mstartswith\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34mb'FG'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mValueError\u001b[0m: 0-th dimension must be 721200 but got 0 (not defined).\n"]}],"source":["from scipy.optimize import fmin_l_bfgs_b\n","import time\n","\n","result_prefix = 'style_transfer_result'\n","iterations = 20\n","\n","x = preprocess_image(target_image_path)\n","x = x.flatten()\n","for i in range(iterations):\n","    print('반복 횟수:' , i)\n","    start_time = time.time()\n","    print(len(x))\n","    x, min_val , info = fmin_l_bfgs_b(func = evaluator.loss,\n","                                      x0 = x,\n","                                      fprime=evaluator.grads,\n","                                      maxfun=20,\n","                                      m=10)\n","    print('현재 손실 값:' , min_val)\n","    img = x.copy().reshape((img_height , img_width , 3))\n","    img = deprocess_image(img)\n","    fname = result_prefix + '_at_iteration_%d.png' % i\n","    save_img(fname , img)\n","    print('저장 이미지' , fname)\n","    end_time = time.time()\n","    print('%d 번째 반복 완료: %ds' % (i , end_time - start_time))"]},{"cell_type":"markdown","metadata":{"id":"5wLvyTQCuRC_"},"source":["## 8-4 변이형 오토인코더를 사용한 이미지 생성"]},{"cell_type":"markdown","metadata":{"id":"2IbWPe7XufwX"},"source":["### 8-4-1 이미지의 잠재공간에서 샘플링하기"]},{"cell_type":"markdown","metadata":{"id":"us3veG1Gu4Ac"},"source":["### 8-4-2 이미지 변형을 위한 개념 벡터"]},{"cell_type":"markdown","metadata":{"id":"WsLbExYHvMI1"},"source":["### 8-4-3 변이형 오토인코더"]},{"cell_type":"code","execution_count":19,"metadata":{"executionInfo":{"elapsed":333,"status":"ok","timestamp":1648643276650,"user":{"displayName":"김진우","userId":"12971138652345879224"},"user_tz":-540},"id":"HpdaCB5Fk5cH"},"outputs":[],"source":["import keras\n","from keras import layers\n","from keras import backend as K\n","from keras.models import Model\n","import numpy as np\n","\n","img_shape = (28 , 28 , 1)\n","batch_size = 16\n","latent_dim = 2\n","\n","input_img = keras.Input(shape=img_shape)\n","\n","x = layers.Conv2D(32 , 3 , padding='same' , activation='relu')(input_img)\n","\n","x = layers.Conv2D(64 , 3 , padding='same' , activation='relu' , strides = (2,2))(x)\n","\n","x = layers.Conv2D(64 , 3 , padding='same' , activation='relu')(x)\n","\n","x = layers.Conv2D(64 , 3 , padding='same' , activation='relu')(x)\n","\n","shape_before_flattening = K.int_shape(x)\n","\n","x = layers.Flatten()(x)\n","x = layers.Dense(32 , activation='relu')(x)\n","\n","z_mean = layers.Dense(latent_dim)(x)\n","z_log_var = layers.Dense(latent_dim)(x)"]},{"cell_type":"code","execution_count":21,"metadata":{"executionInfo":{"elapsed":408,"status":"ok","timestamp":1648643865680,"user":{"displayName":"김진우","userId":"12971138652345879224"},"user_tz":-540},"id":"36nFpNh6y_qn"},"outputs":[],"source":["def sampling(args):\n","    z_mean , z_log_var = args\n","\n","    epsilon = K.random_normal(shape=(K.shape(z_mean)[0] , latent_dim) , mean=0. , stddev=1.)\n","\n","    return z_mean + K.exp(0.5 * z_log_var) * epsilon\n","\n","z = layers.Lambda(sampling)([z_mean , z_log_var])"]},{"cell_type":"code","execution_count":22,"metadata":{"executionInfo":{"elapsed":684,"status":"ok","timestamp":1648644058118,"user":{"displayName":"김진우","userId":"12971138652345879224"},"user_tz":-540},"id":"vUr1Q4hr1LQk"},"outputs":[],"source":["decoder_input = layers.Input(K.int_shape(z)[1:])\n","\n","x = layers.Dense(np.prod(shape_before_flattening[1:]),\n","                 activation = 'relu')(decoder_input)\n","\n","x = layers.Reshape(shape_before_flattening[1:])(x)\n","x = layers.Conv2DTranspose(32 , 3,\n","                           padding = 'same' ,\n","                           activation = 'relu' , \n","                           strides=(2,2))(x)\n","x = layers.Conv2D(1 , 3,\n","                  padding = 'same',\n","                  activation = 'sigmoid')(x)\n","\n","decoder = Model(decoder_input , x)\n","\n","z_decoded = decoder(z)"]},{"cell_type":"code","execution_count":26,"metadata":{"executionInfo":{"elapsed":391,"status":"ok","timestamp":1648644494462,"user":{"displayName":"김진우","userId":"12971138652345879224"},"user_tz":-540},"id":"n8DYeUQx1-TH"},"outputs":[],"source":["class CustomVariationalLayer(keras.layers.Layer):\n","\n","    def vae_loss(self , x , z_decoded):\n","        x = K.flatten(x)\n","        z_decoded = K.flatten(z_decoded)\n","        xent_loss = keras.metrics.binary_crossentropy(x , z_decoded)\n","        kl_loss = -5e-4 * K.mean(\n","            1+ z_log_var - K.square(z_mean) - K.exp(z_log_var) , axis = -1)\n","        return K.mean(xent_loss + kl_loss)\n","\n","    def call(self , inputs):\n","        x = inputs[0]\n","        z_decoded = inputs[1]\n","        loss = self.vae_loss(x , z_decoded)\n","        self.add_loss(loss , inputs = inputs)\n","        return x\n","\n","y = CustomVariationalLayer()([input_img , z_decoded])"]},{"cell_type":"code","execution_count":28,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":3505000,"status":"ok","timestamp":1648648297625,"user":{"displayName":"김진우","userId":"12971138652345879224"},"user_tz":-540},"id":"txone7OK3lwD","outputId":"3f91baa0-0006-4382-bc59-f8ed564649d4"},"outputs":[{"name":"stdout","output_type":"stream","text":["WARNING:tensorflow:Output custom_variational_layer_1 missing from loss dictionary. We assume this was done on purpose. The fit and evaluate APIs will not be expecting any data to be passed to custom_variational_layer_1.\n","Model: \"model_2\"\n","__________________________________________________________________________________________________\n"," Layer (type)                   Output Shape         Param #     Connected to                     \n","==================================================================================================\n"," input_2 (InputLayer)           [(None, 28, 28, 1)]  0           []                               \n","                                                                                                  \n"," conv2d (Conv2D)                (None, 28, 28, 32)   320         ['input_2[0][0]']                \n","                                                                                                  \n"," conv2d_1 (Conv2D)              (None, 14, 14, 64)   18496       ['conv2d[0][0]']                 \n","                                                                                                  \n"," conv2d_2 (Conv2D)              (None, 14, 14, 64)   36928       ['conv2d_1[0][0]']               \n","                                                                                                  \n"," conv2d_3 (Conv2D)              (None, 14, 14, 64)   36928       ['conv2d_2[0][0]']               \n","                                                                                                  \n"," flatten (Flatten)              (None, 12544)        0           ['conv2d_3[0][0]']               \n","                                                                                                  \n"," dense (Dense)                  (None, 32)           401440      ['flatten[0][0]']                \n","                                                                                                  \n"," dense_1 (Dense)                (None, 2)            66          ['dense[0][0]']                  \n","                                                                                                  \n"," dense_2 (Dense)                (None, 2)            66          ['dense[0][0]']                  \n","                                                                                                  \n"," lambda_1 (Lambda)              (None, 2)            0           ['dense_1[0][0]',                \n","                                                                  'dense_2[0][0]']                \n","                                                                                                  \n"," model (Functional)             (None, 28, 28, 1)    56385       ['lambda_1[0][0]']               \n","                                                                                                  \n"," custom_variational_layer_1 (Cu  (None, 28, 28, 1)   0           ['input_2[0][0]',                \n"," stomVariationalLayer)                                            'model[0][0]']                  \n","                                                                                                  \n","==================================================================================================\n","Total params: 550,629\n","Trainable params: 550,629\n","Non-trainable params: 0\n","__________________________________________________________________________________________________\n","Train on 60000 samples, validate on 10000 samples\n","Epoch 1/10\n","60000/60000 [==============================] - ETA: 0s - loss: 1676455899.0773"]},{"name":"stderr","output_type":"stream","text":["/usr/local/lib/python3.7/dist-packages/keras/engine/training_v1.py:2057: UserWarning: `Model.state_updates` will be removed in a future version. This property should not be used in TensorFlow 2.0, as `updates` are applied automatically.\n","  updates = self.state_updates\n"]},{"name":"stdout","output_type":"stream","text":["\u0008\u0008\u0008\u0008\u0008\u0008\u0008\u0008\u0008\u0008\u0008\u0008\u0008\u0008\u0008\u0008\u0008\u0008\u0008\u0008\u0008\u0008\u0008\u0008\u0008\u0008\u0008\u0008\u0008\u0008\u0008\u0008\u0008\u0008\u0008\u0008\u0008\u0008\u0008\u0008\u0008\u0008\u0008\u0008\u0008\u0008\u0008\u0008\u0008\u0008\u0008\u0008\u0008\u0008\u0008\u0008\u0008\u0008\u0008\u0008\u0008\u0008\u0008\u0008\u0008\u0008\u0008\u0008\u0008\u0008\u0008\u0008\u0008\u0008\u0008\u0008\u0008\u0008\r60000/60000 [==============================] - 434s 7ms/sample - loss: 1676455899.0773 - val_loss: 0.1994\n","Epoch 2/10\n","60000/60000 [==============================] - 417s 7ms/sample - loss: 0.1952 - val_loss: 0.1917\n","Epoch 3/10\n","60000/60000 [==============================] - 319s 5ms/sample - loss: 0.1907 - val_loss: 0.1891\n","Epoch 4/10\n","60000/60000 [==============================] - 318s 5ms/sample - loss: 0.1883 - val_loss: 0.1874\n","Epoch 5/10\n","60000/60000 [==============================] - 319s 5ms/sample - loss: 0.1868 - val_loss: 0.1879\n","Epoch 6/10\n","60000/60000 [==============================] - 319s 5ms/sample - loss: 0.1857 - val_loss: 0.1856\n","Epoch 7/10\n","60000/60000 [==============================] - 322s 5ms/sample - loss: 0.1848 - val_loss: 0.1841\n","Epoch 8/10\n","60000/60000 [==============================] - 327s 5ms/sample - loss: 0.1840 - val_loss: 0.1835\n","Epoch 9/10\n","60000/60000 [==============================] - 404s 7ms/sample - loss: 0.1833 - val_loss: 0.1837\n","Epoch 10/10\n","60000/60000 [==============================] - 324s 5ms/sample - loss: 0.1828 - val_loss: 0.1832\n"]},{"data":{"text/plain":["\u003ckeras.callbacks.History at 0x7f93b73a3d90\u003e"]},"execution_count":28,"metadata":{},"output_type":"execute_result"}],"source":["from keras.datasets import mnist\n","\n","vae = Model(input_img , y)\n","vae.compile(optimizer='rmsprop' , loss = None)\n","vae.summary()\n","\n","(x_train, _) , (x_test , y_test) = mnist.load_data()\n","\n","x_train = x_train.astype('float32') / 255.\n","x_train = x_train.reshape(x_train.shape +(1,))\n","x_test = x_test.astype('float32') / 255.\n","x_test = x_test.reshape(x_test.shape + (1,))\n","\n","vae.fit(x=x_train , y=None,\n","        shuffle=True,\n","        epochs=10,\n","        batch_size=batch_size,\n","        validation_data = (x_test , None))\n"]},{"cell_type":"code","execution_count":30,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":651},"executionInfo":{"elapsed":5337,"status":"ok","timestamp":1648648364747,"user":{"displayName":"김진우","userId":"12971138652345879224"},"user_tz":-540},"id":"G91tieSz4wN9","outputId":"b0683655-fd1c-42b5-e7a7-6c3b4bd0b23d"},"outputs":[{"name":"stderr","output_type":"stream","text":["/usr/local/lib/python3.7/dist-packages/keras/engine/training_v1.py:2079: UserWarning: `Model.state_updates` will be removed in a future version. This property should not be used in TensorFlow 2.0, as `updates` are applied automatically.\n","  updates=self.state_updates,\n"]},{"data":{"image/png":"\n","text/plain":["\u003cFigure size 720x720 with 1 Axes\u003e"]},"metadata":{},"output_type":"display_data"}],"source":["import matplotlib.pyplot as plt\n","from scipy.stats import norm\n","\n","n = 15\n","digit_size = 28\n","figure = np.zeros((digit_size * n , digit_size * n))\n","grid_x = norm.ppf(np.linspace(0.05 , 0.95 , n))\n","grid_y = norm.ppf(np.linspace(0.05 , 0.95 , n))\n","\n","for i , yi in enumerate(grid_x):\n","    for j , xi in enumerate(grid_y):\n","        z_sample = np.array([[xi , yi]])\n","        z_sample = np.tile(z_sample , batch_size).reshape(batch_size , 2)\n","        x_decoded = decoder.predict(z_sample , batch_size = batch_size)\n","\n","        digit = x_decoded[0].reshape(digit_size , digit_size)\n","        figure[i * digit_size : (i+1) * digit_size,\n","               j * digit_size : (j+1) * digit_size] = digit\n","\n","plt.figure(figsize=(10 , 10))\n","plt.imshow(figure , cmap='Greys_r')\n","plt.show()"]},{"cell_type":"markdown","metadata":{"id":"OR-hWoaU6-nX"},"source":["### 8-4-4 정리"]},{"cell_type":"markdown","metadata":{"id":"mpGeJu5RBzJ1"},"source":["## 8-5 적대적 생성 신경망 소개"]},{"cell_type":"markdown","metadata":{"id":"-BAmGKIPCXfH"},"source":["### 8-5-1 GAN 구현 방법"]},{"cell_type":"markdown","metadata":{"id":"MREJQ7LrDAJL"},"source":["### 8-5-2 훈련 방법"]},{"cell_type":"markdown","metadata":{"id":"aJ-4cNF7Da06"},"source":["### 8-5-3 생성자"]},{"cell_type":"code","execution_count":40,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":567,"status":"ok","timestamp":1648649474344,"user":{"displayName":"김진우","userId":"12971138652345879224"},"user_tz":-540},"id":"oKD_WtlU66_4","outputId":"1f74486f-2262-485f-d8db-a9195d0a4352"},"outputs":[{"name":"stdout","output_type":"stream","text":["Model: \"model_8\"\n","_________________________________________________________________\n"," Layer (type)                Output Shape              Param #   \n","=================================================================\n"," input_12 (InputLayer)       [(None, 32)]              0         \n","                                                                 \n"," dense_12 (Dense)            (None, 32768)             1081344   \n","                                                                 \n"," leaky_re_lu_29 (LeakyReLU)  (None, 32768)             0         \n","                                                                 \n"," reshape_4 (Reshape)         (None, 16, 16, 128)       0         \n","                                                                 \n"," conv2d_33 (Conv2D)          (None, 16, 16, 256)       819456    \n","                                                                 \n"," leaky_re_lu_30 (LeakyReLU)  (None, 16, 16, 256)       0         \n","                                                                 \n"," conv2d_34 (Conv2D)          (None, 16, 16, 256)       1638656   \n","                                                                 \n"," leaky_re_lu_31 (LeakyReLU)  (None, 16, 16, 256)       0         \n","                                                                 \n"," conv2d_35 (Conv2D)          (None, 16, 16, 256)       1638656   \n","                                                                 \n"," leaky_re_lu_32 (LeakyReLU)  (None, 16, 16, 256)       0         \n","                                                                 \n"," conv2d_36 (Conv2D)          (None, 16, 16, 3)         37635     \n","                                                                 \n","=================================================================\n","Total params: 5,215,747\n","Trainable params: 5,215,747\n","Non-trainable params: 0\n","_________________________________________________________________\n"]}],"source":["import keras\n","from keras import layers\n","import numpy as np\n","\n","latent_dim = 32\n","height = 32\n","width = 32\n","channels = 3\n","\n","generator_input = keras.Input(shape=(latent_dim,))\n","\n","x = layers.Dense(128 * 16 * 16)(generator_input)\n","x = layers.LeakyReLU()(x)\n","x = layers.Reshape((16 , 16, 128))(x)\n","\n","x = layers.Conv2D(256 , 5 , padding='same')(x)\n","x = layers.LeakyReLU()(x)\n","\n","x = layers.Conv2D(256 , 5 , padding='same')(x)\n","x = layers.LeakyReLU()(x)\n","x = layers.Conv2D(256 , 5 , padding = 'same')(x)\n","x = layers.LeakyReLU()(x)\n","\n","x = layers.Conv2D(channels , 7 , activation='tanh' , padding='same')(x)\n","generator = keras.models.Model(generator_input , x)\n","generator.summary()"]},{"cell_type":"markdown","metadata":{"id":"BJ9gEinfEjE9"},"source":["### 8-5-4 판별자"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"cz5skUenEimD"},"outputs":[{"name":"stdout","output_type":"stream","text":["Model: \"model_13\"\n","_________________________________________________________________\n"," Layer (type)                Output Shape              Param #   \n","=================================================================\n"," input_17 (InputLayer)       [(None, 32, 32, 3)]       0         \n","                                                                 \n"," conv2d_53 (Conv2D)          (None, 30, 30, 128)       3584      \n","                                                                 \n"," leaky_re_lu_49 (LeakyReLU)  (None, 30, 30, 128)       0         \n","                                                                 \n"," conv2d_54 (Conv2D)          (None, 14, 14, 128)       262272    \n","                                                                 \n"," leaky_re_lu_50 (LeakyReLU)  (None, 14, 14, 128)       0         \n","                                                                 \n"," conv2d_55 (Conv2D)          (None, 6, 6, 128)         262272    \n","                                                                 \n"," leaky_re_lu_51 (LeakyReLU)  (None, 6, 6, 128)         0         \n","                                                                 \n"," conv2d_56 (Conv2D)          (None, 2, 2, 128)         262272    \n","                                                                 \n"," leaky_re_lu_52 (LeakyReLU)  (None, 2, 2, 128)         0         \n","                                                                 \n"," flatten_10 (Flatten)        (None, 512)               0         \n","                                                                 \n"," dropout_9 (Dropout)         (None, 512)               0         \n","                                                                 \n"," dense_17 (Dense)            (None, 1)                 513       \n","                                                                 \n","=================================================================\n","Total params: 790,913\n","Trainable params: 790,913\n","Non-trainable params: 0\n","_________________________________________________________________\n","Model: \"model_13\"\n","_________________________________________________________________\n"," Layer (type)                Output Shape              Param #   \n","=================================================================\n"," input_17 (InputLayer)       [(None, 32, 32, 3)]       0         \n","                                                                 \n"," conv2d_53 (Conv2D)          (None, 30, 30, 128)       3584      \n","                                                                 \n"," leaky_re_lu_49 (LeakyReLU)  (None, 30, 30, 128)       0         \n","                                                                 \n"," conv2d_54 (Conv2D)          (None, 14, 14, 128)       262272    \n","                                                                 \n"," leaky_re_lu_50 (LeakyReLU)  (None, 14, 14, 128)       0         \n","                                                                 \n"," conv2d_55 (Conv2D)          (None, 6, 6, 128)         262272    \n","                                                                 \n"," leaky_re_lu_51 (LeakyReLU)  (None, 6, 6, 128)         0         \n","                                                                 \n"," conv2d_56 (Conv2D)          (None, 2, 2, 128)         262272    \n","                                                                 \n"," leaky_re_lu_52 (LeakyReLU)  (None, 2, 2, 128)         0         \n","                                                                 \n"," flatten_10 (Flatten)        (None, 512)               0         \n","                                                                 \n"," dropout_9 (Dropout)         (None, 512)               0         \n","                                                                 \n"," dense_17 (Dense)            (None, 1)                 513       \n","                                                                 \n","=================================================================\n","Total params: 790,913\n","Trainable params: 790,913\n","Non-trainable params: 0\n","_________________________________________________________________\n"]},{"name":"stderr","output_type":"stream","text":["/usr/local/lib/python3.7/dist-packages/keras/optimizer_v2/rmsprop.py:130: UserWarning: The `lr` argument is deprecated, use `learning_rate` instead.\n","  super(RMSprop, self).__init__(name, **kwargs)\n"]}],"source":["discriminator_input = layers.Input(shape=(height , width , channels))\n","x = layers.Conv2D(128 , 3)(discriminator_input)\n","x = layers.LeakyReLU()(x)\n","x = layers.Conv2D(128 , 4 , strides=2)(x)\n","x = layers.LeakyReLU()(x)\n","x = layers.Conv2D(128 , 4 , strides=2)(x)\n","x = layers.LeakyReLU()(x)\n","x = layers.Conv2D(128 , 4 , strides=2)(x)\n","x = layers.LeakyReLU()(x)\n","x = layers.Flatten()(x)\n","\n","x = layers.Dropout(0.4)(x)\n","\n","x = layers.Dense(1 , activation='sigmoid')(x)\n","\n","discriminator = keras.models.Model( discriminator_input , x )\n","discriminator.summary()\n","\n","discriminator.summary()\n","\n","discriminator_optimizer = tf.keras.optimizers.RMSprop(\n","    lr = 0.0008 ,\n","    clipvalue=1.0,\n","    decay=1e-8)\n","\n","discriminator.compile(optimizer=discriminator_optimizer, loss = 'binary_crossentropy')"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"D-AYUJOtKSP_"},"outputs":[],"source":[""]}],"metadata":{"accelerator":"GPU","colab":{"authorship_tag":"ABX9TyPvRU2tkqEOhDCUJMSlku2Q","mount_file_id":"1zH40Q628_oI6w9XaPX64VRcggJ9sYvjX","name":"케라스 창시자 8단원","version":""},"kernelspec":{"display_name":"Python 3","name":"python3"},"language_info":{"name":"python"}},"nbformat":4,"nbformat_minor":0}