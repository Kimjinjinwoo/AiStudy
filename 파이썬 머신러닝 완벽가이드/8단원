{"cells":[{"cell_type":"markdown","metadata":{"id":"qrT3e0JF2PAF"},"source":["# 8 텍스트 분석"]},{"cell_type":"markdown","metadata":{"id":"8uBbHWukKW_8"},"source":["## 8-1 텍스트 분석 이해"]},{"cell_type":"markdown","metadata":{"id":"cnpTiVf3bDG3"},"source":["### 텍스트 분석 수행 프로세스"]},{"cell_type":"markdown","metadata":{"id":"r1rCeFxfbGzF"},"source":["### 파이썬 기반의 NLP, 텍스트 분석 패키지"]},{"cell_type":"markdown","metadata":{"id":"9wN8yUzJlO9v"},"source":["## 8-2 텍스트 사전 준비 작업(텍스트 전처리) - 텍스트 정규화"]},{"cell_type":"markdown","metadata":{"id":"-IH72gQFmQCZ"},"source":["### 클렌징"]},{"cell_type":"markdown","metadata":{"id":"pH4Z3gT0mTij"},"source":["### 텍스트 토큰환"]},{"cell_type":"markdown","metadata":{"id":"VJVyvz6emXjw"},"source":["#### 문장 토큰화"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":439,"status":"ok","timestamp":1643372846193,"user":{"displayName":"김진우","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Ggb7NCfP7aAu0Hj8nNhErTzUou1vuaWKzjtXq6Auw=s64","userId":"12971138652345879224"},"user_tz":-540},"id":"otbDp1vpnLSm","outputId":"6e479c1b-b16b-4b6c-e533-43497e5017cb"},"outputs":[{"name":"stdout","output_type":"stream","text":["[nltk_data] Downloading package punkt to /root/nltk_data...\n","[nltk_data]   Package punkt is already up-to-date!\n","<class 'list'> 3\n","['The Matrix is everywhere its all around us, here even in this room.', 'You can see it out your window or on your television.', 'You feel it when you go to work, or go to church or pay your taxes.']\n"]}],"source":["from nltk import sent_tokenize\n","\n","import nltk\n","nltk.download('punkt')\n","\n","text_sample = 'The Matrix is everywhere its all around us, here even in this room. \\\n","               You can see it out your window or on your television. \\\n","               You feel it when you go to work, or go to church or pay your taxes.'\n","sentences = sent_tokenize(text=text_sample)\n","print(type(sentences),len(sentences))\n","print(sentences)"]},{"cell_type":"markdown","metadata":{"id":"KCy6i-ZVmvBq"},"source":["#### 단어 토큰화"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":431,"status":"ok","timestamp":1643372172279,"user":{"displayName":"김진우","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Ggb7NCfP7aAu0Hj8nNhErTzUou1vuaWKzjtXq6Auw=s64","userId":"12971138652345879224"},"user_tz":-540},"id":"rFl8tBCn2MrC","outputId":"7be6e988-5516-431d-f42e-155be8cbffdd"},"outputs":[{"name":"stdout","output_type":"stream","text":["<class 'list'> 15\n","['The', 'Matrix', 'is', 'everywhere', 'its', 'all', 'around', 'us', ',', 'here', 'even', 'in', 'this', 'room', '.']\n"]}],"source":["from nltk import word_tokenize\n","\n","sentence = \"The Matrix is everywhere its all around us , here even in this room.\"\n","words = word_tokenize(sentence)\n","print(type(words) , len(words))\n","print(words)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":280,"status":"ok","timestamp":1643372955689,"user":{"displayName":"김진우","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Ggb7NCfP7aAu0Hj8nNhErTzUou1vuaWKzjtXq6Auw=s64","userId":"12971138652345879224"},"user_tz":-540},"id":"4rG03oL2nFWy","outputId":"ba1b28cc-9760-4f0a-8a78-a97cf1038be0"},"outputs":[{"name":"stdout","output_type":"stream","text":["<class 'list'> 3\n","[['The', 'Matrix', 'is', 'everywhere', 'its', 'all', 'around', 'us', ',', 'here', 'even', 'in', 'this', 'room', '.'], ['You', 'can', 'see', 'it', 'out', 'your', 'window', 'or', 'on', 'your', 'television', '.'], ['You', 'feel', 'it', 'when', 'you', 'go', 'to', 'work', ',', 'or', 'go', 'to', 'church', 'or', 'pay', 'your', 'taxes', '.']]\n"]}],"source":["from nltk import word_tokenize , sent_tokenize\n","\n","#여러 개의 문장으로 된 입력 데이터를 문장별로 단어 토큰화하게 만드는 함수 생성\n","def tokenize_text(text):\n","\n","    # 문장별로 분리 토큰\n","    sentences = sent_tokenize(text)\n","    #분리된 문장별 단어 토큰화\n","    word_tokens = [word_tokenize(sentence) for sentence in sentences]\n","\n","    return word_tokens\n","\n","# 여러 문장에 대해 문장별 단어 토큰화 수행.\n","word_tokens = tokenize_text(text_sample)\n","print(type(word_tokens) , len(word_tokens))\n","print(word_tokens)"]},{"cell_type":"markdown","metadata":{"id":"1l-McQftoCky"},"source":["### 스톱 워드 제거"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":334,"status":"ok","timestamp":1643372958028,"user":{"displayName":"김진우","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Ggb7NCfP7aAu0Hj8nNhErTzUou1vuaWKzjtXq6Auw=s64","userId":"12971138652345879224"},"user_tz":-540},"id":"zZeU36a2oA8J","outputId":"0c42cd25-6575-4887-8f5c-42650bd45583"},"outputs":[{"name":"stdout","output_type":"stream","text":["[nltk_data] Downloading package stopwords to /root/nltk_data...\n","[nltk_data]   Package stopwords is already up-to-date!\n"]},{"data":{"text/plain":["True"]},"execution_count":10,"metadata":{},"output_type":"execute_result"}],"source":["import nltk\n","nltk.download( 'stopwords' )"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":6,"status":"ok","timestamp":1643372958448,"user":{"displayName":"김진우","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Ggb7NCfP7aAu0Hj8nNhErTzUou1vuaWKzjtXq6Auw=s64","userId":"12971138652345879224"},"user_tz":-540},"id":"KgUbIpdCo8Aw","outputId":"5d4b490a-2d43-4547-b94f-e2841e906bd4"},"outputs":[{"name":"stdout","output_type":"stream","text":["영어 stop words 개수: 179\n","['i', 'me', 'my', 'myself', 'we', 'our', 'ours', 'ourselves', 'you', \"you're\", \"you've\", \"you'll\", \"you'd\", 'your', 'yours', 'yourself', 'yourselves', 'he', 'him', 'his']\n"]}],"source":["print('영어 stop words 개수:' , len(nltk.corpus.stopwords.words('english')))\n","print(nltk.corpus.stopwords.words('english')[:20])"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":448,"status":"ok","timestamp":1643373205242,"user":{"displayName":"김진우","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Ggb7NCfP7aAu0Hj8nNhErTzUou1vuaWKzjtXq6Auw=s64","userId":"12971138652345879224"},"user_tz":-540},"id":"ou84tInlpKc-","outputId":"4cbf5608-a807-45b6-8317-5898b5aec720"},"outputs":[{"name":"stdout","output_type":"stream","text":["[['matrix', 'everywhere', 'around', 'us', ',', 'even', 'room', '.'], ['see', 'window', 'television', '.'], ['feel', 'go', 'work', ',', 'go', 'church', 'pay', 'taxes', '.']]\n"]}],"source":["import nltk\n","\n","stopwords = nltk.corpus.stopwords.words('english')\n","all_tokens = []\n","# 위 예제에서 3개의 문장별로 얻은 word_tokens list에 대해 스톱 워드를 제거하는 반복문\n","for sentence in word_tokens:\n","    filtered_words = []\n","    # 개별 문장별로 토큰화된 문장 list에 대해 스톱 워드를 제거하는 반복문\n","    for word in sentence:\n","        # 소문자로 모두 변환 합니다.\n","        word = word.lower()\n","        # 토큰화된 개별 단어가 스톱 워드의 단어에 포함되지 않으면 word_tokens에 추가\n","        if word not in stopwords:\n","            filtered_words.append(word)\n","    all_tokens.append(filtered_words)\n","\n","print(all_tokens)"]},{"cell_type":"markdown","metadata":{"id":"tu48mGnurUV8"},"source":["### Stemming과 Lemmatization"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":476,"status":"ok","timestamp":1643373524051,"user":{"displayName":"김진우","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Ggb7NCfP7aAu0Hj8nNhErTzUou1vuaWKzjtXq6Auw=s64","userId":"12971138652345879224"},"user_tz":-540},"id":"39aM6jiMqVWL","outputId":"51d9c6c2-c676-44e0-ee11-37172a9e6098"},"outputs":[{"name":"stdout","output_type":"stream","text":["work work work\n","amus amus amus\n","happy happiest\n","fant fanciest\n"]}],"source":["from nltk.stem import LancasterStemmer\n","stemmer = LancasterStemmer()\n","\n","print(stemmer.stem('working') , stemmer.stem('works') , stemmer.stem('worked') )\n","print(stemmer.stem('amusing') , stemmer.stem('amuses') , stemmer.stem('amused') )\n","print(stemmer.stem('happier') , stemmer.stem('happiest'))\n","print(stemmer.stem('fancier') , stemmer.stem('fanciest'))"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":2537,"status":"ok","timestamp":1643373746127,"user":{"displayName":"김진우","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Ggb7NCfP7aAu0Hj8nNhErTzUou1vuaWKzjtXq6Auw=s64","userId":"12971138652345879224"},"user_tz":-540},"id":"gPglcxe8se_g","outputId":"f202306f-62a2-436b-f39f-8021dd3d11f5"},"outputs":[{"name":"stdout","output_type":"stream","text":["[nltk_data] Downloading package wordnet to /root/nltk_data...\n","[nltk_data]   Package wordnet is already up-to-date!\n","amuse amuse amuse\n","happy happy\n","fancy fancy\n"]}],"source":["from nltk.stem import WordNetLemmatizer\n","import nltk\n","nltk.download('wordnet')\n","\n","lemma = WordNetLemmatizer()\n","print(lemma.lemmatize('amusing' , 'v') , lemma.lemmatize('amuses' , 'v') , lemma.lemmatize('amuse' , 'v'))\n","print(lemma.lemmatize('happier' , 'a') , lemma.lemmatize('happiest' , 'a'))\n","print(lemma.lemmatize('fancier' , 'a') , lemma.lemmatize('fanciest' , 'a'))"]},{"cell_type":"markdown","metadata":{"id":"mDxyoC_QtgVy"},"source":["## 8-3 Bag of Words - BOW"]},{"cell_type":"markdown","metadata":{"id":"A7b_5pCvuQNl"},"source":["### BOW 피처 벡터화"]},{"cell_type":"markdown","metadata":{"id":"KxsGQTE-vwpS"},"source":["### 사이킷런의 Count 및 TF-IDF 벡터화 구현: CountVectorizer, TfidfVectorizer"]},{"cell_type":"markdown","metadata":{"id":"asXXoTeExNuo"},"source":["### BOW 벡터화를 위한 희소 행렬"]},{"cell_type":"markdown","metadata":{"id":"66QdNUxXx8Uw"},"source":["### 희소 행렬 -COO 형식"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"BNZEvO22s3XG"},"outputs":[],"source":["import numpy as np\n","\n","dense = np.array( [ [3,0,1] , [0,2,0] ])"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"MUxKXsE8yfWi"},"outputs":[],"source":["from scipy import sparse\n","\n","# 0이 아닌 데이터 추출\n","data = np.array([3,1,2])\n","\n","# 행 위치와 열 위치를 각각 배열로 생성\n","row_pos = np.array([0,0,1])\n","col_pos = np.array([0,2,1])\n","\n","# sparse 패키지의 coo_matrix를 이용해 COO 형식으로 희소 행렬 생성\n","sparse_coo = sparse.coo_matrix((data , (row_pos , col_pos)))"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":3,"status":"ok","timestamp":1643375267789,"user":{"displayName":"김진우","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Ggb7NCfP7aAu0Hj8nNhErTzUou1vuaWKzjtXq6Auw=s64","userId":"12971138652345879224"},"user_tz":-540},"id":"R9g9QM0-zC4_","outputId":"8cc5542b-d650-4411-cf9e-7104c4acf414"},"outputs":[{"data":{"text/plain":["array([[3, 0, 1],\n","       [0, 2, 0]])"]},"execution_count":19,"metadata":{},"output_type":"execute_result"}],"source":["sparse_coo.toarray()"]},{"cell_type":"markdown","metadata":{"id":"QXGthLJNzLJE"},"source":["### 희소 행렬 - CSR 형식"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":5,"status":"ok","timestamp":1643375861524,"user":{"displayName":"김진우","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Ggb7NCfP7aAu0Hj8nNhErTzUou1vuaWKzjtXq6Auw=s64","userId":"12971138652345879224"},"user_tz":-540},"id":"ZdXlYnKLzI0W","outputId":"37c49a0b-9cb3-4718-9920-0cbf1748f6ed"},"outputs":[{"name":"stdout","output_type":"stream","text":["COO 변환된 데이터가 제대로 되었는지 다시 Dense로 출력 확인\n","[[0 0 1 0 0 5]\n"," [1 4 0 3 2 5]\n"," [0 6 0 3 0 0]\n"," [2 0 0 0 0 0]\n"," [0 0 0 7 0 8]\n"," [1 0 0 0 0 0]]\n","CSR 변환된 데이터가 제대로 되었는지 다시 Dense로 출력 확인\n","[[0 0 1 0 0 5]\n"," [1 4 0 3 2 5]\n"," [0 6 0 3 0 0]\n"," [2 0 0 0 0 0]\n"," [0 0 0 7 0 8]\n"," [1 0 0 0 0 0]]\n"]}],"source":["from scipy import sparse\n","\n","dense2 = np.array([[0,0,1,0,0,5],\n","                  [1,4,0,3,2,5],\n","                  [0,6,0,3,0,0],\n","                  [2,0,0,0,0,0],\n","                  [0,0,0,7,0,8],\n","                  [1,0,0,0,0,0]])\n","\n","# 0이 아닌 데이터 추출\n","data2 = np.array([1,5,1,4,3,2,5,6,3,2,7,8,1])\n","\n","# 행 위치와 열 위치를 각각 array로 생성\n","row_pos = np.array([0,0,1,1,1,1,1,2,2,3,4,4,5])\n","col_pos = np.array([2,5,0,1,3,4,5,1,3,0,3,5,0])\n","\n","# COO 형식으로 변환\n","sparse_coo = sparse.coo_matrix((data2 , (row_pos, col_pos)))\n","\n","# 행 위치 배열의 고유한 값의 시작 위치 인덱스를 배열로 생성\n","row_pos_ind = np.array([0,2,7,9,10,12,13])\n","\n","# CRS 형식으로 변환\n","sparse_csr = sparse.csr_matrix((data2 , col_pos , row_pos_ind))\n","\n","print('COO 변환된 데이터가 제대로 되었는지 다시 Dense로 출력 확인')\n","print(sparse_coo.toarray())\n","print('CSR 변환된 데이터가 제대로 되었는지 다시 Dense로 출력 확인')\n","print(sparse_csr.toarray())"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"AqQhOjuO1RBy"},"outputs":[],"source":["dense3 = np.array([[0,0,1,0,0,5],\n","                  [1,4,0,3,2,5],\n","                  [0,6,0,3,0,0],\n","                  [2,0,0,0,0,0],\n","                  [0,0,0,7,0,8],\n","                  [1,0,0,0,0,0]])\n","\n","coo = sparse.coo_matrix(dense3)\n","csr = sparse.csr_matrix(dense3)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":5,"status":"ok","timestamp":1643375975210,"user":{"displayName":"김진우","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Ggb7NCfP7aAu0Hj8nNhErTzUou1vuaWKzjtXq6Auw=s64","userId":"12971138652345879224"},"user_tz":-540},"id":"QDoOzWr21yjI","outputId":"a4f6dcc2-6886-4e0f-e04e-95077da3c14a"},"outputs":[{"name":"stdout","output_type":"stream","text":["  (0, 2)\t1\n","  (0, 5)\t5\n","  (1, 0)\t1\n","  (1, 1)\t4\n","  (1, 3)\t3\n","  (1, 4)\t2\n","  (1, 5)\t5\n","  (2, 1)\t6\n","  (2, 3)\t3\n","  (3, 0)\t2\n","  (4, 3)\t7\n","  (4, 5)\t8\n","  (5, 0)\t1\n","####\n","  (0, 2)\t1\n","  (0, 5)\t5\n","  (1, 0)\t1\n","  (1, 1)\t4\n","  (1, 3)\t3\n","  (1, 4)\t2\n","  (1, 5)\t5\n","  (2, 1)\t6\n","  (2, 3)\t3\n","  (3, 0)\t2\n","  (4, 3)\t7\n","  (4, 5)\t8\n","  (5, 0)\t1\n"]}],"source":["print(coo)\n","print('####')\n","print(csr)"]},{"cell_type":"markdown","metadata":{"id":"FktVF0Da15El"},"source":["## 8-4 텍스트 분류 실습 - 20 뉴스그룹 분류"]},{"cell_type":"markdown","metadata":{"id":"3NnbGYSO3S_0"},"source":["### 텍스트 정규화"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"h2ruXc7511WS"},"outputs":[],"source":["from sklearn.datasets import fetch_20newsgroups\n","\n","news_data = fetch_20newsgroups(subset='all' , random_state = 156)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":269,"status":"ok","timestamp":1643376552641,"user":{"displayName":"김진우","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Ggb7NCfP7aAu0Hj8nNhErTzUou1vuaWKzjtXq6Auw=s64","userId":"12971138652345879224"},"user_tz":-540},"id":"wgQW5qWm35Qe","outputId":"3e483458-2fba-42dd-d2dc-8866a6f274a1"},"outputs":[{"name":"stdout","output_type":"stream","text":["dict_keys(['data', 'filenames', 'target_names', 'target', 'DESCR'])\n"]}],"source":["print(news_data.keys())"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":273,"status":"ok","timestamp":1643376654782,"user":{"displayName":"김진우","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Ggb7NCfP7aAu0Hj8nNhErTzUou1vuaWKzjtXq6Auw=s64","userId":"12971138652345879224"},"user_tz":-540},"id":"_airA98x4AOS","outputId":"163af86a-d468-42b8-e393-8d5963fe3883"},"outputs":[{"name":"stdout","output_type":"stream","text":["target 클래스의 값과 분포도 \n"," 0     799\n","1     973\n","2     985\n","3     982\n","4     963\n","5     988\n","6     975\n","7     990\n","8     996\n","9     994\n","10    999\n","11    991\n","12    984\n","13    990\n","14    987\n","15    997\n","16    910\n","17    940\n","18    775\n","19    628\n","dtype: int64\n","target 클래스의 이름들 \n"," ['alt.atheism', 'comp.graphics', 'comp.os.ms-windows.misc', 'comp.sys.ibm.pc.hardware', 'comp.sys.mac.hardware', 'comp.windows.x', 'misc.forsale', 'rec.autos', 'rec.motorcycles', 'rec.sport.baseball', 'rec.sport.hockey', 'sci.crypt', 'sci.electronics', 'sci.med', 'sci.space', 'soc.religion.christian', 'talk.politics.guns', 'talk.politics.mideast', 'talk.politics.misc', 'talk.religion.misc']\n"]}],"source":["import pandas as pd\n","\n","print('target 클래스의 값과 분포도 \\n' , pd.Series(news_data.target).value_counts().sort_index())\n","print('target 클래스의 이름들 \\n', news_data.target_names)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":5,"status":"ok","timestamp":1643376668036,"user":{"displayName":"김진우","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Ggb7NCfP7aAu0Hj8nNhErTzUou1vuaWKzjtXq6Auw=s64","userId":"12971138652345879224"},"user_tz":-540},"id":"bvyPiuGE4bVB","outputId":"05ff0879-af0b-481f-ea66-4878eccb3f49"},"outputs":[{"name":"stdout","output_type":"stream","text":["From: egreen@east.sun.com (Ed Green - Pixel Cruncher)\n","Subject: Re: Observation re: helmets\n","Organization: Sun Microsystems, RTP, NC\n","Lines: 21\n","Distribution: world\n","Reply-To: egreen@east.sun.com\n","NNTP-Posting-Host: laser.east.sun.com\n","\n","In article 211353@mavenry.altcit.eskimo.com, maven@mavenry.altcit.eskimo.com (Norman Hamer) writes:\n","> \n","> The question for the day is re: passenger helmets, if you don't know for \n",">certain who's gonna ride with you (like say you meet them at a .... church \n",">meeting, yeah, that's the ticket)... What are some guidelines? Should I just \n",">pick up another shoei in my size to have a backup helmet (XL), or should I \n",">maybe get an inexpensive one of a smaller size to accomodate my likely \n",">passenger? \n","\n","If your primary concern is protecting the passenger in the event of a\n","crash, have him or her fitted for a helmet that is their size.  If your\n","primary concern is complying with stupid helmet laws, carry a real big\n","spare (you can put a big or small head in a big helmet, but not in a\n","small one).\n","\n","---\n","Ed Green, former Ninjaite |I was drinking last night with a biker,\n","  Ed.Green@East.Sun.COM   |and I showed him a picture of you.  I said,\n","DoD #0111  (919)460-8302  |\"Go on, get to know her, you'll like her!\"\n"," (The Grateful Dead) -->  |It seemed like the least I could do...\n","\n","\n"]}],"source":["print(news_data.data[0])"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":1235,"status":"ok","timestamp":1643377019325,"user":{"displayName":"김진우","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Ggb7NCfP7aAu0Hj8nNhErTzUou1vuaWKzjtXq6Auw=s64","userId":"12971138652345879224"},"user_tz":-540},"id":"hmKHHBBI4ebq","outputId":"9f043fb1-295d-4639-c5ea-430786da4875"},"outputs":[{"name":"stdout","output_type":"stream","text":["학습 데이터 크기 11314, 테스트 데이터 크기7532\n"]}],"source":["from sklearn.datasets import fetch_20newsgroups\n","\n","# subset = 'train'으로 학습용 데이터만 추출, remove=('headers' , 'footers' , 'quetes')로 내용만 추출\n","train_news = fetch_20newsgroups(subset = 'train' , remove=('headers' , 'footers' , 'quetes') , random_state=156)\n","X_train = train_news.data \n","y_train = train_news.target\n","\n","# subset = 'test'으로 테스트 데이터만 추출, remove=('headers' , 'footers' , 'quetes')로 내용만 추출\n","test_news = fetch_20newsgroups(subset = 'test' , remove=('headers' , 'footers' , 'quetes') , random_state=156)\n","X_test = test_news.data\n","y_test = test_news.target\n","print('학습 데이터 크기 {0}, 테스트 데이터 크기{1}'.format(len(train_news.data) , len(test_news.data)))"]},{"cell_type":"markdown","metadata":{"id":"dexXuXXH53pC"},"source":["### 피처 벡터화 변환과 머신러닝 모델 학습/예측/평가"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":7303,"status":"ok","timestamp":1643377463476,"user":{"displayName":"김진우","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Ggb7NCfP7aAu0Hj8nNhErTzUou1vuaWKzjtXq6Auw=s64","userId":"12971138652345879224"},"user_tz":-540},"id":"NwWkbs_150BL","outputId":"e81bdcb0-ea6d-4be9-8034-3d14427b5222"},"outputs":[{"name":"stdout","output_type":"stream","text":["학습 데이터 텍스트의 CounterVectorizer Shape: (11314, 114751)\n"]}],"source":["from sklearn.feature_extraction.text import CountVectorizer\n","\n","# Count Vectoriztion으로 피처 백터화 변화 수행.\n","cnt_vect = CountVectorizer()\n","cnt_vect.fit(X_train)\n","X_train_cnt_vect = cnt_vect.transform(X_train)\n","\n","# 학습 데이터로 fit( )된 CountVectorizer를 이용해 테스트 데이터를 피처 벡처화 변환 수행.\n","X_test_cnt_vect = cnt_vect.transform(X_test)\n","\n","print('학습 데이터 텍스트의 CounterVectorizer Shape:' , X_train_cnt_vect.shape )"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":67509,"status":"ok","timestamp":1643377724827,"user":{"displayName":"김진우","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Ggb7NCfP7aAu0Hj8nNhErTzUou1vuaWKzjtXq6Auw=s64","userId":"12971138652345879224"},"user_tz":-540},"id":"S-jDO0id7fFL","outputId":"ffd3a9e6-a348-443a-8987-e05d95da7d1a"},"outputs":[{"name":"stdout","output_type":"stream","text":["CountVectorized Logistic Regression의 예측 정확도는 0.709\n"]},{"name":"stderr","output_type":"stream","text":["/usr/local/lib/python3.7/dist-packages/sklearn/linear_model/_logistic.py:818: ConvergenceWarning: lbfgs failed to converge (status=1):\n","STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n","\n","Increase the number of iterations (max_iter) or scale the data as shown in:\n","    https://scikit-learn.org/stable/modules/preprocessing.html\n","Please also refer to the documentation for alternative solver options:\n","    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression\n","  extra_warning_msg=_LOGISTIC_SOLVER_CONVERGENCE_MSG,\n"]}],"source":["from sklearn.linear_model import LogisticRegression\n","from sklearn.metrics import accuracy_score\n","\n","# LogisticRegression을 이용해 학습/예측/평가 수행\n","lr_clf = LogisticRegression()\n","lr_clf.fit(X_train_cnt_vect , y_train)\n","pred = lr_clf.predict(X_test_cnt_vect)\n","print('CountVectorized Logistic Regression의 예측 정확도는 {0:.3f}'.format(accuracy_score(y_test , pred)))"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":62800,"status":"ok","timestamp":1643377980866,"user":{"displayName":"김진우","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Ggb7NCfP7aAu0Hj8nNhErTzUou1vuaWKzjtXq6Auw=s64","userId":"12971138652345879224"},"user_tz":-540},"id":"dZ4kGavV8QFi","outputId":"aa34f9c0-b6d0-4a24-f723-4b56a4ed59e4"},"outputs":[{"name":"stdout","output_type":"stream","text":["TF-IDF Logistic Regression의 예측 정확도는 0.778\n"]}],"source":["from nltk.metrics.scores import accuracy\n","from sklearn.feature_extraction.text import TfidfVectorizer\n","\n","# TF-IDF 벡터화를 적용해 학습 데이터 세트와 테스트 데이터 세트 변환.\n","tfidf_vect = TfidfVectorizer()\n","tfidf_vect.fit(X_train)\n","X_train_tfidf_vect = tfidf_vect.transform(X_train)\n","X_test_tfidf_vect = tfidf_vect.transform(X_test)\n","\n","# LogisticRegression을 이용해 학습/예측/평가 수행.\n","lr_clf = LogisticRegression()\n","lr_clf.fit(X_train_tfidf_vect, y_train)\n","pred = lr_clf.predict(X_test_tfidf_vect)\n","print('TF-IDF Logistic Regression의 예측 정확도는 {0:.3f}'.format(accuracy_score(y_test , pred)))"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":368941,"status":"ok","timestamp":1643378785182,"user":{"displayName":"김진우","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Ggb7NCfP7aAu0Hj8nNhErTzUou1vuaWKzjtXq6Auw=s64","userId":"12971138652345879224"},"user_tz":-540},"id":"VhqOYp-Z9MIu","outputId":"e04ceab3-deb9-47f9-acb7-4491ebe93b78"},"outputs":[{"name":"stdout","output_type":"stream","text":["TF-IDF Vectorized Logistic Redgression 의 예측 정확도는 0.796\n"]}],"source":["# stop words 필터링을 추가하고 ngram을 기본 (1,1)에서 (1,2)로 변경해 피처 벡터화 적용.\n","tfidf_vect = TfidfVectorizer(stop_words='english' , ngram_range=(1,2), max_df=300 )\n","tfidf_vect.fit(X_train)\n","X_train_tfidf_vect = tfidf_vect.transform(X_train)\n","X_test_tfidf_vect = tfidf_vect.transform(X_test)\n","\n","lr_clf = LogisticRegression()\n","lr_clf.fit(X_train_tfidf_vect , y_train)\n","pred = lr_clf.predict(X_test_tfidf_vect)\n","print('TF-IDF Vectorized Logistic Redgression 의 예측 정확도는 {0:.3f}'.format(accuracy_score(y_test , pred)))"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true,"base_uri":"https://localhost:8080/"},"id":"MH2SzsSO_JYh","outputId":"65b84d2d-7af5-47ac-9c6d-117d8f65babd"},"outputs":[{"name":"stdout","output_type":"stream","text":["Fitting 3 folds for each of 5 candidates, totalling 15 fits\n"]},{"name":"stderr","output_type":"stream","text":["/usr/local/lib/python3.7/dist-packages/sklearn/linear_model/_logistic.py:818: ConvergenceWarning: lbfgs failed to converge (status=1):\n","STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n","\n","Increase the number of iterations (max_iter) or scale the data as shown in:\n","    https://scikit-learn.org/stable/modules/preprocessing.html\n","Please also refer to the documentation for alternative solver options:\n","    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression\n","  extra_warning_msg=_LOGISTIC_SOLVER_CONVERGENCE_MSG,\n","/usr/local/lib/python3.7/dist-packages/sklearn/linear_model/_logistic.py:818: ConvergenceWarning: lbfgs failed to converge (status=1):\n","STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n","\n","Increase the number of iterations (max_iter) or scale the data as shown in:\n","    https://scikit-learn.org/stable/modules/preprocessing.html\n","Please also refer to the documentation for alternative solver options:\n","    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression\n","  extra_warning_msg=_LOGISTIC_SOLVER_CONVERGENCE_MSG,\n","/usr/local/lib/python3.7/dist-packages/sklearn/linear_model/_logistic.py:818: ConvergenceWarning: lbfgs failed to converge (status=1):\n","STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n","\n","Increase the number of iterations (max_iter) or scale the data as shown in:\n","    https://scikit-learn.org/stable/modules/preprocessing.html\n","Please also refer to the documentation for alternative solver options:\n","    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression\n","  extra_warning_msg=_LOGISTIC_SOLVER_CONVERGENCE_MSG,\n","/usr/local/lib/python3.7/dist-packages/sklearn/linear_model/_logistic.py:818: ConvergenceWarning: lbfgs failed to converge (status=1):\n","STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n","\n","Increase the number of iterations (max_iter) or scale the data as shown in:\n","    https://scikit-learn.org/stable/modules/preprocessing.html\n","Please also refer to the documentation for alternative solver options:\n","    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression\n","  extra_warning_msg=_LOGISTIC_SOLVER_CONVERGENCE_MSG,\n","/usr/local/lib/python3.7/dist-packages/sklearn/linear_model/_logistic.py:818: ConvergenceWarning: lbfgs failed to converge (status=1):\n","STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n","\n","Increase the number of iterations (max_iter) or scale the data as shown in:\n","    https://scikit-learn.org/stable/modules/preprocessing.html\n","Please also refer to the documentation for alternative solver options:\n","    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression\n","  extra_warning_msg=_LOGISTIC_SOLVER_CONVERGENCE_MSG,\n","/usr/local/lib/python3.7/dist-packages/sklearn/linear_model/_logistic.py:818: ConvergenceWarning: lbfgs failed to converge (status=1):\n","STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n","\n","Increase the number of iterations (max_iter) or scale the data as shown in:\n","    https://scikit-learn.org/stable/modules/preprocessing.html\n","Please also refer to the documentation for alternative solver options:\n","    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression\n","  extra_warning_msg=_LOGISTIC_SOLVER_CONVERGENCE_MSG,\n","/usr/local/lib/python3.7/dist-packages/sklearn/linear_model/_logistic.py:818: ConvergenceWarning: lbfgs failed to converge (status=1):\n","STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n","\n","Increase the number of iterations (max_iter) or scale the data as shown in:\n","    https://scikit-learn.org/stable/modules/preprocessing.html\n","Please also refer to the documentation for alternative solver options:\n","    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression\n","  extra_warning_msg=_LOGISTIC_SOLVER_CONVERGENCE_MSG,\n"]},{"name":"stdout","output_type":"stream","text":["Logistic Regression best C parameter : {'C': 10}\n","TF-IDF Vectorized Logistic Regression의 예측 정확도는 0.803\n"]}],"source":["from sklearn.model_selection import GridSearchCV\n","\n","# 최적 C값 도출 츄닝 수행. CV는 3 폴드 세트로 설정.\n","params = { 'C' : [0.01 , 0.1 ,1, 5, 10]}\n","grid_cv_lr = GridSearchCV(lr_clf , param_grid=params , cv=3 , scoring='accuracy' , verbose=1)\n","grid_cv_lr.fit(X_train_tfidf_vect, y_train)\n","print('Logistic Regression best C parameter :', grid_cv_lr.best_params_)\n","\n","# 최적 C 값으로 학습된 grid_cv로 예측 및 정확도 평가.\n","pred = grid_cv_lr.predict(X_test_tfidf_vect)\n","print('TF-IDF Vectorized Logistic Regression의 예측 정확도는 {0:.3f}'.format(accuracy_score(y_test , pred)))"]},{"cell_type":"markdown","metadata":{"id":"Cifq9oVRAPMH"},"source":["### 사이킷런 파이프라인(Pipeline) 사용 및 GridSearchCV와의 결합"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"HEPhsxrcANej"},"outputs":[],"source":["from sklearn.pipeline import Pipeline\n","\n","pipeline = Pipeline([('tfidf_vect' , TfidfVectorizer(stop_words='english')),\n","                     ('lr_clf' , LogisticRegression(random_state=156))])"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"7FANfbSbA2Gq"},"outputs":[],"source":["from sklearn.pipeline import Pipeline\n","\n","# TfidfVectorizer 객체를 tfidf_vect로 , LogisticRegression 객체를 lr_clf로 생성하는 Pipeline 생성.\n","pipeline = Pipeline([\n","                     ('tfidf_vect' , TfidfVectorizer(stop_words='english' , ngram_range=(1,2) , max_df=300),\n","                      'lr_clf' , LogisticRegression(c=10))\n","])\n","\n","# 별도의 TfidfVectorizer 객체의 fit( ),transform( )과 LogisticRegression의 fit(), predict()가 \n","# 필요없음.\n","# pipeline의 fit( )과 predict( )만으로 한꺼번에 피처 벡터화와 ML 학습/예측이 가능.\n","pipeline.fit(X_train,y_train)\n","pred = pipeline.predict(X_test)\n","print('Pipeline을 통한 Logistic Regression의 예측 정확도는 {0:.3f}'.format(accuracy_score(y_test , pred)))"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"uyUvvKT0ChNI"},"outputs":[],"source":["from sklearn.pipeline import Pipeline\n","\n","pipeline = Pipeline([\n","                     ('tfidf_vect' , TfidfVectorizer(stop_words = 'english')),\n","                     ('lr_clf' , LogisticRegression())\n","])\n","\n","#Pipeline에 기술된 각각의 객체 변수에 언더바(_)2개를 연달아 붙여 GridSearchCV에 사용될\n","#파라미터/하이퍼 파라미터 이름과 값을 설정.\n","prams = { 'tfidf_vect__ngram_range' : [(1,1) ,(1,2) , (1,3)],\n","         'tfidf_vect_max_df':[100,300,700],\n","         'lr_clf__C':[1,5,10]}\n","\n","# GridSearchCV의 생성자에 Estimator가 아닌 Pipeline 객체 입역\n","grid_cv_pipe = GridSearchCV(pipeline , param_grid=params , cv =3 , scoring='accuracy' , verbose=1)\n","grid_cv_pipe.fit(X_train , y_train)\n","print(grid_cv_pipe.best_params_ , grid_cv_pipe.best_score_)\n","\n","pred = grid_cv_pipe.predict(X_test)\n","print('Pipeline을 통한 Logistic Regression의 예측 정확도는 {0:.3f}'.format(accuracy_score(y_test , pred)))"]},{"cell_type":"markdown","source":["## 8-5 감성 분석"],"metadata":{"id":"T91shm7gh7w-"}},{"cell_type":"markdown","source":["### 감성분석 소개"],"metadata":{"id":"IhO9CAuDicpk"}},{"cell_type":"markdown","source":["### 지도학습 기반 감성 분석 실습 - IMDB 영화평"],"metadata":{"id":"okWwo0Imklc4"}},{"cell_type":"code","execution_count":2,"metadata":{"id":"zh3MvtzjEnwP","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1643455895585,"user_tz":-540,"elapsed":504,"user":{"displayName":"김진우","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Ggb7NCfP7aAu0Hj8nNhErTzUou1vuaWKzjtXq6Auw=s64","userId":"12971138652345879224"}},"outputId":"3ed7f780-33ac-484e-cac3-13502856ee4d"},"outputs":[{"output_type":"stream","name":"stdout","text":["/content/drive/MyDrive/AI/파이썬 머신러닝 완벽가이드/data_sets\n"]}],"source":["%cd /content/drive/MyDrive/AI/파이썬 머신러닝 완벽가이드/data_sets"]},{"cell_type":"code","source":["import pandas as pd\n","\n","review_df = pd.read_csv('labeledTrainData.tsv', header = 0 , sep=\"\\t\" , quoting = 3)\n","review_df.head(3)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":143},"id":"S0TaDU8bmlqZ","executionInfo":{"status":"ok","timestamp":1643455999038,"user_tz":-540,"elapsed":1940,"user":{"displayName":"김진우","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Ggb7NCfP7aAu0Hj8nNhErTzUou1vuaWKzjtXq6Auw=s64","userId":"12971138652345879224"}},"outputId":"32132d98-07b7-4646-b28e-0726f916b945"},"execution_count":3,"outputs":[{"output_type":"execute_result","data":{"text/html":["\n","  <div id=\"df-5254fee9-323b-4d20-8f2b-25b0e059656b\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>id</th>\n","      <th>sentiment</th>\n","      <th>review</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>\"5814_8\"</td>\n","      <td>1</td>\n","      <td>\"With all this stuff going down at the moment ...</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>\"2381_9\"</td>\n","      <td>1</td>\n","      <td>\"\\\"The Classic War of the Worlds\\\" by Timothy ...</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>\"7759_3\"</td>\n","      <td>0</td>\n","      <td>\"The film starts with a manager (Nicholas Bell...</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-5254fee9-323b-4d20-8f2b-25b0e059656b')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-5254fee9-323b-4d20-8f2b-25b0e059656b button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-5254fee9-323b-4d20-8f2b-25b0e059656b');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "],"text/plain":["         id  sentiment                                             review\n","0  \"5814_8\"          1  \"With all this stuff going down at the moment ...\n","1  \"2381_9\"          1  \"\\\"The Classic War of the Worlds\\\" by Timothy ...\n","2  \"7759_3\"          0  \"The film starts with a manager (Nicholas Bell..."]},"metadata":{},"execution_count":3}]},{"cell_type":"code","source":["print(review_df['review'][0])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"n8znrL8nnGIg","executionInfo":{"status":"ok","timestamp":1643456026264,"user_tz":-540,"elapsed":521,"user":{"displayName":"김진우","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Ggb7NCfP7aAu0Hj8nNhErTzUou1vuaWKzjtXq6Auw=s64","userId":"12971138652345879224"}},"outputId":"98bebd81-5c44-4f26-da94-aab15dfe9af2"},"execution_count":4,"outputs":[{"output_type":"stream","name":"stdout","text":["\"With all this stuff going down at the moment with MJ i've started listening to his music, watching the odd documentary here and there, watched The Wiz and watched Moonwalker again. Maybe i just want to get a certain insight into this guy who i thought was really cool in the eighties just to maybe make up my mind whether he is guilty or innocent. Moonwalker is part biography, part feature film which i remember going to see at the cinema when it was originally released. Some of it has subtle messages about MJ's feeling towards the press and also the obvious message of drugs are bad m'kay.<br /><br />Visually impressive but of course this is all about Michael Jackson so unless you remotely like MJ in anyway then you are going to hate this and find it boring. Some may call MJ an egotist for consenting to the making of this movie BUT MJ and most of his fans would say that he made it for the fans which if true is really nice of him.<br /><br />The actual feature film bit when it finally starts is only on for 20 minutes or so excluding the Smooth Criminal sequence and Joe Pesci is convincing as a psychopathic all powerful drug lord. Why he wants MJ dead so bad is beyond me. Because MJ overheard his plans? Nah, Joe Pesci's character ranted that he wanted people to know it is he who is supplying drugs etc so i dunno, maybe he just hates MJ's music.<br /><br />Lots of cool things in this like MJ turning into a car and a robot and the whole Speed Demon sequence. Also, the director must have had the patience of a saint when it came to filming the kiddy Bad sequence as usually directors hate working with one kid let alone a whole bunch of them performing a complex dance scene.<br /><br />Bottom line, this movie is for people who like MJ on one level or another (which i think is most people). If not, then stay away. It does try and give off a wholesome message and ironically MJ's bestest buddy in this movie is a girl! Michael Jackson is truly one of the most talented people ever to grace this planet but is he guilty? Well, with all the attention i've gave this subject....hmmm well i don't know because people can be different behind closed doors, i know this for a fact. He is either an extremely nice but stupid guy or one of the most sickest liars. I hope he is not the latter.\"\n"]}]},{"cell_type":"code","source":["import re\n","\n","# <br> html 태그는 replace 함수로 공백으로 변환\n","review_df['review'] = review_df['review'].str.replace('<br />' , ' ')\n","\n","#파이썬의 정규 표현식 모듈인 re를 이용해 영어 문자열이 아닌 문자는 모두 공백으로 변환\n","review_df['review'] = review_df['review'].apply( lambda x : re.sub(\"[a-zA-Z]\" , \" \" , x) )"],"metadata":{"id":"UgK2hpHPnNBj","executionInfo":{"status":"ok","timestamp":1643456309925,"user_tz":-540,"elapsed":3746,"user":{"displayName":"김진우","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Ggb7NCfP7aAu0Hj8nNhErTzUou1vuaWKzjtXq6Auw=s64","userId":"12971138652345879224"}}},"execution_count":5,"outputs":[]},{"cell_type":"code","source":["from sklearn.model_selection import train_test_split\n","\n","class_df = review_df['sentiment']\n","feature_df = review_df.drop( ['id' , 'sentiment'] , axis = 1 , inplace = False )\n","\n","X_train , X_test , y_train , y_test = train_test_split(feature_df , class_df , test_size=0.3, random_state=156)\n","\n","X_train.shape , X_test.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"YhgrkwHHoRho","executionInfo":{"status":"ok","timestamp":1643456456366,"user_tz":-540,"elapsed":531,"user":{"displayName":"김진우","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Ggb7NCfP7aAu0Hj8nNhErTzUou1vuaWKzjtXq6Auw=s64","userId":"12971138652345879224"}},"outputId":"d6464c02-29d2-4b10-af9e-6e4c96a5488c"},"execution_count":6,"outputs":[{"output_type":"execute_result","data":{"text/plain":["((17500, 1), (7500, 1))"]},"metadata":{},"execution_count":6}]},{"cell_type":"code","source":["from sklearn.feature_extraction.text import CountVectorizer, TfidfVectorizer\n","from sklearn.pipeline import Pipeline\n","from sklearn.linear_model import LogisticRegression\n","from sklearn.metrics import accuracy_score, roc_auc_score\n","\n","# 스톱 워드는 english, filtering, ngram은 (1,2)로 설정해 CounterVectorizer 수행.\n","# LogisticRegression의 C는 10으로 설정.\n","pipeline = Pipeline([\n","                     ('cnt_vect' , CountVectorizer(stop_words='english' , ngram_range=(1,2) )),\n","                     ('lr_clf' , LogisticRegression(C=10))\n","])\n","\n","# Pipeline 객체를 이용해 fit(), predict()로 학습/예측 수행. predict_proba()는 roc_auc 때문에 수행.\n","pipeline.fit(X_train['review'] , y_train)\n","pred = pipeline.predict(X_test['review'])\n","pred_probs = pipeline.predict_proba(X_test['review'])[:,1]\n","\n","print('예측 정확도는 {0:.4f}, ROC-AUC는 {1:.4f}'.format(accuracy_score(y_test , pred) , roc_auc_score(y_test , pred_probs)))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"6_6Wd55-o2Io","executionInfo":{"status":"ok","timestamp":1643456884959,"user_tz":-540,"elapsed":3428,"user":{"displayName":"김진우","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Ggb7NCfP7aAu0Hj8nNhErTzUou1vuaWKzjtXq6Auw=s64","userId":"12971138652345879224"}},"outputId":"1ed7e8db-e5d8-46de-f1be-3641b21e04fb"},"execution_count":7,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.7/dist-packages/sklearn/linear_model/_logistic.py:818: ConvergenceWarning: lbfgs failed to converge (status=1):\n","STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n","\n","Increase the number of iterations (max_iter) or scale the data as shown in:\n","    https://scikit-learn.org/stable/modules/preprocessing.html\n","Please also refer to the documentation for alternative solver options:\n","    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression\n","  extra_warning_msg=_LOGISTIC_SOLVER_CONVERGENCE_MSG,\n"]},{"output_type":"stream","name":"stdout","text":["예측 정확도는 0.5261, ROC-AUC는 0.5506\n"]}]},{"cell_type":"code","source":["# 스톱 워드는 english, filtering , ngram은 (1,2)로 설정해 TF-IDF 벡터화 수행.\n","# LogisticRegression의 C는 10으로 설정.\n","pipeline = Pipeline([\n","                     ('tfidf_vect' , TfidfVectorizer(stop_words='english' , ngram_range=(1,2) )),\n","                     ('lr_clf' , LogisticRegression(C=10))\n","])\n","\n","pipeline.fit(X_train['review'] , y_train)\n","pred = pipeline.predict(X_test['review'])\n","pred_probs = pipeline.predict_proba(X_test['review'])[:,1]\n","\n","print('예측 정확도는 {0:.4f}, ROC-AUC는 {1:.4f}'.format(accuracy_score(y_test , pred), roc_auc_score(y_test , pred_probs)))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"5x3N4nGPqd_M","executionInfo":{"status":"ok","timestamp":1643457136267,"user_tz":-540,"elapsed":3397,"user":{"displayName":"김진우","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Ggb7NCfP7aAu0Hj8nNhErTzUou1vuaWKzjtXq6Auw=s64","userId":"12971138652345879224"}},"outputId":"7d4d4143-3ccc-4bf2-93ca-83799fcc9d86"},"execution_count":8,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.7/dist-packages/sklearn/linear_model/_logistic.py:818: ConvergenceWarning: lbfgs failed to converge (status=1):\n","STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n","\n","Increase the number of iterations (max_iter) or scale the data as shown in:\n","    https://scikit-learn.org/stable/modules/preprocessing.html\n","Please also refer to the documentation for alternative solver options:\n","    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression\n","  extra_warning_msg=_LOGISTIC_SOLVER_CONVERGENCE_MSG,\n"]},{"output_type":"stream","name":"stdout","text":["예측 정확도는 0.5284, ROC-AUC는 0.5531\n"]}]},{"cell_type":"markdown","source":["### 비지도학습 기반 감성 분석 소개"],"metadata":{"id":"Nwhml2_Yr8ex"}},{"cell_type":"markdown","source":["### SentiWordNet을 이용한 감성 분석"],"metadata":{"id":"nKyJ4pjVsuuk"}},{"cell_type":"markdown","source":["#### WordNet Synset과 SentiWordNet SentiSynset 클래스의 이해"],"metadata":{"id":"10_7Mte_s5L0"}},{"cell_type":"code","source":["import nltk\n","nltk.download('all')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"fVw2nZqxrbYK","executionInfo":{"status":"ok","timestamp":1643457641885,"user_tz":-540,"elapsed":63676,"user":{"displayName":"김진우","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Ggb7NCfP7aAu0Hj8nNhErTzUou1vuaWKzjtXq6Auw=s64","userId":"12971138652345879224"}},"outputId":"baa9d24a-9b8a-453f-d870-c843e2248534"},"execution_count":9,"outputs":[{"output_type":"stream","name":"stdout","text":["[nltk_data] Downloading collection 'all'\n","[nltk_data]    | \n","[nltk_data]    | Downloading package abc to /root/nltk_data...\n","[nltk_data]    |   Unzipping corpora/abc.zip.\n","[nltk_data]    | Downloading package alpino to /root/nltk_data...\n","[nltk_data]    |   Unzipping corpora/alpino.zip.\n","[nltk_data]    | Downloading package averaged_perceptron_tagger to\n","[nltk_data]    |     /root/nltk_data...\n","[nltk_data]    |   Unzipping taggers/averaged_perceptron_tagger.zip.\n","[nltk_data]    | Downloading package averaged_perceptron_tagger_ru to\n","[nltk_data]    |     /root/nltk_data...\n","[nltk_data]    |   Unzipping\n","[nltk_data]    |       taggers/averaged_perceptron_tagger_ru.zip.\n","[nltk_data]    | Downloading package basque_grammars to\n","[nltk_data]    |     /root/nltk_data...\n","[nltk_data]    |   Unzipping grammars/basque_grammars.zip.\n","[nltk_data]    | Downloading package biocreative_ppi to\n","[nltk_data]    |     /root/nltk_data...\n","[nltk_data]    |   Unzipping corpora/biocreative_ppi.zip.\n","[nltk_data]    | Downloading package bllip_wsj_no_aux to\n","[nltk_data]    |     /root/nltk_data...\n","[nltk_data]    |   Unzipping models/bllip_wsj_no_aux.zip.\n","[nltk_data]    | Downloading package book_grammars to\n","[nltk_data]    |     /root/nltk_data...\n","[nltk_data]    |   Unzipping grammars/book_grammars.zip.\n","[nltk_data]    | Downloading package brown to /root/nltk_data...\n","[nltk_data]    |   Unzipping corpora/brown.zip.\n","[nltk_data]    | Downloading package brown_tei to /root/nltk_data...\n","[nltk_data]    |   Unzipping corpora/brown_tei.zip.\n","[nltk_data]    | Downloading package cess_cat to /root/nltk_data...\n","[nltk_data]    |   Unzipping corpora/cess_cat.zip.\n","[nltk_data]    | Downloading package cess_esp to /root/nltk_data...\n","[nltk_data]    |   Unzipping corpora/cess_esp.zip.\n","[nltk_data]    | Downloading package chat80 to /root/nltk_data...\n","[nltk_data]    |   Unzipping corpora/chat80.zip.\n","[nltk_data]    | Downloading package city_database to\n","[nltk_data]    |     /root/nltk_data...\n","[nltk_data]    |   Unzipping corpora/city_database.zip.\n","[nltk_data]    | Downloading package cmudict to /root/nltk_data...\n","[nltk_data]    |   Unzipping corpora/cmudict.zip.\n","[nltk_data]    | Downloading package comparative_sentences to\n","[nltk_data]    |     /root/nltk_data...\n","[nltk_data]    |   Unzipping corpora/comparative_sentences.zip.\n","[nltk_data]    | Downloading package comtrans to /root/nltk_data...\n","[nltk_data]    | Downloading package conll2000 to /root/nltk_data...\n","[nltk_data]    |   Unzipping corpora/conll2000.zip.\n","[nltk_data]    | Downloading package conll2002 to /root/nltk_data...\n","[nltk_data]    |   Unzipping corpora/conll2002.zip.\n","[nltk_data]    | Downloading package conll2007 to /root/nltk_data...\n","[nltk_data]    | Downloading package crubadan to /root/nltk_data...\n","[nltk_data]    |   Unzipping corpora/crubadan.zip.\n","[nltk_data]    | Downloading package dependency_treebank to\n","[nltk_data]    |     /root/nltk_data...\n","[nltk_data]    |   Unzipping corpora/dependency_treebank.zip.\n","[nltk_data]    | Downloading package dolch to /root/nltk_data...\n","[nltk_data]    |   Unzipping corpora/dolch.zip.\n","[nltk_data]    | Downloading package europarl_raw to\n","[nltk_data]    |     /root/nltk_data...\n","[nltk_data]    |   Unzipping corpora/europarl_raw.zip.\n","[nltk_data]    | Downloading package floresta to /root/nltk_data...\n","[nltk_data]    |   Unzipping corpora/floresta.zip.\n","[nltk_data]    | Downloading package framenet_v15 to\n","[nltk_data]    |     /root/nltk_data...\n","[nltk_data]    |   Unzipping corpora/framenet_v15.zip.\n","[nltk_data]    | Downloading package framenet_v17 to\n","[nltk_data]    |     /root/nltk_data...\n","[nltk_data]    |   Unzipping corpora/framenet_v17.zip.\n","[nltk_data]    | Downloading package gazetteers to /root/nltk_data...\n","[nltk_data]    |   Unzipping corpora/gazetteers.zip.\n","[nltk_data]    | Downloading package genesis to /root/nltk_data...\n","[nltk_data]    |   Unzipping corpora/genesis.zip.\n","[nltk_data]    | Downloading package gutenberg to /root/nltk_data...\n","[nltk_data]    |   Unzipping corpora/gutenberg.zip.\n","[nltk_data]    | Downloading package ieer to /root/nltk_data...\n","[nltk_data]    |   Unzipping corpora/ieer.zip.\n","[nltk_data]    | Downloading package inaugural to /root/nltk_data...\n","[nltk_data]    |   Unzipping corpora/inaugural.zip.\n","[nltk_data]    | Downloading package indian to /root/nltk_data...\n","[nltk_data]    |   Unzipping corpora/indian.zip.\n","[nltk_data]    | Downloading package jeita to /root/nltk_data...\n","[nltk_data]    | Downloading package kimmo to /root/nltk_data...\n","[nltk_data]    |   Unzipping corpora/kimmo.zip.\n","[nltk_data]    | Downloading package knbc to /root/nltk_data...\n","[nltk_data]    | Downloading package large_grammars to\n","[nltk_data]    |     /root/nltk_data...\n","[nltk_data]    |   Unzipping grammars/large_grammars.zip.\n","[nltk_data]    | Downloading package lin_thesaurus to\n","[nltk_data]    |     /root/nltk_data...\n","[nltk_data]    |   Unzipping corpora/lin_thesaurus.zip.\n","[nltk_data]    | Downloading package mac_morpho to /root/nltk_data...\n","[nltk_data]    |   Unzipping corpora/mac_morpho.zip.\n","[nltk_data]    | Downloading package machado to /root/nltk_data...\n","[nltk_data]    | Downloading package masc_tagged to /root/nltk_data...\n","[nltk_data]    | Downloading package maxent_ne_chunker to\n","[nltk_data]    |     /root/nltk_data...\n","[nltk_data]    |   Unzipping chunkers/maxent_ne_chunker.zip.\n","[nltk_data]    | Downloading package maxent_treebank_pos_tagger to\n","[nltk_data]    |     /root/nltk_data...\n","[nltk_data]    |   Unzipping taggers/maxent_treebank_pos_tagger.zip.\n","[nltk_data]    | Downloading package moses_sample to\n","[nltk_data]    |     /root/nltk_data...\n","[nltk_data]    |   Unzipping models/moses_sample.zip.\n","[nltk_data]    | Downloading package movie_reviews to\n","[nltk_data]    |     /root/nltk_data...\n","[nltk_data]    |   Unzipping corpora/movie_reviews.zip.\n","[nltk_data]    | Downloading package mte_teip5 to /root/nltk_data...\n","[nltk_data]    |   Unzipping corpora/mte_teip5.zip.\n","[nltk_data]    | Downloading package mwa_ppdb to /root/nltk_data...\n","[nltk_data]    |   Unzipping misc/mwa_ppdb.zip.\n","[nltk_data]    | Downloading package names to /root/nltk_data...\n","[nltk_data]    |   Unzipping corpora/names.zip.\n","[nltk_data]    | Downloading package nombank.1.0 to /root/nltk_data...\n","[nltk_data]    | Downloading package nonbreaking_prefixes to\n","[nltk_data]    |     /root/nltk_data...\n","[nltk_data]    |   Unzipping corpora/nonbreaking_prefixes.zip.\n","[nltk_data]    | Downloading package nps_chat to /root/nltk_data...\n","[nltk_data]    |   Unzipping corpora/nps_chat.zip.\n","[nltk_data]    | Downloading package omw to /root/nltk_data...\n","[nltk_data]    |   Unzipping corpora/omw.zip.\n","[nltk_data]    | Downloading package omw-1.4 to /root/nltk_data...\n","[nltk_data]    |   Unzipping corpora/omw-1.4.zip.\n","[nltk_data]    | Downloading package opinion_lexicon to\n","[nltk_data]    |     /root/nltk_data...\n","[nltk_data]    |   Unzipping corpora/opinion_lexicon.zip.\n","[nltk_data]    | Downloading package panlex_swadesh to\n","[nltk_data]    |     /root/nltk_data...\n","[nltk_data]    | Downloading package paradigms to /root/nltk_data...\n","[nltk_data]    |   Unzipping corpora/paradigms.zip.\n","[nltk_data]    | Downloading package pe08 to /root/nltk_data...\n","[nltk_data]    |   Unzipping corpora/pe08.zip.\n","[nltk_data]    | Downloading package perluniprops to\n","[nltk_data]    |     /root/nltk_data...\n","[nltk_data]    |   Unzipping misc/perluniprops.zip.\n","[nltk_data]    | Downloading package pil to /root/nltk_data...\n","[nltk_data]    |   Unzipping corpora/pil.zip.\n","[nltk_data]    | Downloading package pl196x to /root/nltk_data...\n","[nltk_data]    |   Unzipping corpora/pl196x.zip.\n","[nltk_data]    | Downloading package porter_test to /root/nltk_data...\n","[nltk_data]    |   Unzipping stemmers/porter_test.zip.\n","[nltk_data]    | Downloading package ppattach to /root/nltk_data...\n","[nltk_data]    |   Unzipping corpora/ppattach.zip.\n","[nltk_data]    | Downloading package problem_reports to\n","[nltk_data]    |     /root/nltk_data...\n","[nltk_data]    |   Unzipping corpora/problem_reports.zip.\n","[nltk_data]    | Downloading package product_reviews_1 to\n","[nltk_data]    |     /root/nltk_data...\n","[nltk_data]    |   Unzipping corpora/product_reviews_1.zip.\n","[nltk_data]    | Downloading package product_reviews_2 to\n","[nltk_data]    |     /root/nltk_data...\n","[nltk_data]    |   Unzipping corpora/product_reviews_2.zip.\n","[nltk_data]    | Downloading package propbank to /root/nltk_data...\n","[nltk_data]    | Downloading package pros_cons to /root/nltk_data...\n","[nltk_data]    |   Unzipping corpora/pros_cons.zip.\n","[nltk_data]    | Downloading package ptb to /root/nltk_data...\n","[nltk_data]    |   Unzipping corpora/ptb.zip.\n","[nltk_data]    | Downloading package punkt to /root/nltk_data...\n","[nltk_data]    |   Unzipping tokenizers/punkt.zip.\n","[nltk_data]    | Downloading package qc to /root/nltk_data...\n","[nltk_data]    |   Unzipping corpora/qc.zip.\n","[nltk_data]    | Downloading package reuters to /root/nltk_data...\n","[nltk_data]    | Downloading package rslp to /root/nltk_data...\n","[nltk_data]    |   Unzipping stemmers/rslp.zip.\n","[nltk_data]    | Downloading package rte to /root/nltk_data...\n","[nltk_data]    |   Unzipping corpora/rte.zip.\n","[nltk_data]    | Downloading package sample_grammars to\n","[nltk_data]    |     /root/nltk_data...\n","[nltk_data]    |   Unzipping grammars/sample_grammars.zip.\n","[nltk_data]    | Downloading package semcor to /root/nltk_data...\n","[nltk_data]    | Downloading package senseval to /root/nltk_data...\n","[nltk_data]    |   Unzipping corpora/senseval.zip.\n","[nltk_data]    | Downloading package sentence_polarity to\n","[nltk_data]    |     /root/nltk_data...\n","[nltk_data]    |   Unzipping corpora/sentence_polarity.zip.\n","[nltk_data]    | Downloading package sentiwordnet to\n","[nltk_data]    |     /root/nltk_data...\n","[nltk_data]    |   Unzipping corpora/sentiwordnet.zip.\n","[nltk_data]    | Downloading package shakespeare to /root/nltk_data...\n","[nltk_data]    |   Unzipping corpora/shakespeare.zip.\n","[nltk_data]    | Downloading package sinica_treebank to\n","[nltk_data]    |     /root/nltk_data...\n","[nltk_data]    |   Unzipping corpora/sinica_treebank.zip.\n","[nltk_data]    | Downloading package smultron to /root/nltk_data...\n","[nltk_data]    |   Unzipping corpora/smultron.zip.\n","[nltk_data]    | Downloading package snowball_data to\n","[nltk_data]    |     /root/nltk_data...\n","[nltk_data]    | Downloading package spanish_grammars to\n","[nltk_data]    |     /root/nltk_data...\n","[nltk_data]    |   Unzipping grammars/spanish_grammars.zip.\n","[nltk_data]    | Downloading package state_union to /root/nltk_data...\n","[nltk_data]    |   Unzipping corpora/state_union.zip.\n","[nltk_data]    | Downloading package stopwords to /root/nltk_data...\n","[nltk_data]    |   Unzipping corpora/stopwords.zip.\n","[nltk_data]    | Downloading package subjectivity to\n","[nltk_data]    |     /root/nltk_data...\n","[nltk_data]    |   Unzipping corpora/subjectivity.zip.\n","[nltk_data]    | Downloading package swadesh to /root/nltk_data...\n","[nltk_data]    |   Unzipping corpora/swadesh.zip.\n","[nltk_data]    | Downloading package switchboard to /root/nltk_data...\n","[nltk_data]    |   Unzipping corpora/switchboard.zip.\n","[nltk_data]    | Downloading package tagsets to /root/nltk_data...\n","[nltk_data]    |   Unzipping help/tagsets.zip.\n","[nltk_data]    | Downloading package timit to /root/nltk_data...\n","[nltk_data]    |   Unzipping corpora/timit.zip.\n","[nltk_data]    | Downloading package toolbox to /root/nltk_data...\n","[nltk_data]    |   Unzipping corpora/toolbox.zip.\n","[nltk_data]    | Downloading package treebank to /root/nltk_data...\n","[nltk_data]    |   Unzipping corpora/treebank.zip.\n","[nltk_data]    | Downloading package twitter_samples to\n","[nltk_data]    |     /root/nltk_data...\n","[nltk_data]    |   Unzipping corpora/twitter_samples.zip.\n","[nltk_data]    | Downloading package udhr to /root/nltk_data...\n","[nltk_data]    |   Unzipping corpora/udhr.zip.\n","[nltk_data]    | Downloading package udhr2 to /root/nltk_data...\n","[nltk_data]    |   Unzipping corpora/udhr2.zip.\n","[nltk_data]    | Downloading package unicode_samples to\n","[nltk_data]    |     /root/nltk_data...\n","[nltk_data]    |   Unzipping corpora/unicode_samples.zip.\n","[nltk_data]    | Downloading package universal_tagset to\n","[nltk_data]    |     /root/nltk_data...\n","[nltk_data]    |   Unzipping taggers/universal_tagset.zip.\n","[nltk_data]    | Downloading package universal_treebanks_v20 to\n","[nltk_data]    |     /root/nltk_data...\n","[nltk_data]    | Downloading package vader_lexicon to\n","[nltk_data]    |     /root/nltk_data...\n","[nltk_data]    | Downloading package verbnet to /root/nltk_data...\n","[nltk_data]    |   Unzipping corpora/verbnet.zip.\n","[nltk_data]    | Downloading package verbnet3 to /root/nltk_data...\n","[nltk_data]    |   Unzipping corpora/verbnet3.zip.\n","[nltk_data]    | Downloading package webtext to /root/nltk_data...\n","[nltk_data]    |   Unzipping corpora/webtext.zip.\n","[nltk_data]    | Downloading package wmt15_eval to /root/nltk_data...\n","[nltk_data]    |   Unzipping models/wmt15_eval.zip.\n","[nltk_data]    | Downloading package word2vec_sample to\n","[nltk_data]    |     /root/nltk_data...\n","[nltk_data]    |   Unzipping models/word2vec_sample.zip.\n","[nltk_data]    | Downloading package wordnet to /root/nltk_data...\n","[nltk_data]    |   Unzipping corpora/wordnet.zip.\n","[nltk_data]    | Downloading package wordnet2021 to /root/nltk_data...\n","[nltk_data]    |   Unzipping corpora/wordnet2021.zip.\n","[nltk_data]    | Downloading package wordnet31 to /root/nltk_data...\n","[nltk_data]    |   Unzipping corpora/wordnet31.zip.\n","[nltk_data]    | Downloading package wordnet_ic to /root/nltk_data...\n","[nltk_data]    |   Unzipping corpora/wordnet_ic.zip.\n","[nltk_data]    | Downloading package words to /root/nltk_data...\n","[nltk_data]    |   Unzipping corpora/words.zip.\n","[nltk_data]    | Downloading package ycoe to /root/nltk_data...\n","[nltk_data]    |   Unzipping corpora/ycoe.zip.\n","[nltk_data]    | \n","[nltk_data]  Done downloading collection all\n"]},{"output_type":"execute_result","data":{"text/plain":["True"]},"metadata":{},"execution_count":9}]},{"cell_type":"code","source":["from nltk.corpus import wordnet as wn\n","\n","term = 'present'\n","\n","# 'present'라는 단어로 wordnet의 synsets생성.\n","synsets = wn.synsets(term)\n","print('synsets( ) 반환 type :', type(synsets))\n","print('synsets( ) 반환 값 개수:', len(synsets))\n","print('synsets( ) 반환 값 :', synsets)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"F7mirRs3tIC8","executionInfo":{"status":"ok","timestamp":1643457848396,"user_tz":-540,"elapsed":346,"user":{"displayName":"김진우","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Ggb7NCfP7aAu0Hj8nNhErTzUou1vuaWKzjtXq6Auw=s64","userId":"12971138652345879224"}},"outputId":"82ee740c-653c-48bb-93e6-18706160366e"},"execution_count":13,"outputs":[{"output_type":"stream","name":"stdout","text":["synsets( ) 반환 type : <class 'list'>\n","synsets( ) 반환 값 개수: 18\n","synsets( ) 반환 값 : [Synset('present.n.01'), Synset('present.n.02'), Synset('present.n.03'), Synset('show.v.01'), Synset('present.v.02'), Synset('stage.v.01'), Synset('present.v.04'), Synset('present.v.05'), Synset('award.v.01'), Synset('give.v.08'), Synset('deliver.v.01'), Synset('introduce.v.01'), Synset('portray.v.04'), Synset('confront.v.03'), Synset('present.v.12'), Synset('salute.v.06'), Synset('present.a.01'), Synset('present.a.02')]\n"]}]},{"cell_type":"code","source":["for synset in synsets:\n","    print('##### Synset name : ' , synset.name(), '#####')\n","    print('POS :' , synset.lexname())\n","    print('Definition:' , synset.definition())\n","    print('Lemmas:' , synset.lemma_names())"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"KYg1lkIluCZU","executionInfo":{"status":"ok","timestamp":1643458122265,"user_tz":-540,"elapsed":551,"user":{"displayName":"김진우","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Ggb7NCfP7aAu0Hj8nNhErTzUou1vuaWKzjtXq6Auw=s64","userId":"12971138652345879224"}},"outputId":"baebdb8f-70b5-4cf3-87c5-21d7894f6a3c"},"execution_count":14,"outputs":[{"output_type":"stream","name":"stdout","text":["##### Synset name :  present.n.01 #####\n","POS : noun.time\n","Definition: the period of time that is happening now; any continuous stretch of time including the moment of speech\n","Lemmas: ['present', 'nowadays']\n","##### Synset name :  present.n.02 #####\n","POS : noun.possession\n","Definition: something presented as a gift\n","Lemmas: ['present']\n","##### Synset name :  present.n.03 #####\n","POS : noun.communication\n","Definition: a verb tense that expresses actions or states at the time of speaking\n","Lemmas: ['present', 'present_tense']\n","##### Synset name :  show.v.01 #####\n","POS : verb.perception\n","Definition: give an exhibition of to an interested audience\n","Lemmas: ['show', 'demo', 'exhibit', 'present', 'demonstrate']\n","##### Synset name :  present.v.02 #####\n","POS : verb.communication\n","Definition: bring forward and present to the mind\n","Lemmas: ['present', 'represent', 'lay_out']\n","##### Synset name :  stage.v.01 #####\n","POS : verb.creation\n","Definition: perform (a play), especially on a stage\n","Lemmas: ['stage', 'present', 'represent']\n","##### Synset name :  present.v.04 #####\n","POS : verb.possession\n","Definition: hand over formally\n","Lemmas: ['present', 'submit']\n","##### Synset name :  present.v.05 #####\n","POS : verb.stative\n","Definition: introduce\n","Lemmas: ['present', 'pose']\n","##### Synset name :  award.v.01 #####\n","POS : verb.possession\n","Definition: give, especially as an honor or reward\n","Lemmas: ['award', 'present']\n","##### Synset name :  give.v.08 #####\n","POS : verb.possession\n","Definition: give as a present; make a gift of\n","Lemmas: ['give', 'gift', 'present']\n","##### Synset name :  deliver.v.01 #####\n","POS : verb.communication\n","Definition: deliver (a speech, oration, or idea)\n","Lemmas: ['deliver', 'present']\n","##### Synset name :  introduce.v.01 #####\n","POS : verb.communication\n","Definition: cause to come to know personally\n","Lemmas: ['introduce', 'present', 'acquaint']\n","##### Synset name :  portray.v.04 #####\n","POS : verb.creation\n","Definition: represent abstractly, for example in a painting, drawing, or sculpture\n","Lemmas: ['portray', 'present']\n","##### Synset name :  confront.v.03 #####\n","POS : verb.communication\n","Definition: present somebody with something, usually to accuse or criticize\n","Lemmas: ['confront', 'face', 'present']\n","##### Synset name :  present.v.12 #####\n","POS : verb.communication\n","Definition: formally present a debutante, a representative of a country, etc.\n","Lemmas: ['present']\n","##### Synset name :  salute.v.06 #####\n","POS : verb.communication\n","Definition: recognize with a gesture prescribed by a military regulation; assume a prescribed position\n","Lemmas: ['salute', 'present']\n","##### Synset name :  present.a.01 #####\n","POS : adj.all\n","Definition: temporal sense; intermediate between past and future; now existing or happening or in consideration\n","Lemmas: ['present']\n","##### Synset name :  present.a.02 #####\n","POS : adj.all\n","Definition: being or existing in a specified place\n","Lemmas: ['present']\n"]}]},{"cell_type":"code","source":["# synset 객체를 단어별로 생성합니다.\n","tree = wn.synset('tree.n.01')\n","lion = wn.synset('lion.n.01')\n","tiger = wn.synset('tiger.n.02')\n","cat = wn.synset('cat.n.01')\n","dog = wn.synset('dog.n.01')\n","\n","entities = [tree, lion , tiger , cat , dog]\n","similarities = []\n","entity_names = [entity.name().split('.')[0] for entity in entities]\n","\n","# 단어별 synset을 반복하면서 다른 단어의 synset과 유사도를 측정합니다.\n","for entity in entities:\n","    similarity = [round(entity.path_similarity(compared_entity) , 2) for compared_entity in entities ]\n","    similarities.append(similarity)\n","\n","# 개별 단어별 symset과 다른 단어의 synset과의 유사도를 DataFrame 형태로 저장합니다.\n","similarity_df = pd.DataFrame(similarities, columns = entity_names , index = entity_names)\n","similarity_df \n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"XveGSHMOvMx4","executionInfo":{"status":"ok","timestamp":1643458642371,"user_tz":-540,"elapsed":360,"user":{"displayName":"김진우","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Ggb7NCfP7aAu0Hj8nNhErTzUou1vuaWKzjtXq6Auw=s64","userId":"12971138652345879224"}},"outputId":"f19d6eb5-663f-40c6-b3ee-9d6a78f61ac5"},"execution_count":15,"outputs":[{"output_type":"execute_result","data":{"text/html":["\n","  <div id=\"df-bc8c8aa9-e606-46b1-94db-4a5eb6bead17\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>tree</th>\n","      <th>lion</th>\n","      <th>tiger</th>\n","      <th>cat</th>\n","      <th>dog</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>tree</th>\n","      <td>1.00</td>\n","      <td>0.07</td>\n","      <td>0.07</td>\n","      <td>0.08</td>\n","      <td>0.12</td>\n","    </tr>\n","    <tr>\n","      <th>lion</th>\n","      <td>0.07</td>\n","      <td>1.00</td>\n","      <td>0.33</td>\n","      <td>0.25</td>\n","      <td>0.17</td>\n","    </tr>\n","    <tr>\n","      <th>tiger</th>\n","      <td>0.07</td>\n","      <td>0.33</td>\n","      <td>1.00</td>\n","      <td>0.25</td>\n","      <td>0.17</td>\n","    </tr>\n","    <tr>\n","      <th>cat</th>\n","      <td>0.08</td>\n","      <td>0.25</td>\n","      <td>0.25</td>\n","      <td>1.00</td>\n","      <td>0.20</td>\n","    </tr>\n","    <tr>\n","      <th>dog</th>\n","      <td>0.12</td>\n","      <td>0.17</td>\n","      <td>0.17</td>\n","      <td>0.20</td>\n","      <td>1.00</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-bc8c8aa9-e606-46b1-94db-4a5eb6bead17')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-bc8c8aa9-e606-46b1-94db-4a5eb6bead17 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-bc8c8aa9-e606-46b1-94db-4a5eb6bead17');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "],"text/plain":["       tree  lion  tiger   cat   dog\n","tree   1.00  0.07   0.07  0.08  0.12\n","lion   0.07  1.00   0.33  0.25  0.17\n","tiger  0.07  0.33   1.00  0.25  0.17\n","cat    0.08  0.25   0.25  1.00  0.20\n","dog    0.12  0.17   0.17  0.20  1.00"]},"metadata":{},"execution_count":15}]},{"cell_type":"code","source":["import nltk\n","from nltk.corpus import sentiwordnet as swn\n","\n","senti_synsets = list(swn.senti_synsets('slow'))\n","print('senti_synsets() 반환 type :' , type(senti_synsets))\n","print('senti_synsets() 반환 값 개수:' , len(senti_synsets))\n","print('senti_synsets() 반환 값 :' , senti_synsets)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"bGE6Sg84xLtX","executionInfo":{"status":"ok","timestamp":1643458894429,"user_tz":-540,"elapsed":2173,"user":{"displayName":"김진우","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Ggb7NCfP7aAu0Hj8nNhErTzUou1vuaWKzjtXq6Auw=s64","userId":"12971138652345879224"}},"outputId":"807e3fac-a564-4bd3-e6c6-226f0fd3d1bb"},"execution_count":17,"outputs":[{"output_type":"stream","name":"stdout","text":["senti_synsets() 반환 type : <class 'list'>\n","senti_synsets() 반환 값 개수: 11\n","senti_synsets() 반환 값 : [SentiSynset('decelerate.v.01'), SentiSynset('slow.v.02'), SentiSynset('slow.v.03'), SentiSynset('slow.a.01'), SentiSynset('slow.a.02'), SentiSynset('dense.s.04'), SentiSynset('slow.a.04'), SentiSynset('boring.s.01'), SentiSynset('dull.s.08'), SentiSynset('slowly.r.01'), SentiSynset('behind.r.03')]\n"]}]},{"cell_type":"code","source":["import nltk\n","from nltk.corpus import sentiwordnet as swn\n","\n","father = swn.senti_synset('father.n.01')\n","print('father 긍정감성 지수: ', father.pos_score())\n","print('father 부정감성 지수: ', father.neg_score())\n","print('father 객관성 지수: ',father.obj_score())\n","print('\\n')\n","fabulous = swn.senti_synset('fabulous.a.01')\n","print('fabulous 긍정감성 지수: ', fabulous.pos_score())\n","print('fabulous 부정감성 지수: ', fabulous.neg_score())"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Lv5kbQoayGEV","executionInfo":{"status":"ok","timestamp":1643459170209,"user_tz":-540,"elapsed":559,"user":{"displayName":"김진우","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Ggb7NCfP7aAu0Hj8nNhErTzUou1vuaWKzjtXq6Auw=s64","userId":"12971138652345879224"}},"outputId":"0faffd35-1b7f-48e6-9632-f514fc9b29fd"},"execution_count":19,"outputs":[{"output_type":"stream","name":"stdout","text":["father 긍정감성 지수:  0.0\n","father 부정감성 지수:  0.0\n","father 객관성 지수:  1.0\n","\n","\n","fabulous 긍정감성 지수:  0.875\n","fabulous 부정감성 지수:  0.125\n"]}]},{"cell_type":"markdown","source":["#### SentiWordNet을 이용한 영화 감상평 감성 분석"],"metadata":{"id":"t7GNnTHXzRsk"}},{"cell_type":"code","source":["from nltk.corpus import wordnet as wn\n","\n","# 간단한 NLTK PennTreebank Tag를 기반으로 WordNet기반의 품사 Tag로 변환\n","def penn_to_wn(tag):\n","    if tag.startswith('J'):\n","        return wn.ADJ\n","    elif tag.startswith('N'):\n","        return wn.NOUN\n","    elif tag.startswith('R'):\n","        return wn.ADV\n","    elif tag.startswith('V'):\n","        return wn.VERV"],"metadata":{"id":"W5Zy2LTNzJQ2","executionInfo":{"status":"ok","timestamp":1643459808314,"user_tz":-540,"elapsed":440,"user":{"displayName":"김진우","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Ggb7NCfP7aAu0Hj8nNhErTzUou1vuaWKzjtXq6Auw=s64","userId":"12971138652345879224"}}},"execution_count":22,"outputs":[]},{"cell_type":"code","source":["from nltk.stem import WordNetLemmatizer\n","from nltk.corpus import sentiwordnet as swn\n","from nltk import sent_tokenize , word_tokenize , pos_tag\n","\n","def swn_polarity(text):\n","    # 감성 지수 초기화\n","    sentiment = 0.0\n","    tokens_count = 0\n","\n","    lemmatizer = WordNetLemmatizer()\n","    raw_sentences = sent_tokenize(text)\n","    # 분해된 문장별로 단어 토큰 -> 품사 태깅 후에 SentiSynset 생성 -> 감성 지수 합산\n","    for raw_sentence in raw_sentences:\n","        # NLTK 기반의 품사 태깅 문장 추출\n","        tagged_sentence = pos_tag(word_tokenize(raw_sentence))\n","        for word, tag in tagged_sentence:\n","\n","            # WordNet 기반 품사 태깅과 어근 추출\n","            wn_tag = penn_to_wn(tag)\n","            if wn_tag not in (wn.NOUN , wn.ADJ , wn.ADV):\n","                continue\n","            lemma = lemmatizer.lemmatize(word , pos=wn_tag)\n","            if not lemma:\n","                continue\n","            # 어근을 추출한 단어와 WordNet 기반 품사 태깅을 입력해 Synset 갹채를 생성.\n","            synsets = wn.synsets(lemma, pos=wn_tag)\n","            if not synsets:\n","                continue\n","            # sentiwordnet의 감성 단어 분석으로 감성 synset 추출\n","            # 모든 단어에 대해 긍정 감성 지수는 +로 부정 감성 지수는 -로 합산해 감성 지수 계산.\n","            synset = synsets[0]\n","            swn_synset = swn.senti_synset(synset.name())\n","            sentiment += (swn_synset.pos_score() - swn_synset.neg_score())\n","            token_count += 1\n","\n","        if not tokens_count:\n","            return 0\n","        \n","        # 총 score가 0 이상일 경우 긍정(Positive) 1, 그렇지 않을 경우 부정(Negative) 0 반환\n","        if sentiment >= 0 :\n","            return 1\n","        \n","        return 0"],"metadata":{"id":"KIXZ8FlTz_ti","executionInfo":{"status":"ok","timestamp":1643460185268,"user_tz":-540,"elapsed":680,"user":{"displayName":"김진우","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Ggb7NCfP7aAu0Hj8nNhErTzUou1vuaWKzjtXq6Auw=s64","userId":"12971138652345879224"}}},"execution_count":24,"outputs":[]},{"cell_type":"code","source":["from nltk.stem import WordNetLemmatizer\n","from nltk.corpus import sentiwordnet as swn\n","from nltk import sent_tokenize, word_tokenize, pos_tag\n","\n","def swn_polarity(text):\n","    # 감성 지수 초기화 \n","    sentiment = 0.0\n","    tokens_count = 0\n","    \n","    lemmatizer = WordNetLemmatizer()\n","    raw_sentences = sent_tokenize(text)\n","    # 분해된 문장별로 단어 토큰 -> 품사 태깅 후에 SentiSynset 생성 -> 감성 지수 합산 \n","    for raw_sentence in raw_sentences:\n","        # NTLK 기반의 품사 태깅 문장 추출  \n","        tagged_sentence = pos_tag(word_tokenize(raw_sentence))\n","        for word , tag in tagged_sentence:\n","            \n","            # WordNet 기반 품사 태깅과 어근 추출\n","            wn_tag = penn_to_wn(tag)\n","            if wn_tag not in (wn.NOUN , wn.ADJ, wn.ADV):\n","                continue                   \n","            lemma = lemmatizer.lemmatize(word, pos=wn_tag)\n","            if not lemma:\n","                continue\n","            # 어근을 추출한 단어와 WordNet 기반 품사 태깅을 입력해 Synset 객체를 생성. \n","            synsets = wn.synsets(lemma , pos=wn_tag)\n","            if not synsets:\n","                continue\n","            # sentiwordnet의 감성 단어 분석으로 감성 synset 추출\n","            # 모든 단어에 대해 긍정 감성 지수는 +로 부정 감성 지수는 -로 합산해 감성 지수 계산. \n","            synset = synsets[0]\n","            swn_synset = swn.senti_synset(synset.name())\n","            sentiment += (swn_synset.pos_score() - swn_synset.neg_score())           \n","            tokens_count += 1\n","    \n","    if not tokens_count:\n","        return 0\n","    \n","    # 총 score가 0 이상일 경우 긍정(Positive) 1, 그렇지 않을 경우 부정(Negative) 0 반환\n","    if sentiment >= 0 :\n","        return 1\n","    \n","    return 0"],"metadata":{"id":"cn_MX-kW5MxX","executionInfo":{"status":"ok","timestamp":1643460750368,"user_tz":-540,"elapsed":356,"user":{"displayName":"김진우","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Ggb7NCfP7aAu0Hj8nNhErTzUou1vuaWKzjtXq6Auw=s64","userId":"12971138652345879224"}}},"execution_count":29,"outputs":[]},{"cell_type":"markdown","source":["### VADER를 이용한 감성 분석"],"metadata":{"id":"6lQPXn-G48TM"}},{"cell_type":"code","source":["from nltk.sentiment.vader import SentimentIntensityAnalyzer\n","\n","senti_analyzer = SentimentIntensityAnalyzer()\n","senti_scores = senti_analyzer.polarity_scores(train_df['review'][0])\n","print(senti_scores)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":226},"id":"_qE8Qwiz4sUQ","executionInfo":{"status":"error","timestamp":1643460968857,"user_tz":-540,"elapsed":4,"user":{"displayName":"김진우","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Ggb7NCfP7aAu0Hj8nNhErTzUou1vuaWKzjtXq6Auw=s64","userId":"12971138652345879224"}},"outputId":"d6976442-7148-4eb6-ed02-d3e7f7362d75"},"execution_count":33,"outputs":[{"output_type":"error","ename":"NameError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m<ipython-input-33-711f47562158>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      2\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      3\u001b[0m \u001b[0msenti_analyzer\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mSentimentIntensityAnalyzer\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 4\u001b[0;31m \u001b[0msenti_scores\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0msenti_analyzer\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mpolarity_scores\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mtrain_df\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'review'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m0\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      5\u001b[0m \u001b[0mprint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0msenti_scores\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mNameError\u001b[0m: name 'train_df' is not defined"]}]},{"cell_type":"code","source":["def vader_polarity(review , threshold=0.1):\n","    analyzer = SentimentIntensityAnalyzer()\n","    scores = analyzer.polarity_scores(review)\n","\n","    # compound 값에 기반해 threshold 입력값보다 크면 1 , 그렇지 않으면 0을 반환\n","    agg_score = scores['compound']\n","    final_sentiment = 1 if agg_score >= threshold else 0\n","    return final_sentiment\n","\n","# apply lambda 식을 이용해 레코드별로 vader_polarity( )를 수행하고 결과를 'vader_preds'에 저장\n","review_df['vader_preds'] = review_df['review'].apply( lambda x : vader_polarity(x, 0.1))\n","y_target = review_df['sentiment'].values\n","vader_preds = review_df['vader_preds'].values\n","\n","print(confusion_matrix(y_target , vader_preds))\n","print(\"정확도:\" , np.round(accuracy_score(y_target , vader_preds) ,4))\n","print(\"정밀도:\" , np.round(precision_score(y_target , vader_preds) , 4))\n","print(\"재현율:\" , np.round(recall_score(y_target , vader_preds) , 4))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":431},"id":"27RrOvgC510P","executionInfo":{"status":"error","timestamp":1643462927632,"user_tz":-540,"elapsed":39609,"user":{"displayName":"김진우","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Ggb7NCfP7aAu0Hj8nNhErTzUou1vuaWKzjtXq6Auw=s64","userId":"12971138652345879224"}},"outputId":"9f323aba-3dc3-44e4-a3ff-25d327ef09c8"},"execution_count":35,"outputs":[{"output_type":"error","ename":"KeyboardInterrupt","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mKeyboardInterrupt\u001b[0m                         Traceback (most recent call last)","\u001b[0;32m<ipython-input-35-fe7d2abf8e75>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      9\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     10\u001b[0m \u001b[0;31m# apply lambda 식을 이용해 레코드별로 vader_polarity( )를 수행하고 결과를 'vader_preds'에 저장\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 11\u001b[0;31m \u001b[0mreview_df\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'vader_preds'\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mreview_df\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'review'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mapply\u001b[0m\u001b[0;34m(\u001b[0m \u001b[0;32mlambda\u001b[0m \u001b[0mx\u001b[0m \u001b[0;34m:\u001b[0m \u001b[0mvader_polarity\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mx\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;36m0.1\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     12\u001b[0m \u001b[0my_target\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mreview_df\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'sentiment'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mvalues\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     13\u001b[0m \u001b[0mvader_preds\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mreview_df\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'vader_preds'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mvalues\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/pandas/core/series.py\u001b[0m in \u001b[0;36mapply\u001b[0;34m(self, func, convert_dtype, args, **kwds)\u001b[0m\n\u001b[1;32m   4211\u001b[0m             \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   4212\u001b[0m                 \u001b[0mvalues\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mastype\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mobject\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_values\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 4213\u001b[0;31m                 \u001b[0mmapped\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mlib\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mmap_infer\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mvalues\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mf\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mconvert\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mconvert_dtype\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   4214\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   4215\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0mlen\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mmapped\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32mand\u001b[0m \u001b[0misinstance\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mmapped\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m0\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mSeries\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32mpandas/_libs/lib.pyx\u001b[0m in \u001b[0;36mpandas._libs.lib.map_infer\u001b[0;34m()\u001b[0m\n","\u001b[0;32m<ipython-input-35-fe7d2abf8e75>\u001b[0m in \u001b[0;36m<lambda>\u001b[0;34m(x)\u001b[0m\n\u001b[1;32m      9\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     10\u001b[0m \u001b[0;31m# apply lambda 식을 이용해 레코드별로 vader_polarity( )를 수행하고 결과를 'vader_preds'에 저장\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 11\u001b[0;31m \u001b[0mreview_df\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'vader_preds'\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mreview_df\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'review'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mapply\u001b[0m\u001b[0;34m(\u001b[0m \u001b[0;32mlambda\u001b[0m \u001b[0mx\u001b[0m \u001b[0;34m:\u001b[0m \u001b[0mvader_polarity\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mx\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;36m0.1\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     12\u001b[0m \u001b[0my_target\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mreview_df\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'sentiment'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mvalues\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     13\u001b[0m \u001b[0mvader_preds\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mreview_df\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'vader_preds'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mvalues\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m<ipython-input-35-fe7d2abf8e75>\u001b[0m in \u001b[0;36mvader_polarity\u001b[0;34m(review, threshold)\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0;32mdef\u001b[0m \u001b[0mvader_polarity\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mreview\u001b[0m \u001b[0;34m,\u001b[0m \u001b[0mthreshold\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m0.1\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 2\u001b[0;31m     \u001b[0manalyzer\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mSentimentIntensityAnalyzer\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      3\u001b[0m     \u001b[0mscores\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0manalyzer\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mpolarity_scores\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mreview\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      4\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      5\u001b[0m     \u001b[0;31m# compound 값에 기반해 threshold 입력값보다 크면 1 , 그렇지 않으면 0을 반환\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/nltk/sentiment/vader.py\u001b[0m in \u001b[0;36m__init__\u001b[0;34m(self, lexicon_file)\u001b[0m\n\u001b[1;32m    199\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0m__init__\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mlexicon_file\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m\"sentiment/vader_lexicon.zip/vader_lexicon/vader_lexicon.txt\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    200\u001b[0m         \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mlexicon_file\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mnltk\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdata\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mload\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mlexicon_file\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 201\u001b[0;31m         \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mlexicon\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mmake_lex_dict\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    202\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    203\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0mmake_lex_dict\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/nltk/sentiment/vader.py\u001b[0m in \u001b[0;36mmake_lex_dict\u001b[0;34m(self)\u001b[0m\n\u001b[1;32m    208\u001b[0m         \u001b[0;32mfor\u001b[0m \u001b[0mline\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mlexicon_file\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0msplit\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'\\n'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    209\u001b[0m             \u001b[0;34m(\u001b[0m\u001b[0mword\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mmeasure\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mline\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mstrip\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0msplit\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'\\t'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m0\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;36m2\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 210\u001b[0;31m             \u001b[0mlex_dict\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mword\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mfloat\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mmeasure\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    211\u001b[0m         \u001b[0;32mreturn\u001b[0m \u001b[0mlex_dict\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    212\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mKeyboardInterrupt\u001b[0m: "]}]},{"cell_type":"markdown","source":["## 8-6 토픽 모델링(Topic Modeling) - 20 뉴스 그룹"],"metadata":{"id":"UNeb6_9OBag9"}},{"cell_type":"code","source":["from sklearn.datasets import fetch_20newsgroups\n","from sklearn.feature_extraction.text import CountVectorizer\n","from sklearn.decomposition import LatentDirichletAllocation\n","\n","# 모토사이클, 야구 , 그래픽스, 윈도우즈 , 중동, 기독교, 전자공학, 의학 8개 주제를 추출.\n","cats = ['rec.motorcycles' , 'rec.sport.baseball' , 'comp.graphics' , 'comp.windows.x' , 'talk.politics.mideast' , 'soc.religion.christian' , 'sci.electronics' , 'sci.med']\n","\n","# 위에서 cats 변수로 기제된 카테고림난 추출. fetch_20newsgroups( )의 categories에 cats입력\n","news_df = fetch_20newsgroups(subset='all' , remove = ('headers' , 'footers' , 'quotes' ) , categories=cats , random_state= 0)\n","\n","# LDA는 Count기반의 벡터화만 적용합니다.\n","count_vect = CountVectorizer(max_df=0.95, max_features=1000 , min_df=2 , stop_words='english' , ngram_range=(1,2))\n","feat_vect = count_vect.fit_transform(news_df.data)\n","print('CounterVectorizer Shape:' , feat_vect.shape)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"UZ16cwYTBlHp","executionInfo":{"status":"ok","timestamp":1643463790270,"user_tz":-540,"elapsed":10891,"user":{"displayName":"김진우","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Ggb7NCfP7aAu0Hj8nNhErTzUou1vuaWKzjtXq6Auw=s64","userId":"12971138652345879224"}},"outputId":"42863a4a-3140-46dd-ae38-ba36c71751b8"},"execution_count":39,"outputs":[{"output_type":"stream","name":"stdout","text":["CounterVectorizer Shape: (7862, 1000)\n"]}]},{"cell_type":"code","source":["lda = LatentDirichletAllocation(n_components = 8 , random_state=0)\n","lda.fit(feat_vect)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"YN0ZZj5mD4bv","executionInfo":{"status":"ok","timestamp":1643463856386,"user_tz":-540,"elapsed":34566,"user":{"displayName":"김진우","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Ggb7NCfP7aAu0Hj8nNhErTzUou1vuaWKzjtXq6Auw=s64","userId":"12971138652345879224"}},"outputId":"8cdffa9b-ca07-45e2-abc4-5490ca749c79"},"execution_count":40,"outputs":[{"output_type":"execute_result","data":{"text/plain":["LatentDirichletAllocation(n_components=8, random_state=0)"]},"metadata":{},"execution_count":40}]},{"cell_type":"code","source":["print(lda.components_.shape)\n","lda.components_"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ayGvhnzeE8c9","executionInfo":{"status":"ok","timestamp":1643463900136,"user_tz":-540,"elapsed":5,"user":{"displayName":"김진우","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Ggb7NCfP7aAu0Hj8nNhErTzUou1vuaWKzjtXq6Auw=s64","userId":"12971138652345879224"}},"outputId":"68bcaa0a-be4a-4329-fa5d-8a5e67e0bc5b"},"execution_count":41,"outputs":[{"output_type":"stream","name":"stdout","text":["(8, 1000)\n"]},{"output_type":"execute_result","data":{"text/plain":["array([[3.60992018e+01, 1.35626798e+02, 2.15751867e+01, ...,\n","        3.02911688e+01, 8.66830093e+01, 6.79285199e+01],\n","       [1.25199920e-01, 1.44401815e+01, 1.25045596e-01, ...,\n","        1.81506995e+02, 1.25097844e-01, 9.39593286e+01],\n","       [3.34762663e+02, 1.25176265e-01, 1.46743299e+02, ...,\n","        1.25105772e-01, 3.63689741e+01, 1.25025218e-01],\n","       ...,\n","       [3.60204965e+01, 2.08640688e+01, 4.29606813e+00, ...,\n","        1.45056650e+01, 8.33854413e+00, 1.55690009e+01],\n","       [1.25128711e-01, 1.25247756e-01, 1.25005143e-01, ...,\n","        9.17278769e+01, 1.25177668e-01, 3.74575887e+01],\n","       [5.49258690e+01, 4.47009532e+00, 9.88524814e+00, ...,\n","        4.87048440e+01, 1.25034678e-01, 1.25074632e-01]])"]},"metadata":{},"execution_count":41}]},{"cell_type":"code","source":["def display_topics(model , feature_names , no_top_words):\n","    for topic_index , topic in enumerate(model.components_):\n","        print('Topic #' , topic_index)\n","\n","        # components_ array에서 가장 큰 값이 큰 순으로 정렬했을 때, 그 값의 array 인덱스를 반환.\n","        topic_word_indexes = topic.argsort()[::-1]\n","        top_indexes = topic_word_indexes[:no_top_words]\n","\n","        # top_indexes대상인 인덱스별로 feature_names에 해당하는 word feature 추출 후 join으로 concat\n","        feature_concat = ' '.join([feature_names[i] for i in topic_word_indexes])\n","        print(feature_concat)\n","\n","# CountVectorizer객체 내의 전체 word의 명칭을 get_features_names( )를 통해 추출\n","feature_names = count_vect.get_feature_names( )\n","\n","# 토픽별 가장 연관도 높은 word를 15개만 추출\n","display_topics(lda , feature_names , 15)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"tku51U1BFPgU","executionInfo":{"status":"ok","timestamp":1643464230858,"user_tz":-540,"elapsed":948,"user":{"displayName":"김진우","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Ggb7NCfP7aAu0Hj8nNhErTzUou1vuaWKzjtXq6Auw=s64","userId":"12971138652345879224"}},"outputId":"bf8831cf-3257-405d-cf06-4777f97f7303"},"execution_count":42,"outputs":[{"output_type":"stream","name":"stdout","text":["Topic # 0\n","year 10 game medical health team 12 20 disease cancer 1993 games years patients good 92 baseball number 11 hiv new 15 april players better use hit average runs time aids 25 win 30 player league study vitamin season research food drug day national play high 17 1992 msg run diet 50 treatment al infection patient center 100 dr clinical 14 page volume 000 early best total ball rate information 18 13 low think used states long effects second 16 1991 care risk series double age people 35 base university medicine field 28 edu probably reported make won control blood 500 24 public 31 don 21 end children 22 300 19 90 like extra months 1990 27 93 level women said york cases numbers effect studies new york help times 23 major test american given human percent 40 cause home bad lot important performance data 29 normal san development lead 80 did higher based report way 26 young does week using child 200 united john service believe really united states heart school st fact common related pages doesn 60 results just available prevent east world case washington california days state pretty mike ve single 32 problem following actually news short little getting future ability department course hospital big doctor result likely analysis need 04 real large program 91 work expect gets cost form mark recent small problems ago office today developed reason addition range red great changes products community general past david certainly post usually west 800 white having reports look left chance right needs say plus soon got lost years ago 44 date ll including old known rule basis history strong population programs million provide possible according self box article include note called cs 00 taking says evidence starting weeks different free order previous net non night gives makes current half body point hard anti far close local hours sure going especially similar areas final let line manager considered change contact internet received person area steve add yes earlier term street issues com longer able quality know family specific points making support 03 mean men lots hot death 05 includes present difference organization type hope response stay rest product argument wouldn position value job complete opinion bring users life unless maybe international process questions worth law instead come blue true individual group section release basic speed money currently groups involved isn published thing ok standard experience tv example consider comes 01 away start giving practice seen trying appears terms taken led suggest art idea cut receive room scientific ed posted technology try culture power certain designed guys reasons issue finally couple clear articles place error contains latest rules follow personal table added live question claims want fast quite count looks coming types completely interested provides directly clearly guess apply comments discussion hand interesting black approach model water save source press references near happens 02 entire appropriate understand continue knowledge city man changed light book agree company provided wrong check born recently matter network came science reasonable described hold remember nature bit ii simply needed ibm particular doing turned useful guy size list shows required claim means living commercial necessary regarding oh countries break class key gave fairly looked multiple included created thank western avoid access possibly mother action mr member thought host various uses special values conference professor faster definition write tell goes thanks address stop michael paper fax society generally don think buy method didn sex sorry europe haven sources figure easy resources ones ways project saying parents deal drive sites things suggestions defined head 128 words pain greatly limited set wasn easily difficult nice feel understanding 256 theory takes obviously answers title ca lines official simple talk actions systems appear allow answer situation requires require main ground outside apparently middle copy advance willing doubt trouble aren deleted choice sense act members anybody kind exactly policy fine original environment wish love works eye ms died statement reply return ray price gone int stuff view started design sent mind written supported took memory sort radio request define applications distribution worked built setting attack manual working road lives running context read wife earth function held woman software century turn story version path description happen dead word subject ask talking friend knows unfortunately text went modern force hear asked country happened events supports draw info open accept door handle later mail author don know purpose face kill site looking couldn correct saw parts eyes brought reading tried sounds remote told assume happy government homosexual reference hp processing lord details learn knew board existence building heard dog die machines event attempt writing resource village mentioned entry belief paul message leave posting hate send sound computer pass mouse build mary entries solution create hell appreciate inside exist wants search appreciated imagine ideas political picture hands machine package rights wanted kuwait functions accepted convert input phone library object card space dec house ac places features green wrote signal application disk thinking video bike mode speak format color hi dos army conversion shell language town meaning peace british objects command clients screen dod email battery arab war mac window image anonymous truth books movement anonymous ftp user chip false land programming tape sun versions wondering visual lived greece killed does know car shall bus driver uk tools comp digital father jewish party colors newsgroup russian files mailing output son faith riding frame homosexuality military hardware israel circuit gov string turks file usenet adl religion ftp bits ride soldiers keyboard azerbaijani display church jesus mit archive turkey code tiff police 3d interface windows pc xv greek religious graphics export pub sgi images r5 wire god tool amiga catholic christian acts formats faq pixel nazi client sin tar palestinian printf holy unix directory thanks advance 24 bit israeli soviet os gif postscript null marriage christianity font spirit bible window manager muslim default echo jews arabs christ troops xlib usr mit edu azerbaijan christians apartment x11 muslims server scripture heaven ottoman villages genocide argic lcs x11r5 lcs mit palestinians serdar argic xview serdar armenian armenians armenia lib toolkit turkish motif dos dos contrib xterm openwindows istanbul char fonts widgets xt jpeg widget\n","Topic # 1\n","don just like know people said think time ve didn right going say ll way did good bike really got want went left thing came let told little don know started maybe make home heard sure years saw come remember things old tell long thought look day says lot does work doesn away took bad better course probably need getting help happened car problem later isn oh great couldn head wouldn stop face days ride wasn doctor start called guy far yes new won looked used asked azerbaijani doing try seen children hand place leave apartment tried door big ago kill point live trying man person riding believe night road wanted mean battery couple dog happen saying stuff wife pretty looking ok year building guess room turn idea second hard having near hear light fine taking guys pain end coming actually dead friend father ones talking kind open armenians feel woman able small turned quite wrong times talk soon best mother bit street knows hit buy city life gets aren mind family hands eye stay eyes knew school black don think nice sort real gone reason ask gave fact body easy women killed money use half hours understand red haven running house thanks taken case figure young months story comes line hospital deal worked ground problems hope power different rest making radio lived looks week especially close exactly party blue sounds goes brought situation usually run makes hell area sorry wants experience matter set break tv chance finally care save thinking completely short needed police cause drive outside weeks possible lots read lost mike effect job town imagine blood true similar cut order means local bring soldiers water hold happens years ago sound speed happy bus fast child wondering past works love inside likely high death parts change food longer today died large parents instead apparently sent fairly single trouble window machine middle question law lives deleted mentioned check 30 white agree 20 takes anybody post unless cost living led 10 simply 50 doubt giving son easily involved recently words working unfortunately hate speak answer price armenian 15 places pass clear opinion steve heart die control events difficult driver world 40 attack lead group normal self born certainly solution example difference position write free changed low table state avoid phone base learn interesting list simple reasonable 100 willing various expect word earlier worth handle held important return thank picture 80 number count starting allow office add obviously strong sense plus company faster entire reading play contact possibly size tape men type field anti generally god force signal 500 special military space country current certain advance age info using human ball given appreciated clearly choice azerbaijan general wrote windows original known assume mr 60 key questions organization consider effects does know 12 particular net ways reasons truth 1990 paper appear path subject correct act lines mark green event continue received 18 edu apply wish directly box purpose note posting 000 27 major russian send troops common needs details reference member hi medical manager written built shall service board considered terms class draw level book extra personal address chip war present range attempt site volume soviet action 200 21 higher following 28 date build armenia main prevent final numbers greatly posted search information ideas center reply gives 14 accept 25 pages 26 29 holy false method shell design follow including response suggestions public hot land value health versions books groups quality mail previous earth rule video members runs 16 view release language writing army published cases claim approach setting 31 ca created changes nature 11 tools included addition complete regarding card form game 13 news necessary term object peace comments section 19 package require result screen department model government 24 useful available error acts title patient receive heaven 17 source com total ed series risk values study suggest objects 22 ii knowledge interested copy processing individual designed argument required according shows request provide player medicine early provided statement drug answers non currently spirit infection performance described appears john colors actions features specific color appreciate project mouse results article test email 02 93 include practice sites image percent function games turkey support basic report ability village rights computer description page input process standard related limited areas 23 april muslims studies program application thanks advance access official future theory issue history create based environment states discussion sun dr st 800 muslim dod 91 meaning 90 marriage added conference latest supported memory east developed double product sources 35 points uses 00 average west products recent host bits types accepted usenet commercial david 300 michael basis california american resources science win version rules baseball includes diet frame claims movement hardware distribution systems reports season msg appropriate washington convert requires treatment string team rate author million press modern christian policy san al define supports society belief exist art message internet toolkit ibm reported population scientific provides multiple understanding greek community machines faith europe articles mac technology context british christians research paul political new york league circuit applications york analysis evidence patients manual national tool library players functions references ray uk university international faq countries command echo newsgroup defined sex villages lord file western united cs gov programs keyboard comp arabs conversion data ac hp 1991 remote professor 1993 ms 1992 disease israel fax dec development 128 code jewish jews text wire network files 44 digital definition religious culture palestinians religion software contains output arab users display issues century 92 user genocide 32 catholic mailing 01 united states turks israeli archive images palestinian pc cancer 3d disk programming tar mary null homosexuality vitamin clients sgi 05 anonymous existence bible church adl 04 nazi resource clinical server greece unix turkish entry interface christianity jesus postscript gif export serdar graphics kuwait window manager pixel argic xv widget directory 256 os mode christ format entries aids visual formats serdar argic r5 client widgets fonts amiga ftp mit motif scripture sin openwindows xlib font int 03 xt homosexual anonymous ftp x11 tiff usr xterm xview mit edu x11r5 contrib pub default 24 bit ottoman istanbul lcs mit lcs lib char jpeg dos printf hiv dos dos\n","Topic # 2\n","image file jpeg program gif images output format files color entry 00 use bit 03 02 04 section version xv programs quality convert 24 int read info display char tiff line rules entries null build number define won don printf free include formats 01 write 24 bit size 05 available does software bits conversion return colors pixel note lost current author source ftp edu information input better title code 10 make original graphics new need time mac year 256 1993 case archive email open directory picture standard try good want check non postscript view usenet function hardware error sites look best faq save data lines text send pub setting start used address value change echo commercial long small date people processing end using sure defined high user 16 particular space like count following true large 15 different set details blue ll useful windows work avoid package screen amiga sun default requires process way pc needed string red news san article unless machine old final 25 know order comp white lot usually special test answers changes new york group york versions let break given mode 11 20 run sources multiple choice example list com previous anonymous built type probably posted hand os reading disk including 14 support international described 500 net st 32 deal thing writing national right values mit command apply likely nice eye ok 12 create attempt interface instead provided say false related faster road 50 uses based driver called 13 site mit edu worth types mail just ask comments results specific copy single rule subject answer required 28 tar real black doesn american range california receive human 21 later tools allow host able developed functions help big individual directly reason dos appropriate description don know internet provide home fast request great included handle export latest win products means library limited situation posting works really ways needs exist systems similar basic simple 19 result 100 report simply 30 suggestions programming users mind supports written unix correct tell memory require questions product east west form actually short point expect areas common isn did problem world april release art city currently page looking league machines couple post longer language 18 recent known general added aren official features john getting includes necessary contact far certain earlier bad away chance words anonymous ftp tool public created personal little trouble continue future things terms provides effect effects lcs mit lcs saying purpose contrib sort hi finally early client 17 level 35 pass doing main left plus fine digital inside higher 93 received low completely places accept normal meaning 80 sent quite easily cases remember major organization didn learn place heard mean money rights rest cs argument add access strong window signal speed comes goes leave takes outside suggest newsgroup distribution definition close turn problems groups applications reasons looks reply volume going second double happy games 1992 lead body 300 clear thought making issues come wrote game ray runs said unfortunately pretty various fairly building fact half having willing present table possibly family hard ones visual basis shell opinion hit message supported knowledge regarding light understand designed gets involved makes person stuff 200 extra 22 computer possible gone maybe approach recently mentioned press reasonable times cause turned published difficult thank x11r5 trying articles assume 31 draw million agree clearly self running wish contains 60 addition ve 44 hope kind consider care face happens 128 years shows wanted working difference today lots 92 looked department country stay important drive generally parts numbers got wondering manager interested area company exactly believe video follow seen day term army manual months weeks starting 23 talk green school saw technology university percent worked man sorry started path uk experience 40 research server average price x11 complete issue greek word appears cost anybody actions design ibm western cut key shall phone near application network ca coming course ms hold 800 led interesting box paper appreciated 27 claim changed position xlib center project state nature thanks wrong giving dec window manager power fax analysis job ac conference environment widget scientific 91 couldn object sgi search points modern ground performance movement claims play model think idea 000 church sin 90 entire does know toolkit taken hands states gives acts matter medicine ed series government radio total earth ability frame service british class held tried certainly apparently method figure taking guess took guys solution yes keyboard life history sound haven town mark anti 3d event according wasn knows 1990 deleted talking imagine sounds hp easy stop field hear usr reference resource room accepted response thinking dr discussion gave reported die friend force remote steve 29 al feel theory michael obviously community ii 26 ago card question understanding asked control board washington greatly player objects mouse especially book appear reports spirit death action past child advance statement pages tape says live local science children gov speak brought members head told base days books food considered street mike context story military week practice soon wants david references marriage heart sense fonts kill medical mr font 1991 son died political tv lib rate ideas doubt middle dead office chip eyes hate r5 knew turkey buy happen house development thanks advance study land don think bring aids xterm society guy went love appreciate paul parents events xview member resources professor israel oh happened wouldn motif blood wire mailing dod clients attack united openwindows xt prevent came hours team risk adl young widgets pain party existence treatment homosexuality circuit car christian belief mary culture europe policy lives hell born god population mother night police living years ago act health ball bus catholic doctor battery russian killed studies hot wife united states ride countries evidence father jewish century woman law war vitamin village men door holy arab women muslims dog soldiers players hospital israeli jesus riding religion disease baseball truth water bike sex msg greece drug patient infection lived lord palestinian jews clinical arabs bible age scripture religious dos dos peace season patients troops christ nazi diet faith heaven christians homosexual palestinians turks cancer argic turkish serdar argic genocide villages serdar muslim armenians apartment kuwait armenian soviet hiv christianity ottoman istanbul armenia azerbaijani azerbaijan\n","Topic # 3\n","like know don think use does just good time book read information people used post question group point list interested need make want case work sure way new non current different problem power questions probably water mail actually article subject number books ground edu science really possible send kind wire newsgroup adl best course cause reference ve thanks quite better lot things reading evidence try far help example usually answer ask interesting address general circuit research news say discussion called fact groups long posting seen posted given true issue difference certain real important hope theory believe person net high having cases body email scientific looking original particular doing problems hot tell certainly yes sound provide years source test able note using type going ll place wrong major position pretty effect reason common feel response company phone large consider code sort mind articles knowledge process known public doesn simple check points info exist similar world box week results little suggest order correct ideas look message practice based experience main ago generally idea unless available short making specific form paper local word sorry light makes computer great useful come university understand numbers standard did answers goes small stuff trying appreciate sources following anti sense means published agree recently possibly treatment ones appropriate related thinking thing claim matter pain recent bad let learn claims simply special free result technology thank line reasonable reply studies copy accepted service mentioned view members level approach bit mailing end works currently state san including various white especially isn house likely com avoid clear types term language organization radio purpose aren american required longer uses project contact culture normal text hand design personal value comments faq inside past area run systems designed written directly second couple working right requires understanding regarding says instead don know old self quality guess hear choice medicine hi opinion money got life issues class study anybody obviously exactly led mean completely outside require big rules follow difficult john areas start apparently previous sounds present prevent method references writing fairly don think involved words details shows function future worth mr years ago support unfortunately reasons apply request open basic wants expect maybe member soon parts david hard does know needed complete considered internet thought modern receive object today change job taken doubt data continue asked department necessary law getting knows comes write author assume according steve places early contains history model friend day individual appear wish lead easy wrote school limited deleted saying size happy days argument care include appears movement nice action ca times changes usenet situation turn black ways later attempt strong away description wanted application easily access low needs talk add changed described terms country talking title rule suggestions library takes center haven deal won date basis range weeks set field network environment board michael willing ability sent addition force create official lots series said accept looks search nature office community hate products meaning story appreciated effects existence green doctor worked included reports version entire distribution cut chance statement starting single head art clearly return greatly close control signal trouble family received live couldn happen building 100 western ok medical objects section picture al actions gives lines report count final commercial resources site earth acts context wife includes imagine speak wondering society build taking values tools false provides remember mark middle extra added religious wouldn living risk analysis earlier press draw california months bits dr year dead league ac 1992 giving volume hold fast told coming lost path hardware tool total policy drug advance 14 rest age century patient provided built 93 tried countries die hours truth eye release graphics defined young police greek conference double near political hell files gone output held 30 ii 50 belief features human figure tape drive frame home gets pass latest act 1993 happens setting space went multiple developed bring pages wasn knew british christian 800 development buy stop uk table paul cost 19 heard city supports running program save patients national bible speed event 18 sites face government definition rights blood religion tv brought april archive 90 new york york finally programming left 1990 versions input man shall st supported looked baseball comp kill gave 60 red fine higher 20 manual palestinian homosexuality west runs disease peace son fax faster born half memory didn started love states international page 40 death 10 road host leave united applications ed ray east machines users killed driver catholic 80 programs guys allow plus clinical convert reported cs faith united states happened church key stay turned jewish 1991 25 saw events functions came 16 15 men military sex holy 21 break took israeli solution base dec chip handle product processing hands created heart define rate population average blue ball dod europe play performance food conversion attack room price children card shell army gov mother oh software digital error parents client mike 29 35 land 12 05 200 machine 500 file hp night riding color lives diet 300 party guy team lived woman professor 31 24 player window street eyes 22 image infection anonymous screen 000 car format women 00 mode msg remote entry battery door hit 17 washington ibm package 3d 23 ride 28 disk resource health manager command bike thanks advance died 32 christians xv echo vitamin 11 13 visual ms interface war video hospital display games cancer game sun pc marriage million string child israel percent user arab keyboard unix lord postscript 01 town arabs 91 27 colors 44 father palestinians sgi jews images players os mit christianity aids village xlib mac mary gif win muslims 02 anonymous ftp window manager ftp motif troops amiga dog server spirit clients azerbaijani nazi 04 formats fonts entries jesus pub god 92 export windows int x11r5 bus 26 widget genocide mouse null scripture pixel muslim season russian tiff font serdar directory christ argic homosexual default soldiers tar widgets serdar argic xterm soviet xview xt printf heaven toolkit armenia 256 x11 greece turkey kuwait villages sin armenian turks 128 24 bit turkish azerbaijan openwindows dos char r5 armenians mit edu jpeg lcs mit lcs 03 lib contrib ottoman usr istanbul hiv apartment dos dos\n","Topic # 4\n","armenian israel armenians jews turkish people israeli jewish government war dos dos turkey arab armenia 000 muslim genocide turks state muslims history greek world russian university said azerbaijan killed population new rights soviet ed arabs army soldiers ottoman did peace villages istanbul human press children palestinian years anti professor country political greece land states policy fact men international women serdar york military new york argic dead today million village nazi serdar argic palestinians kuwait british national troops general city united source american countries europe western east right time mr ve police town according following religious attack times members area like published year group force official west including community number party report united states support return power law century april let middle non entire center office ii reports away living second called took left public claim taken road 12 30 california washington sent 15 case situation near live groups page 10 death percent movement long control local brought lived dr based 20 small make old cut statement reported order act great end day rest rule work article news blood events solution modern ago came involved self later told way issue subject 19 help given lives actions held 13 major place received 1992 attempt information house religion gave society al claims able hand 1993 final 14 17 set course question far life organization 21 pages does 22 real 11 research member 16 conference result died 40 tried days 25 known places personal come volume close seen studies kill true just wrote past section sources action culture necessary present months service son continue department open 18 100 existence provided large john clearly age considered view 200 christian free finally allow addition areas position hope 26 acts opinion create story hate form evidence common simply happened cause eyes night command face accept instead years ago especially change lines leave head having means certain building talk future young taking problem numbers 92 list 28 23 half described little price process 50 home truth say 1990 search reasons prevent went line led family recent clear 60 wish man high shall basic edu paul response example save want point created stop david agree library ground die saw strong title early 800 various main important event shows saying accepted hours started look hands complete total making 29 completely school 24 san treatment purpose 1991 93 heard written worked lost trying post gives dec eye used asked 31 ways sense longer weeks supported 500 outside changed development matter coming include company language files mark certainly using receive working better wanted food single method happen different chance included related problems feel turned knew deal anybody recently simple special yes doubt apparently giving born consider author basis built gov christians references hot field exactly week exist hard soon use answer 32 articles expect happy details water idea generally care network nature similar 44 heart going resources book short 00 person earlier doing added 27 version starting file wants earth possible turn appropriate radio date speak bring actually mentioned false archive science 300 looked regarding think probably parts ones picture understand gone key supports figure need functions site previous net shell ability goes provide release getting start remote league term designed don count latest try couldn drive write table includes ask base difficult haven fax words issues argument st posting bad green program remember job reason hospital 91 writing got sites build black points street parents cases unfortunately books comes thought value 80 higher willing thanks read appear mother pass knowledge required choice copy text hold memory steve car discussion really developed reference setting mean easy says knows money terms kind directly values original paper obviously range trouble know wasn imagine comments suggest window commercial interesting 90 level aren performance description host rules sorry specific talking add best body tv word check mind address image tools avoid space contains difference current double quite effect board wife easily definition machine tell send analysis thinking message happens project usually approach hit series access draw posted love bus child available comp makes ideas ll holy display study contact greatly practice guess 35 works understanding features medical experience takes clients uses sure path run handle define believe runs cancer apply nice color didn provides ms entry interested results processing low fine effects dos deleted good thing learn cost room maybe context wrong hear things adl needed oh 02 note unless buy driver plus light wouldn lead stay defined lot class white possibly reasonable com worth questions michael couple conversion bit normal sort client isn currently woman multiple email card ok gets big assume phone environment lots ca requires church azerbaijani ac mouse video scientific chip red likely heaven homosexuality request convert art advance belief usenet play father individual error machines products lord faith 04 needs friend input meaning theory inside string risk object catholic int amiga guys won blue useful changes break appreciated applications spirit function signal mike follow pub appears hell uk looks export correct particular box fast christ sex type size don think ibm thank marriage limited sound disease doesn running reply medicine application tape package reading screen win data average windows answers hardware computer 01 newsgroup dog 05 sounds appreciate game patients team quality sun faq drug mail christianity looking format guy require door objects programs pretty rate info standard player mode extra don know games entries test wondering doctor code god ball jesus stuff colors cs distribution wire infection health systems font speed technology does know apartment types fonts software dod null 03 char bible riding window manager internet os bits patient manager pc frame mac ftp resource disk output pain digital scripture suggestions toolkit anonymous ftp mit aids players anonymous fairly graphics design 256 hi product faster mary ride keyboard unix users motif server tool 3d xview visual directory homosexual hiv formats mit edu versions x11 bike user clinical baseball hp contrib lcs mit lcs r5 widgets xv images pixel 24 bit circuit thanks advance mailing season model interface gif sin default sgi printf xlib tar manual x11r5 programming diet echo xterm msg 128 xt widget jpeg tiff postscript ray usr battery lib openwindows vitamin\n","Topic # 5\n","edu com available graphics ftp data pub motif mail widget software mit information version sun server file use window based list subject tar program send user package cs x11 set code application computer support contact 3d systems source files export new comp mit edu unix 128 fax image using include contrib manager library directory info uk applications xt ca resource faq interface widgets free look gov ac includes ray processing like objects sgi toolkit text dec archive request display r5 message email tools lcs university lcs mit line site including window manager anonymous analysis resources conference used sources lib programming number x11r5 hp users distribution release windows xview help format anonymous ftp ibm news address time work functions 93 research object access programs open run note following openwindows tool contains xlib various language sites called david 91 800 postscript amiga event volume written mac images supports type features 10 provides internet net events usr clients 92 formats included 11 18 environment supported 12 visual keyboard uses 24 runs search stuff 1993 mailing pc public standard general center commercial specific versions phone hardware running client complete digital manual does host check added form local product order currently machine development 90 example space technology need 16 building area box questions shell function value simple font state current description xterm color real want video add art pages copy group project 21 imagine related 44 multiple 20 developed answers non make path write john people world 100 just article michael level tape provide fonts addition machines 32 13 14 50 usenet create try day date point problems control 40 screen details different things mouse ms ed doesn command built 23 works 1992 thanks mark 30 ii steve paul 19 17 change model design good interested 15 scientific read products single sent large useful posted received place remote latest provided don limited common designed author class soon service posting book default know context error working word dr references books ll null problem body major return reference particular changes press table series way receive known international plus places probably office changed end easy possible input 22 types string science 00 similar issue os test performance 29 requires 25 ask handle 27 values field writing action price network comments cost man street bus army special needs purpose position company disk draw 1991 build post 300 old frame lines national mike asked makes main start created sure newsgroup appears washington articles answer save process dos best 26 small later case section days easily page means paper 1990 fast present pass course reply doing basic organization 35 hours great able signal road short issues ability size st setting future 31 200 wish department recent allow making entire regarding ve actually defined pixel 000 base argument members isn discussion held let reports cut require instead directly avoid described personal member times method high definition human key card apparently feel 28 involved simply output looking takes define required got title view medical better outside lots earlier head range official appropriate memory suggest quite board necessary europe young reading individual given bit break mode 60 drive parts yes true interesting 80 entry terms groups party gives near city suggestions possibly united low deal response community getting difficult understanding 04 close conversion starting speed children earth society lot having couple solution april previous room remember stop haven west false child week act team mentioned half san usually trouble al sound areas echo approach fairly little correct normal accepted right int job heard started east second wrong really basis rate looks convert published knowledge results california reason big generally nice comes think today reported tiff extra result tell numbers fine actions count speak term especially york willing wrote new york happy middle gif theory double long considered does know months appear saying come figure black cause ago land going worked power recently certainly faster final hard certain situation years needed history person report hands care came acts consider choice exactly win house past effect cases expect original unless pretty hi friend ways 05 gets hope buy accept appreciated understand radio coming ones attempt red kill effects states continue words longer israel life won wants year far green reasonable weeks couldn 24 bit taking worth didn follow early rest talk 01 assume home mr thank did mary idea quality risk bad tried trying american light question happen family death british strong white blue fact say lost practice hold medicine meaning thinking self guy western knows sin thing player happens likely ball professor total brought 500 chance apply guess exist story points wasn car government son greatly political aids truth xv military matter don know bits char colors ideas heart shows advance said important experience opinion completely sorry learn aren away claims eye ground night jesus anti left talking school oh money entries hand higher bring town wanted church turkey century seen difference unfortunately spirit mean leave nature force picture inside reasons kind 03 turned sort mind country goes clear deleted appreciate giving die ok wire believe driver prevent health thought claim tv finally study anybody live thanks advance gone games hot stay wouldn according bible led obviously hear maybe looked wondering greek modern movement play agree hit existence turn treatment parents riding died taken 256 countries guys united states christian face 02 lives doubt eyes sounds took love dos dos game says age told studies rights dead sense rules average blood don think law culture mother went policy god dod lead years ago pain printf marriage food statement clearly patient happened jpeg diet rule saw living hate war evidence knew serdar million ride men doctor russian gave attack belief shall percent hospital circuit bike sex born wife woman village msg holy greece father baseball door women hell chip cancer water lived homosexual troops population lord religion peace jewish infection drug clinical league palestinian catholic disease homosexuality religious killed christianity hiv faith patients dog muslims battery israeli christians police argic muslim players season azerbaijani heaven christ jews serdar argic arabs istanbul turks soldiers arab palestinians genocide kuwait nazi armenians scripture azerbaijan armenia vitamin turkish soviet armenian ottoman villages adl apartment\n","Topic # 6\n","god people jesus church believe christ does christian say think christians bible faith sin life did paul man love know way word just lord time don things law like truth question christianity true point fact human come spirit son reason words hell good father world mean make holy religion homosexuality catholic new scripture said wrong person mary heaven homosexual john right day death meaning read shall different marriage belief says evidence nature means idea given need saying body sex men earth acts accept understand statement let sense really example doesn view claim clear existence answer religious feel mind ask certainly agree argument far definition use problem want children used certain simply term quite matter thing original trying course called thought case jewish free great context place second issue die having note 14 st clearly live power based understanding yes child born important hate mother 12 comes end follow look living came work years makes book heart speak tell exist false written possible assume non dead ve long discussion 15 later change parents doubt real consider 18 jews history 16 experience wife subject order little away according isn peace works actually language best terms hold today 11 hope woman better doing following going hand coming lives basis times opinion state 13 mark message knowledge old 19 20 known taken needs david rest act sort correct women heard early society hard personal books didn gives present 10 wrote 17 sure particular knew especially common position bring try movement self necessary form maybe talking general exactly probably reading kind able response action result apply purpose talk support making 22 accepted seen gave ways actions died remember michael story century greek issues specific difference strong modern involved considered deleted defined days willing 26 individual 24 error questions set held study obviously 23 instead receive created hear appear reply community interesting situation save lot define taking unless told lost appears family suggest command article outside light wants guess practice choice using including young giving start similar source leave goes 25 wish completely cause knows friend 28 text reasons turn approach described 21 allow public care regarding bad complete group post mentioned bit uses land brought help eyes final don think received ideas writing shows return problems asked ll happens avoid israel blood open finally deal add include short earlier led likely culture members ability difficult ii happened past left added couple required ones convert groups age directly comments pass generally took thinking claims future longer expect reference lead trouble takes happen write basic wasn standard wanted recently rules create cases points continue attempt parts includes close single city head various learn event won haven places half limited force year total com wouldn job 27 sounds number lived 31 events references require model aren provide face stop simple looking thank usually figure don know included apparently author art changed posting getting break process object cut member sent working large mr related normal line ago sorry list values states unfortunately west possibly previous description war requires appropriate money major faq stay higher service hands test big worth developed sources level risk posted sun main effect type sound rule 40 conversion address news search western anybody build send 30 entire answers double imagine edu special control gone picture water base gets title week draw house kill rights united version oh night recent happy provided couldn east area ok play 29 easy tried results needed country years ago changes ground pretty reasonable radio key got date programs mike shell muslims areas 32 environment development dr food 44 90 saw home high section details looked addition request went supports useful function fairly starting started numbers ca attack price nice countries room greatly multiple copy killed usenet effects mode road easily field space access contact count path supported white interested science advance small 100 political net theory product stuff reported performance rate plus chance fine policy current built official resources available published provides mail prevent middle turned extra soon red kuwait aids setting 60 studies near cost fast appreciate paper solution frame thanks scientific united states office ray value features treatment image press organization looks types car university analysis reports running applications latest months quality table 93 buy pages objects school 1993 worked currently black technology 35 check hit 200 british email drug patient articles tools greece hours 80 products american dog library driver steve 1991 speed anti building machine low 91 signal newsgroup information drive company conference international research national class series host method al tv army military government uk program local party population lines code report page town eye info box range inside door lots tool 50 professor genocide project troops pain street village center hardware card color 800 bits functions does know appreciated million 000 application anonymous run suggestions contains comp echo ac york new york faster california versions distribution disease hi package 00 win percent cs wondering memory data commercial ms 02 entry average screen nazi green mit europe display cancer internet images design baseball systems tape team 1990 computer game lib xv ed muslim guy diet player clients soldiers season input pub 1992 handle fax board blue volume palestinian medical guys doctor washington weeks site ride phone 500 sgi resource hp mit edu april hot palestinians department software file ftp police ball gov network games window ibm san israeli pc dod int runs font patients medicine user arabs size null tar hospital manager soviet users health riding sites release designed 05 export programming machines files russian battery azerbaijani arab mac msg thanks advance turks os archive graphics mailing turkey armenians remote 92 armenian dec digital turkish players fonts villages serdar video 256 armenia bike ottoman argic 04 windows motif league mouse client toolkit widget colors xterm 01 widgets chip istanbul serdar argic output visual disk 128 apartment 300 bus openwindows azerbaijan manual 24 bit printf keyboard processing xlib server unix format x11 wire char formats r5 adl postscript pixel infection interface hiv xview default xt amiga gif usr entries vitamin 3d directory window manager anonymous ftp clinical string jpeg tiff circuit lcs mit lcs 03 contrib dos x11r5 dos dos\n","Topic # 7\n","use dos thanks windows using window does display help like problem server need know run work program screen software pc running set want advance memory ve line hi used dod key xterm graphics bit card looking color thanks advance appreciated way make application time just copy data code mouse video version error lines type input machine ms sun fonts mode computer lib works support disk programs speed x11 doesn able chip mail anybody space don try following user usr frame hp higher tried standard network x11r5 got font start look trying high client price change keyboard board does know low drive end problems fine greatly file right email openwindows performance unix different size remote output new open having os green machines working fast users draw buy string create stuff digital manual number possible instead 10 applications ac local ca info driver simple question control clients command tell second echo method faster good information doing hardware access available page environment red amiga better signal allow suggestions 16 wondering built normal things files visual points appreciate text features solution default 256 colors package hard ibm shell host easy function fax uses latest project box seen tape single cost motif level thing sure point looks real example true test wrong model 100 send nice actually source com write home ll check systems handle add design runs best getting gives build correct little value uk small bus company 00 come xview area power order man current 24 similar really pixel main ideas comes net include process let multiple mac currently blue setting 3d read did yes appears far unfortunately product lot series xlib values makes probably interface pretty black needs thank non tv original path rate called think manager written phone hope later table required supports return 50 quite 25 programming means won plus going appear based cut note message win white created term haven isn postscript great supported 20 range trouble event pass times internet starting happens experience gets sort course large products exactly reply 40 circuit ed given believe site easily directly address goes recently define mit comments knows defined bits require ok idea faq 60 old parts needed case various special 44 changes effect say unless wrote class ones 11 response shows big simply 32 maybe image pages matter extra dec commercial long sgi functions mentioned short free results 800 result turn hold giving mean couple limited included making word press release willing requires versions post 200 convert types worked kind tool difference figure major library obviously 15 ftp known 90 rest 80 double especially radio 500 provide inside fact heard 30 answer paper assume suggest designed usually hand difficult complete deleted thought necessary left guess writing entire 12 object fairly likely base dr ask 24 bit state sorry ability looked takes break section job provides actions purpose lots individual happen world close half changed common useful reasonable questions includes remember ii bad resources wish comp appropriate choice basic view 14 including mark taking personal longer author approach ways understand specific care friend 300 general expect 01 away reference public john numbers started tools michael stop avoid gone oh average distribution date light group states resource play developed sounds processing possibly finally future provided particular interested completely turned live university stay learn news consider references contact kill save exist directory edu places posted weeks department posting apply details center art road street images false wanted happy deal total family count important movement 05 place imagine claim modern 19 accept according language thinking told books die feel 22 present objects soon generally areas says mike service outside force request contains 000 certain book 91 final lost million days analysis field dog title list reading hands self san reported doubt words clear picture don know lead people search sources sent opinion sense 35 argument position reports certainly dead guys 18 described gave face description previous cause wants claims bike r5 steve aren 23 21 building didn st attack earth volume taken lives article toolkit asked don think situation subject 28 considered null archive david format ground money head basis clearly national attempt anonymous interesting mind cases added bring rules hate ago anonymous ftp reason worth widget 29 13 received year happened 128 17 california newsgroup 1992 office british xv terms quality land christian speak scientific theory today 31 ride related 92 follow riding week wouldn 26 human talking leave near form player couldn middle person export reasons articles saying research said games months room al regarding heart gif 1991 years day member gov technology paul official definition hell eye apparently answers guy love dos dos practice death continue context went events age window manager receive led hot car int nature brought action involved ball conversion knew addition child meaning act 04 discussion 1990 earlier western xt development prevent strong sound organization mr ray hear battery existence 27 washington coming talk effects past formats 1993 widgets died wire entry wasn chance accepted groups acts issue usenet took team international 93 came children report community hit history law knowledge greek house agree school story early issues entries recent anti years ago night truth char sites west sin understanding body eyes city east members living united young policy party lcs mit mit edu rights europe lcs life mailing peace april cs contrib 02 held hours saw study government american game rule studies medicine shall israel statement published pain united states risk tar killed conference science league century percent tiff 03 country pub new york york evidence men military marriage health spirit food medical population parents msg water wife born drug army treatment countries printf lived war culture police son political disease door mother women jpeg belief sex players season baseball hospital god patient mary bible church azerbaijani society apartment russian religious town cancer blood religion genocide holy clinical diet catholic jewish palestinian professor woman father faith doctor heaven scripture jews lord armenia soldiers israeli patients muslims christians troops azerbaijan christianity vitamin arab arabs palestinians armenian homosexual christ jesus villages nazi infection greece turkey muslim armenians turkish village aids soviet serdar argic homosexuality argic serdar ottoman hiv turks adl kuwait istanbul\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.7/dist-packages/sklearn/utils/deprecation.py:87: FutureWarning: Function get_feature_names is deprecated; get_feature_names is deprecated in 1.0 and will be removed in 1.2. Please use get_feature_names_out instead.\n","  warnings.warn(msg, category=FutureWarning)\n"]}]},{"cell_type":"markdown","source":["## 8-7 문서 군집화 소개와 실습(Opinion Review 데이터 세트)"],"metadata":{"id":"AxGS6PugGpUW"}},{"cell_type":"markdown","source":["### 문서 군집화 개념"],"metadata":{"id":"wACbyEfuGvvq"}},{"cell_type":"markdown","source":["### Opinion Review 데이터 세트를 이용한 문서 군집화 수행하기"],"metadata":{"id":"Uafe_3qvG6J3"}},{"cell_type":"code","source":["import pandas as pd\n","import glob, os\n","\n","path = r'/content/drive/MyDrive/AI/파이썬 머신러닝 완벽가이드/data_sets/OpinosisDataset1.0/topics'\n","# path로 지정한 디렉터리 밑에 있는 모든 .data 파일의 파일명을 리스트로 취합.\n","all_files = glob.glob(os.path.join(path, \"*.data\"))\n","filename_list = []\n","opinion_text = []\n","\n","# 개별 파일의 파일명은 filename_list로 취합,\n","# 개별 파일의 파일 내용은 DataFrame 로딩 후 다시 string으로 변환해 opinion_text list로 취합\n","for file_ in all_files:\n","    # 개별 파일을 읽어서 DataFrame으로 생성\n","    df = pd.read_table(file_ , index_col=None , header = 0 , encoding='latin1')\n","\n","    # 절대 경로롤 주어진 파일명을 가공. \n","    # 맨 마지막 .data 확장자도 제거\n","    filename_ = file_.split('/')[-1]\n","    filename = filename_.split('.')[0]\n","\n","    # 파일명 list와 파일 내용 list에 파일명과 파일 내용을 추가.\n","    filename_list.append(filename)\n","    opinion_text.append(df.to_string())\n","\n","# 파일명 list와 파일 내용 list 객체를 Dataframe으로 생성\n","document_df = pd.DataFrame({'filename':filename_list , 'opinion_text':opinion_text})\n","document_df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"qX6E7LQ9GgHE","executionInfo":{"status":"ok","timestamp":1643465449151,"user_tz":-540,"elapsed":1239,"user":{"displayName":"김진우","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Ggb7NCfP7aAu0Hj8nNhErTzUou1vuaWKzjtXq6Auw=s64","userId":"12971138652345879224"}},"outputId":"729a36f3-c825-47fd-b6da-64bc0eab7f83"},"execution_count":55,"outputs":[{"output_type":"execute_result","data":{"text/html":["\n","  <div id=\"df-fb5a44f0-f1ed-4c7c-b8df-fdfe37ad4f54\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>filename</th>\n","      <th>opinion_text</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>voice_garmin_nuvi_255W_gps</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>video_ipod_nano_8gb</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>sound_ipod_nano_8gb</td>\n","      <td>headphone jack i got a clear case for it a...</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>transmission_toyota_camry_2007</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>service_holiday_inn_london</td>\n","      <td>...</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-fb5a44f0-f1ed-4c7c-b8df-fdfe37ad4f54')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-fb5a44f0-f1ed-4c7c-b8df-fdfe37ad4f54 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-fb5a44f0-f1ed-4c7c-b8df-fdfe37ad4f54');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "],"text/plain":["                         filename                                       opinion_text\n","0      voice_garmin_nuvi_255W_gps                                                ...\n","1             video_ipod_nano_8gb                                                ...\n","2             sound_ipod_nano_8gb      headphone jack i got a clear case for it a...\n","3  transmission_toyota_camry_2007                                                ...\n","4      service_holiday_inn_london                                                ..."]},"metadata":{},"execution_count":55}]},{"cell_type":"code","source":["from nltk.stem import WordNetLemmatizer\n","import nltk\n","import string\n","\n","remove_punct_dict = dict((ord(punct), None) for punct in string.punctuation)\n","lemmar = WordNetLemmatizer()\n","\n","def LemTokens(tokens):\n","    return [lemmar.lemmatize(token) for token in tokens]\n","\n","def LemNormalize(text):\n","    return LemTokens(nltk.word_tokenize(text.lower().translate(remove_punct_dict)))"],"metadata":{"id":"qm2O8lZiJa12","executionInfo":{"status":"ok","timestamp":1643465505353,"user_tz":-540,"elapsed":339,"user":{"displayName":"김진우","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Ggb7NCfP7aAu0Hj8nNhErTzUou1vuaWKzjtXq6Auw=s64","userId":"12971138652345879224"}}},"execution_count":56,"outputs":[]},{"cell_type":"code","source":["from sklearn.feature_extraction.text import TfidfVectorizer\n","\n","tfidf_vect = TfidfVectorizer(tokenizer=LemNormalize , stop_words='english' , ngram_range=(1,2) , min_df=0.05 , max_df = 0.85)\n","#opinion_text 칼럼 값으로 피처 벡터화 수행\n","feature_vect = tfidf_vect.fit_transform(document_df['opinion_text'])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"mRp4Leh8LXcS","executionInfo":{"status":"ok","timestamp":1643465653808,"user_tz":-540,"elapsed":4539,"user":{"displayName":"김진우","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Ggb7NCfP7aAu0Hj8nNhErTzUou1vuaWKzjtXq6Auw=s64","userId":"12971138652345879224"}},"outputId":"45aee471-6d54-4b35-aa84-769856535591"},"execution_count":59,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.7/dist-packages/sklearn/feature_extraction/text.py:401: UserWarning: Your stop_words may be inconsistent with your preprocessing. Tokenizing the stop words generated tokens ['ha', 'le', 'u', 'wa'] not in stop_words.\n","  % sorted(inconsistent)\n"]}]},{"cell_type":"code","source":["from sklearn.cluster import KMeans\n","\n","# 5개 집합으로 군집화 수행.\n","km_cluster = KMeans(n_clusters = 5 , max_iter = 10000 , random_state = 0)\n","km_cluster.fit(feature_vect)\n","cluster_label = km_cluster.labels_\n","cluster_centers = km_cluster.cluster_centers_"],"metadata":{"id":"2wG1tpJzL1mG","executionInfo":{"status":"ok","timestamp":1643465887103,"user_tz":-540,"elapsed":992,"user":{"displayName":"김진우","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Ggb7NCfP7aAu0Hj8nNhErTzUou1vuaWKzjtXq6Auw=s64","userId":"12971138652345879224"}}},"execution_count":61,"outputs":[]},{"cell_type":"code","source":["document_df['cluster_label'] = cluster_label\n","document_df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"LiTAFVI-MwCA","executionInfo":{"status":"ok","timestamp":1643465923582,"user_tz":-540,"elapsed":647,"user":{"displayName":"김진우","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Ggb7NCfP7aAu0Hj8nNhErTzUou1vuaWKzjtXq6Auw=s64","userId":"12971138652345879224"}},"outputId":"df27cc8f-138c-4a20-a198-0ce6902cd002"},"execution_count":62,"outputs":[{"output_type":"execute_result","data":{"text/html":["\n","  <div id=\"df-42b19e4f-85a7-4c42-8088-abbf248fb44a\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>filename</th>\n","      <th>opinion_text</th>\n","      <th>cluster_label</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>voice_garmin_nuvi_255W_gps</td>\n","      <td>...</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>video_ipod_nano_8gb</td>\n","      <td>...</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>sound_ipod_nano_8gb</td>\n","      <td>headphone jack i got a clear case for it a...</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>transmission_toyota_camry_2007</td>\n","      <td>...</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>service_holiday_inn_london</td>\n","      <td>...</td>\n","      <td>3</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-42b19e4f-85a7-4c42-8088-abbf248fb44a')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-42b19e4f-85a7-4c42-8088-abbf248fb44a button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-42b19e4f-85a7-4c42-8088-abbf248fb44a');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "],"text/plain":["                         filename  ... cluster_label\n","0      voice_garmin_nuvi_255W_gps  ...             2\n","1             video_ipod_nano_8gb  ...             1\n","2             sound_ipod_nano_8gb  ...             1\n","3  transmission_toyota_camry_2007  ...             0\n","4      service_holiday_inn_london  ...             3\n","\n","[5 rows x 3 columns]"]},"metadata":{},"execution_count":62}]},{"cell_type":"code","source":["document_df[document_df['cluster_label'] ==0].sort_values(by='filename')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":269},"id":"96M_iFl0M9XO","executionInfo":{"status":"ok","timestamp":1643465956940,"user_tz":-540,"elapsed":386,"user":{"displayName":"김진우","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Ggb7NCfP7aAu0Hj8nNhErTzUou1vuaWKzjtXq6Auw=s64","userId":"12971138652345879224"}},"outputId":"257d0dda-e84c-41b7-fbcc-0ec8eb7d0e14"},"execution_count":63,"outputs":[{"output_type":"execute_result","data":{"text/html":["\n","  <div id=\"df-e411ccd6-9b45-471a-86de-075c153229ab\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>filename</th>\n","      <th>opinion_text</th>\n","      <th>cluster_label</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>34</th>\n","      <td>gas_mileage_toyota_camry_2007</td>\n","      <td>...</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>29</th>\n","      <td>mileage_honda_accord_2008</td>\n","      <td>...</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>22</th>\n","      <td>performance_honda_accord_2008</td>\n","      <td>...</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>21</th>\n","      <td>performance_netbook_1005ha</td>\n","      <td>...</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>18</th>\n","      <td>quality_toyota_camry_2007</td>\n","      <td>...</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>speed_windows7</td>\n","      <td>...</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>transmission_toyota_camry_2007</td>\n","      <td>...</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e411ccd6-9b45-471a-86de-075c153229ab')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-e411ccd6-9b45-471a-86de-075c153229ab button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-e411ccd6-9b45-471a-86de-075c153229ab');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "],"text/plain":["                          filename  ... cluster_label\n","34   gas_mileage_toyota_camry_2007  ...             0\n","29       mileage_honda_accord_2008  ...             0\n","22   performance_honda_accord_2008  ...             0\n","21      performance_netbook_1005ha  ...             0\n","18       quality_toyota_camry_2007  ...             0\n","9                   speed_windows7  ...             0\n","3   transmission_toyota_camry_2007  ...             0\n","\n","[7 rows x 3 columns]"]},"metadata":{},"execution_count":63}]},{"cell_type":"code","source":["document_df[document_df['cluster_label'] ==1].sort_values(by='filename')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":363},"id":"MMw2a5ODNFry","executionInfo":{"status":"ok","timestamp":1643465992243,"user_tz":-540,"elapsed":386,"user":{"displayName":"김진우","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Ggb7NCfP7aAu0Hj8nNhErTzUou1vuaWKzjtXq6Auw=s64","userId":"12971138652345879224"}},"outputId":"b2f621af-5cb1-49f1-c23a-72c4e57e6418"},"execution_count":64,"outputs":[{"output_type":"execute_result","data":{"text/html":["\n","  <div id=\"df-3ccea275-7bb3-43e8-8c58-6e1974c5b5ab\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>filename</th>\n","      <th>opinion_text</th>\n","      <th>cluster_label</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>46</th>\n","      <td>battery-life_amazon_kindle</td>\n","      <td>...</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>44</th>\n","      <td>battery-life_ipod_nano_8gb</td>\n","      <td>...</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>45</th>\n","      <td>battery-life_netbook_1005ha</td>\n","      <td>...</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>36</th>\n","      <td>keyboard_netbook_1005ha</td>\n","      <td>...</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>19</th>\n","      <td>price_amazon_kindle</td>\n","      <td>...</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>16</th>\n","      <td>screen_ipod_nano_8gb</td>\n","      <td>...</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>14</th>\n","      <td>screen_netbook_1005ha</td>\n","      <td>...</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>size_asus_netbook_1005ha</td>\n","      <td>...</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>sound_ipod_nano_8gb</td>\n","      <td>headphone jack i got a clear case for it a...</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>video_ipod_nano_8gb</td>\n","      <td>...</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-3ccea275-7bb3-43e8-8c58-6e1974c5b5ab')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-3ccea275-7bb3-43e8-8c58-6e1974c5b5ab button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-3ccea275-7bb3-43e8-8c58-6e1974c5b5ab');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "],"text/plain":["                       filename  ... cluster_label\n","46   battery-life_amazon_kindle  ...             1\n","44   battery-life_ipod_nano_8gb  ...             1\n","45  battery-life_netbook_1005ha  ...             1\n","36      keyboard_netbook_1005ha  ...             1\n","19          price_amazon_kindle  ...             1\n","16         screen_ipod_nano_8gb  ...             1\n","14        screen_netbook_1005ha  ...             1\n","7      size_asus_netbook_1005ha  ...             1\n","2           sound_ipod_nano_8gb  ...             1\n","1           video_ipod_nano_8gb  ...             1\n","\n","[10 rows x 3 columns]"]},"metadata":{},"execution_count":64}]},{"cell_type":"code","source":["document_df[document_df['cluster_label'] ==2].sort_values(by='filename')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":457},"id":"Mrn-hPayNOTW","executionInfo":{"status":"ok","timestamp":1643465999451,"user_tz":-540,"elapsed":5,"user":{"displayName":"김진우","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Ggb7NCfP7aAu0Hj8nNhErTzUou1vuaWKzjtXq6Auw=s64","userId":"12971138652345879224"}},"outputId":"5373a667-5e37-4815-a96f-ea76aa29b8f7"},"execution_count":65,"outputs":[{"output_type":"execute_result","data":{"text/html":["\n","  <div id=\"df-66fdbfbb-8baa-4809-bb6d-784e76ab6332\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>filename</th>\n","      <th>opinion_text</th>\n","      <th>cluster_label</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>50</th>\n","      <td>accuracy_garmin_nuvi_255W_gps</td>\n","      <td>...</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>43</th>\n","      <td>buttons_amazon_kindle</td>\n","      <td>...</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>41</th>\n","      <td>directions_garmin_nuvi_255W_gps</td>\n","      <td>...</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>42</th>\n","      <td>display_garmin_nuvi_255W_gps</td>\n","      <td>...</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>38</th>\n","      <td>eyesight-issues_amazon_kindle</td>\n","      <td>...</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>40</th>\n","      <td>features_windows7</td>\n","      <td>...</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>39</th>\n","      <td>fonts_amazon_kindle</td>\n","      <td>...</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>28</th>\n","      <td>navigation_amazon_kindle</td>\n","      <td>...</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>17</th>\n","      <td>satellite_garmin_nuvi_255W_gps</td>\n","      <td>...</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>15</th>\n","      <td>screen_garmin_nuvi_255W_gps</td>\n","      <td>...</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>12</th>\n","      <td>speed_garmin_nuvi_255W_gps</td>\n","      <td>...</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>updates_garmin_nuvi_255W_gps</td>\n","      <td>...</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>0</th>\n","      <td>voice_garmin_nuvi_255W_gps</td>\n","      <td>...</td>\n","      <td>2</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-66fdbfbb-8baa-4809-bb6d-784e76ab6332')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-66fdbfbb-8baa-4809-bb6d-784e76ab6332 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-66fdbfbb-8baa-4809-bb6d-784e76ab6332');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "],"text/plain":["                           filename  ... cluster_label\n","50    accuracy_garmin_nuvi_255W_gps  ...             2\n","43            buttons_amazon_kindle  ...             2\n","41  directions_garmin_nuvi_255W_gps  ...             2\n","42     display_garmin_nuvi_255W_gps  ...             2\n","38    eyesight-issues_amazon_kindle  ...             2\n","40                features_windows7  ...             2\n","39              fonts_amazon_kindle  ...             2\n","28         navigation_amazon_kindle  ...             2\n","17   satellite_garmin_nuvi_255W_gps  ...             2\n","15      screen_garmin_nuvi_255W_gps  ...             2\n","12       speed_garmin_nuvi_255W_gps  ...             2\n","8      updates_garmin_nuvi_255W_gps  ...             2\n","0        voice_garmin_nuvi_255W_gps  ...             2\n","\n","[13 rows x 3 columns]"]},"metadata":{},"execution_count":65}]},{"cell_type":"code","source":["document_df[document_df['cluster_label'] ==3].sort_values(by='filename')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":551},"id":"cncfuWQ2NQHF","executionInfo":{"status":"ok","timestamp":1643466011596,"user_tz":-540,"elapsed":422,"user":{"displayName":"김진우","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Ggb7NCfP7aAu0Hj8nNhErTzUou1vuaWKzjtXq6Auw=s64","userId":"12971138652345879224"}},"outputId":"e6ec747e-1a59-431d-8aec-3e837be32529"},"execution_count":66,"outputs":[{"output_type":"execute_result","data":{"text/html":["\n","  <div id=\"df-8357bc5c-abe6-4b8d-9ba3-0660bef73ea0\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>filename</th>\n","      <th>opinion_text</th>\n","      <th>cluster_label</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>47</th>\n","      <td>bathroom_bestwestern_hotel_sfo</td>\n","      <td>...</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>32</th>\n","      <td>food_holiday_inn_london</td>\n","      <td>...</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>35</th>\n","      <td>food_swissotel_chicago</td>\n","      <td>...</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>33</th>\n","      <td>free_bestwestern_hotel_sfo</td>\n","      <td>...</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>30</th>\n","      <td>location_bestwestern_hotel_sfo</td>\n","      <td>...</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>27</th>\n","      <td>location_holiday_inn_london</td>\n","      <td>...</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>26</th>\n","      <td>parking_bestwestern_hotel_sfo</td>\n","      <td>...</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>20</th>\n","      <td>price_holiday_inn_london</td>\n","      <td>...</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>23</th>\n","      <td>room_holiday_inn_london</td>\n","      <td>...</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>25</th>\n","      <td>rooms_bestwestern_hotel_sfo</td>\n","      <td>...</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>24</th>\n","      <td>rooms_swissotel_chicago</td>\n","      <td>...</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>service_bestwestern_hotel_sfo</td>\n","      <td>...</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>service_holiday_inn_london</td>\n","      <td>...</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>service_swissotel_hotel_chicago</td>\n","      <td>...</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>11</th>\n","      <td>staff_bestwestern_hotel_sfo</td>\n","      <td>...</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>staff_swissotel_chicago</td>\n","      <td>...</td>\n","      <td>3</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-8357bc5c-abe6-4b8d-9ba3-0660bef73ea0')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-8357bc5c-abe6-4b8d-9ba3-0660bef73ea0 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-8357bc5c-abe6-4b8d-9ba3-0660bef73ea0');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "],"text/plain":["                           filename  ... cluster_label\n","47   bathroom_bestwestern_hotel_sfo  ...             3\n","32          food_holiday_inn_london  ...             3\n","35           food_swissotel_chicago  ...             3\n","33       free_bestwestern_hotel_sfo  ...             3\n","30   location_bestwestern_hotel_sfo  ...             3\n","27      location_holiday_inn_london  ...             3\n","26    parking_bestwestern_hotel_sfo  ...             3\n","20         price_holiday_inn_london  ...             3\n","23          room_holiday_inn_london  ...             3\n","25      rooms_bestwestern_hotel_sfo  ...             3\n","24          rooms_swissotel_chicago  ...             3\n","5     service_bestwestern_hotel_sfo  ...             3\n","4        service_holiday_inn_london  ...             3\n","6   service_swissotel_hotel_chicago  ...             3\n","11      staff_bestwestern_hotel_sfo  ...             3\n","10          staff_swissotel_chicago  ...             3\n","\n","[16 rows x 3 columns]"]},"metadata":{},"execution_count":66}]},{"cell_type":"code","source":["document_df[document_df['cluster_label'] ==4].sort_values(by='filename')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"i1YbH8clNTBE","executionInfo":{"status":"ok","timestamp":1643466027540,"user_tz":-540,"elapsed":352,"user":{"displayName":"김진우","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Ggb7NCfP7aAu0Hj8nNhErTzUou1vuaWKzjtXq6Auw=s64","userId":"12971138652345879224"}},"outputId":"f6a5645b-3f96-4047-cac3-7bcbe2c5d9c8"},"execution_count":67,"outputs":[{"output_type":"execute_result","data":{"text/html":["\n","  <div id=\"df-38afb3e3-63c3-4e6c-8519-c9239eb3ede9\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>filename</th>\n","      <th>opinion_text</th>\n","      <th>cluster_label</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>49</th>\n","      <td>comfort_honda_accord_2008</td>\n","      <td>...</td>\n","      <td>4</td>\n","    </tr>\n","    <tr>\n","      <th>48</th>\n","      <td>comfort_toyota_camry_2007</td>\n","      <td>...</td>\n","      <td>4</td>\n","    </tr>\n","    <tr>\n","      <th>31</th>\n","      <td>interior_honda_accord_2008</td>\n","      <td>...</td>\n","      <td>4</td>\n","    </tr>\n","    <tr>\n","      <th>37</th>\n","      <td>interior_toyota_camry_2007</td>\n","      <td>...</td>\n","      <td>4</td>\n","    </tr>\n","    <tr>\n","      <th>13</th>\n","      <td>seats_honda_accord_2008</td>\n","      <td>...</td>\n","      <td>4</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-38afb3e3-63c3-4e6c-8519-c9239eb3ede9')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-38afb3e3-63c3-4e6c-8519-c9239eb3ede9 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-38afb3e3-63c3-4e6c-8519-c9239eb3ede9');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "],"text/plain":["                      filename  ... cluster_label\n","49   comfort_honda_accord_2008  ...             4\n","48   comfort_toyota_camry_2007  ...             4\n","31  interior_honda_accord_2008  ...             4\n","37  interior_toyota_camry_2007  ...             4\n","13     seats_honda_accord_2008  ...             4\n","\n","[5 rows x 3 columns]"]},"metadata":{},"execution_count":67}]},{"cell_type":"code","source":["from sklearn.cluster import KMeans\n","\n","# 3개의 집합으로 군집화\n","km_cluster = KMeans(n_clusters = 3 , max_iter = 10000 , random_state=0)\n","km_cluster.fit(feature_vect)\n","cluster_label = km_cluster.labels_\n","cluster_centers = km_cluster.cluster_centers_\n","\n","# 소속 군집을 cluster_label 칼럼으로 할당하고 cluster_label 값으로 정렬\n","document_df['cluster_label'] = cluster_label\n","document_df.sort_values(by='cluster_label')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"8OD-wvESNW7D","executionInfo":{"status":"ok","timestamp":1643466202329,"user_tz":-540,"elapsed":463,"user":{"displayName":"김진우","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Ggb7NCfP7aAu0Hj8nNhErTzUou1vuaWKzjtXq6Auw=s64","userId":"12971138652345879224"}},"outputId":"28c4bb41-bd61-4314-994d-81ae3aa8067b"},"execution_count":68,"outputs":[{"output_type":"execute_result","data":{"text/html":["\n","  <div id=\"df-faf84e67-af5d-4f98-812f-4a326bca49d4\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>filename</th>\n","      <th>opinion_text</th>\n","      <th>cluster_label</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>voice_garmin_nuvi_255W_gps</td>\n","      <td>...</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>46</th>\n","      <td>battery-life_amazon_kindle</td>\n","      <td>...</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>45</th>\n","      <td>battery-life_netbook_1005ha</td>\n","      <td>...</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>44</th>\n","      <td>battery-life_ipod_nano_8gb</td>\n","      <td>...</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>43</th>\n","      <td>buttons_amazon_kindle</td>\n","      <td>...</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>42</th>\n","      <td>display_garmin_nuvi_255W_gps</td>\n","      <td>...</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>41</th>\n","      <td>directions_garmin_nuvi_255W_gps</td>\n","      <td>...</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>40</th>\n","      <td>features_windows7</td>\n","      <td>...</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>39</th>\n","      <td>fonts_amazon_kindle</td>\n","      <td>...</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>38</th>\n","      <td>eyesight-issues_amazon_kindle</td>\n","      <td>...</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>36</th>\n","      <td>keyboard_netbook_1005ha</td>\n","      <td>...</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>28</th>\n","      <td>navigation_amazon_kindle</td>\n","      <td>...</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>21</th>\n","      <td>performance_netbook_1005ha</td>\n","      <td>...</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>19</th>\n","      <td>price_amazon_kindle</td>\n","      <td>...</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>17</th>\n","      <td>satellite_garmin_nuvi_255W_gps</td>\n","      <td>...</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>16</th>\n","      <td>screen_ipod_nano_8gb</td>\n","      <td>...</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>50</th>\n","      <td>accuracy_garmin_nuvi_255W_gps</td>\n","      <td>...</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>14</th>\n","      <td>screen_netbook_1005ha</td>\n","      <td>...</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>updates_garmin_nuvi_255W_gps</td>\n","      <td>...</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>size_asus_netbook_1005ha</td>\n","      <td>...</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>15</th>\n","      <td>screen_garmin_nuvi_255W_gps</td>\n","      <td>...</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>sound_ipod_nano_8gb</td>\n","      <td>headphone jack i got a clear case for it a...</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>video_ipod_nano_8gb</td>\n","      <td>...</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>speed_windows7</td>\n","      <td>...</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>12</th>\n","      <td>speed_garmin_nuvi_255W_gps</td>\n","      <td>...</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>22</th>\n","      <td>performance_honda_accord_2008</td>\n","      <td>...</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>49</th>\n","      <td>comfort_honda_accord_2008</td>\n","      <td>...</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>37</th>\n","      <td>interior_toyota_camry_2007</td>\n","      <td>...</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>29</th>\n","      <td>mileage_honda_accord_2008</td>\n","      <td>...</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>31</th>\n","      <td>interior_honda_accord_2008</td>\n","      <td>...</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>48</th>\n","      <td>comfort_toyota_camry_2007</td>\n","      <td>...</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>34</th>\n","      <td>gas_mileage_toyota_camry_2007</td>\n","      <td>...</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>13</th>\n","      <td>seats_honda_accord_2008</td>\n","      <td>...</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>18</th>\n","      <td>quality_toyota_camry_2007</td>\n","      <td>...</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>transmission_toyota_camry_2007</td>\n","      <td>...</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>service_holiday_inn_london</td>\n","      <td>...</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>service_bestwestern_hotel_sfo</td>\n","      <td>...</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>service_swissotel_hotel_chicago</td>\n","      <td>...</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>47</th>\n","      <td>bathroom_bestwestern_hotel_sfo</td>\n","      <td>...</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>33</th>\n","      <td>free_bestwestern_hotel_sfo</td>\n","      <td>...</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>35</th>\n","      <td>food_swissotel_chicago</td>\n","      <td>...</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>32</th>\n","      <td>food_holiday_inn_london</td>\n","      <td>...</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>30</th>\n","      <td>location_bestwestern_hotel_sfo</td>\n","      <td>...</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>11</th>\n","      <td>staff_bestwestern_hotel_sfo</td>\n","      <td>...</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>27</th>\n","      <td>location_holiday_inn_london</td>\n","      <td>...</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>26</th>\n","      <td>parking_bestwestern_hotel_sfo</td>\n","      <td>...</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>24</th>\n","      <td>rooms_swissotel_chicago</td>\n","      <td>...</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>23</th>\n","      <td>room_holiday_inn_london</td>\n","      <td>...</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>20</th>\n","      <td>price_holiday_inn_london</td>\n","      <td>...</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>staff_swissotel_chicago</td>\n","      <td>...</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>25</th>\n","      <td>rooms_bestwestern_hotel_sfo</td>\n","      <td>...</td>\n","      <td>2</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-faf84e67-af5d-4f98-812f-4a326bca49d4')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-faf84e67-af5d-4f98-812f-4a326bca49d4 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-faf84e67-af5d-4f98-812f-4a326bca49d4');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "],"text/plain":["                           filename  ... cluster_label\n","0        voice_garmin_nuvi_255W_gps  ...             0\n","46       battery-life_amazon_kindle  ...             0\n","45      battery-life_netbook_1005ha  ...             0\n","44       battery-life_ipod_nano_8gb  ...             0\n","43            buttons_amazon_kindle  ...             0\n","42     display_garmin_nuvi_255W_gps  ...             0\n","41  directions_garmin_nuvi_255W_gps  ...             0\n","40                features_windows7  ...             0\n","39              fonts_amazon_kindle  ...             0\n","38    eyesight-issues_amazon_kindle  ...             0\n","36          keyboard_netbook_1005ha  ...             0\n","28         navigation_amazon_kindle  ...             0\n","21       performance_netbook_1005ha  ...             0\n","19              price_amazon_kindle  ...             0\n","17   satellite_garmin_nuvi_255W_gps  ...             0\n","16             screen_ipod_nano_8gb  ...             0\n","50    accuracy_garmin_nuvi_255W_gps  ...             0\n","14            screen_netbook_1005ha  ...             0\n","8      updates_garmin_nuvi_255W_gps  ...             0\n","7          size_asus_netbook_1005ha  ...             0\n","15      screen_garmin_nuvi_255W_gps  ...             0\n","2               sound_ipod_nano_8gb  ...             0\n","1               video_ipod_nano_8gb  ...             0\n","9                    speed_windows7  ...             0\n","12       speed_garmin_nuvi_255W_gps  ...             0\n","22    performance_honda_accord_2008  ...             1\n","49        comfort_honda_accord_2008  ...             1\n","37       interior_toyota_camry_2007  ...             1\n","29        mileage_honda_accord_2008  ...             1\n","31       interior_honda_accord_2008  ...             1\n","48        comfort_toyota_camry_2007  ...             1\n","34    gas_mileage_toyota_camry_2007  ...             1\n","13          seats_honda_accord_2008  ...             1\n","18        quality_toyota_camry_2007  ...             1\n","3    transmission_toyota_camry_2007  ...             1\n","4        service_holiday_inn_london  ...             2\n","5     service_bestwestern_hotel_sfo  ...             2\n","6   service_swissotel_hotel_chicago  ...             2\n","47   bathroom_bestwestern_hotel_sfo  ...             2\n","33       free_bestwestern_hotel_sfo  ...             2\n","35           food_swissotel_chicago  ...             2\n","32          food_holiday_inn_london  ...             2\n","30   location_bestwestern_hotel_sfo  ...             2\n","11      staff_bestwestern_hotel_sfo  ...             2\n","27      location_holiday_inn_london  ...             2\n","26    parking_bestwestern_hotel_sfo  ...             2\n","24          rooms_swissotel_chicago  ...             2\n","23          room_holiday_inn_london  ...             2\n","20         price_holiday_inn_london  ...             2\n","10          staff_swissotel_chicago  ...             2\n","25      rooms_bestwestern_hotel_sfo  ...             2\n","\n","[51 rows x 3 columns]"]},"metadata":{},"execution_count":68}]},{"cell_type":"markdown","source":["### 군집별 핵심 단어 추출하기"],"metadata":{"id":"Sw7GntLzOLwU"}},{"cell_type":"code","source":["cluster_centers = km_cluster.cluster_centers_\n","print('cluster_centers shape :' , cluster_centers.shape)\n","print(cluster_centers)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"yfHabRH5OBkc","executionInfo":{"status":"ok","timestamp":1643466308686,"user_tz":-540,"elapsed":537,"user":{"displayName":"김진우","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Ggb7NCfP7aAu0Hj8nNhErTzUou1vuaWKzjtXq6Auw=s64","userId":"12971138652345879224"}},"outputId":"50367f98-99d8-4e20-bcdb-abe32dda255d"},"execution_count":69,"outputs":[{"output_type":"stream","name":"stdout","text":["cluster_centers shape : (3, 4611)\n","[[0.01005322 0.         0.         ... 0.00706287 0.         0.        ]\n"," [0.         0.00092551 0.         ... 0.         0.         0.        ]\n"," [0.         0.00099499 0.00174637 ... 0.         0.00183397 0.00144581]]\n"]}]},{"cell_type":"code","source":["# 군집별 top n 핵심 단어, 그 단어의 중심 위치 상댓값, 대상 파일명을 반환함.\n","def get_cluster_details(cluster_model , cluster_data , feature_names, clusters_num , top_n_features = 10):\n","    cluster_details = {}\n","\n","    # cluster_centers array의 값이 큰 순으로 정렬된 인덱스 값을 반환\n","    # 군집 중심점(centroid)별 할당된 word 피처들의 거리값이 큰 순으로 값을 구하기 위함.\n","    centroid_feature_ordered_ind = cluster_model.cluster_centers_.argsort()[:, ::-1]\n","\n","    # 개별 중심점(centroid)별로 반복하면서 핵심단어, 그단어의 중심위치 상댓값 , 대상 파일명 입력\n","    for cluster_num in range(clusters_num):\n","        # 개별 군집별 정보를 담을 데이터 초기화.\n","        cluster_details[cluster_num] = {}\n","        cluster_details[cluster_num]['cluster'] = cluster_num\n","\n","        # cluster_centers_.argsort()[:,:;-1]로 구한 인덱스를 이용해 top n 피처 단어를 구함.\n","        top_feature_indexes = centroid_feature_ordered_ind[cluster_num , :top_n_features]\n","        top_features = [ feature_names[ind] for ind in top_feature_indexes ]\n","\n","        # top_feature_indexes를 이용해 해당 피처 단어의 중심 위치 상댓값 구함.\n","        top_feature_values = cluster_model.cluster_centers_[cluster_num , top_feature_indexes].tolist()\n","\n","        # cluster_details 딕셔너리 객체에 개별 군집별 핵심단어와 중심위치 상댓값 , 해당 파일명 입력\n","        cluster_details[cluster_num]['top_features'] = top_features\n","        cluster_details[cluster_num]['top_feature_value'] = top_feature_values\n","        filenames = cluster_data[cluster_data['cluster_label'] == cluster_num]['filename']\n","        filenames = filenames.values.tolist()\n","\n","        cluster_details[cluster_num]['filenames'] = filenames\n","\n","    return cluster_details"],"metadata":{"id":"FJ_LXHcJObhS","executionInfo":{"status":"ok","timestamp":1643467760947,"user_tz":-540,"elapsed":403,"user":{"displayName":"김진우","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Ggb7NCfP7aAu0Hj8nNhErTzUou1vuaWKzjtXq6Auw=s64","userId":"12971138652345879224"}}},"execution_count":74,"outputs":[]},{"cell_type":"code","source":["def print_cluster_details(cluster_details):\n","    for cluster_num , cluster_detail in cluster_details.items():\n","        print('###### Cluster {0}'.format(cluster_num))\n","        print('Top features:' , cluster_detail['top_features'])\n","        print('Reviews 파일명:', cluster_detail['filenames'][:7] )\n","        print('======================================')"],"metadata":{"id":"kmcjp4ucSgha","executionInfo":{"status":"ok","timestamp":1643467616910,"user_tz":-540,"elapsed":428,"user":{"displayName":"김진우","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Ggb7NCfP7aAu0Hj8nNhErTzUou1vuaWKzjtXq6Auw=s64","userId":"12971138652345879224"}}},"execution_count":72,"outputs":[]},{"cell_type":"code","source":["feature_names = tfidf_vect.get_feature_names()\n","\n","cluster_details = get_cluster_details(cluster_model = km_cluster , cluster_data = document_df , feature_names = feature_names , clusters_num=3 , top_n_features=10)\n","print_cluster_details(cluster_details)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"NTomRoMZTa77","executionInfo":{"status":"ok","timestamp":1643467774860,"user_tz":-540,"elapsed":355,"user":{"displayName":"김진우","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Ggb7NCfP7aAu0Hj8nNhErTzUou1vuaWKzjtXq6Auw=s64","userId":"12971138652345879224"}},"outputId":"c42d4df7-6ea4-42a6-d89c-f610e1aa9e4f"},"execution_count":75,"outputs":[{"output_type":"stream","name":"stdout","text":["###### Cluster 0\n","Top features: ['screen', 'battery', 'keyboard', 'battery life', 'life', 'kindle', 'direction', 'video', 'size', 'voice']\n","Reviews 파일명: ['voice_garmin_nuvi_255W_gps', 'video_ipod_nano_8gb', 'sound_ipod_nano_8gb', 'size_asus_netbook_1005ha', 'updates_garmin_nuvi_255W_gps', 'speed_windows7', 'speed_garmin_nuvi_255W_gps']\n","======================================\n","###### Cluster 1\n","Top features: ['interior', 'seat', 'mileage', 'comfortable', 'gas', 'gas mileage', 'transmission', 'car', 'performance', 'quality']\n","Reviews 파일명: ['transmission_toyota_camry_2007', 'seats_honda_accord_2008', 'quality_toyota_camry_2007', 'performance_honda_accord_2008', 'mileage_honda_accord_2008', 'interior_honda_accord_2008', 'gas_mileage_toyota_camry_2007']\n","======================================\n","###### Cluster 2\n","Top features: ['room', 'hotel', 'service', 'staff', 'food', 'location', 'bathroom', 'clean', 'price', 'parking']\n","Reviews 파일명: ['service_holiday_inn_london', 'service_bestwestern_hotel_sfo', 'service_swissotel_hotel_chicago', 'staff_swissotel_chicago', 'staff_bestwestern_hotel_sfo', 'price_holiday_inn_london', 'room_holiday_inn_london']\n","======================================\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.7/dist-packages/sklearn/utils/deprecation.py:87: FutureWarning: Function get_feature_names is deprecated; get_feature_names is deprecated in 1.0 and will be removed in 1.2. Please use get_feature_names_out instead.\n","  warnings.warn(msg, category=FutureWarning)\n"]}]},{"cell_type":"markdown","source":["## 8-8 문서 유사도"],"metadata":{"id":"iv1SBocIUHGB"}},{"cell_type":"code","source":["import numpy as np\n","\n","def cos_similarity(v1 , v2):\n","    dot_product = np.dot(v1 , v2)\n","    l2_norm = (np.sqrt(sum(np.square(v1))) * np.sqrt(sum(np.square(v2))))\n","    similarity = dot_product / l2_norm\n","\n","    return similarity"],"metadata":{"id":"aO_daV_yTymP","executionInfo":{"status":"ok","timestamp":1643471322226,"user_tz":-540,"elapsed":915,"user":{"displayName":"김진우","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Ggb7NCfP7aAu0Hj8nNhErTzUou1vuaWKzjtXq6Auw=s64","userId":"12971138652345879224"}}},"execution_count":76,"outputs":[]},{"cell_type":"code","source":["from sklearn.feature_extraction.text import TfidfVectorizer\n","\n","doc_list = ['if you take the blue pill, the story ends' ,\n","            'if you take the red pill, you stay in Wonderland',\n","            'if you take the red pill, I show you how deep the rabbit hole goes']\n","\n","tfidf_vect_simple = TfidfVectorizer()\n","feature_vect_simple = tfidf_vect_simple.fit_transform(doc_list)\n","print(feature_vect_simple.shape)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"7uQAierdhjXP","executionInfo":{"status":"ok","timestamp":1643471391061,"user_tz":-540,"elapsed":494,"user":{"displayName":"김진우","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Ggb7NCfP7aAu0Hj8nNhErTzUou1vuaWKzjtXq6Auw=s64","userId":"12971138652345879224"}},"outputId":"31716db9-bed6-4b25-cdeb-6c241a9a5ec2"},"execution_count":77,"outputs":[{"output_type":"stream","name":"stdout","text":["(3, 18)\n"]}]},{"cell_type":"code","source":["# TFidfVectorizer로 transform( )한 결과는 희소 행렬이므로 밀집 행렬로 변환.\n","feature_vect_dense = feature_vect_simple.todense()\n","\n","# 첫 번재 문장과 두 번째 문장의 피처 백터 추출\n","vect1 = np.array(feature_vect_dense[0]).reshape(-1 , )\n","vect2 = np.array(feature_vect_dense[1]).reshape(-1 , )\n","\n","# 첫 번째 문장과 두 번째 문장의 피처 벡터로 두 개 문장의 코사인 유사도 추출\n","similarity_simple = cos_similarity(vect1 , vect2)\n","print('문장 1, 문장 2 Cosine 유사도: {0:.3f}'.format(similarity_simple))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"yD4tVmG9h0KN","executionInfo":{"status":"ok","timestamp":1643471800184,"user_tz":-540,"elapsed":464,"user":{"displayName":"김진우","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Ggb7NCfP7aAu0Hj8nNhErTzUou1vuaWKzjtXq6Auw=s64","userId":"12971138652345879224"}},"outputId":"8b5f373a-65cc-410e-8ee3-926ec55340b1"},"execution_count":79,"outputs":[{"output_type":"stream","name":"stdout","text":["문장 1, 문장 2 Cosine 유사도: 0.402\n"]}]},{"cell_type":"code","source":["vect1 = np.array(feature_vect_dense[0]).reshape(-1, )\n","vect3 = np.array(feature_vect_dense[2]).reshape(-1, )\n","similarity_simple = cos_similarity(vect2 , vect3)\n","print('문장 2, 문장 3 Cosine 유사도: {0:3f}'.format(similarity_simple))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"TYI1DFxHjV43","executionInfo":{"status":"ok","timestamp":1643471951763,"user_tz":-540,"elapsed":491,"user":{"displayName":"김진우","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Ggb7NCfP7aAu0Hj8nNhErTzUou1vuaWKzjtXq6Auw=s64","userId":"12971138652345879224"}},"outputId":"ecbd3a01-50c2-41a1-b037-787befc148ac"},"execution_count":80,"outputs":[{"output_type":"stream","name":"stdout","text":["문장 2, 문장 3 Cosine 유사도: 0.456473\n"]}]},{"cell_type":"code","source":["from sklearn.metrics.pairwise import cosine_similarity\n","\n","similarity_simple_pair = cosine_similarity(feature_vect_simple[0] , feature_vect_simple)\n","print(similarity_simple_pair)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"woj0eXUcj9PH","executionInfo":{"status":"ok","timestamp":1643472135209,"user_tz":-540,"elapsed":370,"user":{"displayName":"김진우","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Ggb7NCfP7aAu0Hj8nNhErTzUou1vuaWKzjtXq6Auw=s64","userId":"12971138652345879224"}},"outputId":"ebf3f28c-4e94-48bc-e2b3-48377471af0b"},"execution_count":81,"outputs":[{"output_type":"stream","name":"stdout","text":["[[1.         0.40207758 0.40425045]]\n"]}]},{"cell_type":"code","source":["from sklearn.metrics.pairwise import cosine_similarity\n","\n","similarity_simple_pair = cosine_similarity(feature_vect_simple[0] , feature_vect_simple[1:])\n","print(similarity_simple_pair)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"JWBBHfURkqDO","executionInfo":{"status":"ok","timestamp":1643472216481,"user_tz":-540,"elapsed":461,"user":{"displayName":"김진우","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Ggb7NCfP7aAu0Hj8nNhErTzUou1vuaWKzjtXq6Auw=s64","userId":"12971138652345879224"}},"outputId":"102fef1d-9342-4919-cd26-a6e4bd2b03dc"},"execution_count":82,"outputs":[{"output_type":"stream","name":"stdout","text":["[[0.40207758 0.40425045]]\n"]}]},{"cell_type":"code","source":["similarity_simple_pair = cosine_similarity(feature_vect_simple, feature_vect_simple)\n","print(similarity_simple_pair)\n","print('shape:' , similarity_simple_pair.shape )"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"3qwwEfp2k94Q","executionInfo":{"status":"ok","timestamp":1643472318024,"user_tz":-540,"elapsed":363,"user":{"displayName":"김진우","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Ggb7NCfP7aAu0Hj8nNhErTzUou1vuaWKzjtXq6Auw=s64","userId":"12971138652345879224"}},"outputId":"7282322d-9136-4ca5-c1be-311eeaf1b8f4"},"execution_count":83,"outputs":[{"output_type":"stream","name":"stdout","text":["[[1.         0.40207758 0.40425045]\n"," [0.40207758 1.         0.45647296]\n"," [0.40425045 0.45647296 1.        ]]\n","shape: (3, 3)\n"]}]},{"cell_type":"markdown","source":["### Opinion Review 데이터 세트를 이용한 문서 유사도 측정"],"metadata":{"id":"ylcr_ziZlXS9"}},{"cell_type":"code","source":["import pandas as pd\n","import glob, os\n","from sklearn.feature_extraction.text import TfidfVectorizer\n","from sklearn.cluster import KMeans\n","\n","path = r'/content/drive/MyDrive/AI/파이썬 머신러닝 완벽가이드/data_sets/OpinosisDataset1.0/topics'\n","all_files = glob.glob(os.path.join(path , \"*.data\"))\n","filename_list = []\n","opinion_text = []\n","\n","for file_ in all_files:\n","    df = pd.read_table(file_, index_col = None , header=0 , encoding = 'latin1')\n","    filename_ = file_.split('/')[-1]\n","    filename =filename_.split('.')[0]\n","    filename_list.append(filename)\n","    opinion_text.append(df.to_string( ))\n","\n","document_df = pd.DataFrame({'filename' : filename_list , 'opinion_text' : opinion_text})\n","\n","tfidf_vect = TfidfVectorizer(tokenizer=LemNormalize , stop_words = 'english', ngram_range=(1,2) , min_df=0.05 , max_df=0.85)\n","feature_vect = tfidf_vect.fit_transform(document_df['opinion_text'])\n","\n","km_cluster = KMeans(n_clusters=3 , max_iter=10000 , random_state=0)\n","km_cluster.fit(feature_vect)\n","cluster_label = km_cluster.labels_\n","cluster_centers = km_cluster.cluster_centers_\n","document_df['cluster_label'] = cluster_label"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"igHPNoASlWrw","executionInfo":{"status":"ok","timestamp":1643472912474,"user_tz":-540,"elapsed":4732,"user":{"displayName":"김진우","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Ggb7NCfP7aAu0Hj8nNhErTzUou1vuaWKzjtXq6Auw=s64","userId":"12971138652345879224"}},"outputId":"6a7d1530-d2a9-45da-eae7-964e80453fd1"},"execution_count":84,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.7/dist-packages/sklearn/feature_extraction/text.py:401: UserWarning: Your stop_words may be inconsistent with your preprocessing. Tokenizing the stop words generated tokens ['ha', 'le', 'u', 'wa'] not in stop_words.\n","  % sorted(inconsistent)\n"]}]},{"cell_type":"code","source":["feature_vect"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"rXzKGl0NsYPf","executionInfo":{"status":"ok","timestamp":1643474428450,"user_tz":-540,"elapsed":354,"user":{"displayName":"김진우","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Ggb7NCfP7aAu0Hj8nNhErTzUou1vuaWKzjtXq6Auw=s64","userId":"12971138652345879224"}},"outputId":"87aa2e5b-3736-4042-ef2a-eef019b8d5cb"},"execution_count":101,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<51x4611 sparse matrix of type '<class 'numpy.float64'>'\n","\twith 30124 stored elements in Compressed Sparse Row format>"]},"metadata":{},"execution_count":101}]},{"cell_type":"code","source":["from sklearn.metrics.pairwise import cosine_similarity\n","\n","# cluster_label=1인 데이터는 호텔로 군집화된 데이터임. DataFrame에서 해당 인덱스를 추출\n","hotel_indexes = document_df[document_df['cluster_label'] == 1].index\n","print('호텔로 군집화 된 문서들의 DataFrame Index:', hotel_indexes)\n","\n","# 호텔로 군집화된 데이터 중 첫 번째 문서를 추출해 파일명 표시\n","comparison_docname = document_df.iloc[hotel_indexes[0]]['filename']\n","print('##### 비교 기준 문서명 ' , comparison_docname , ' 와 타 문서 유사도#####')\n","\n","# document_df에서 추출한 Index 객체를 feature_vect로 입력해 호텔 군집화된 feature_vect 추출\n","# 이를 이용해 호텔로 군집화된 문서 중 첫 번째 문서와 다른 문서 간의 코사인 유사도 측정\n","similarity_pair = cosine_similarity( feature_vect [hotel_indexes[0] ] , feature_vect[hotel_indexes] )\n","print(similarity_pair)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"FPaFc-i7nmvp","executionInfo":{"status":"ok","timestamp":1643474471272,"user_tz":-540,"elapsed":431,"user":{"displayName":"김진우","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Ggb7NCfP7aAu0Hj8nNhErTzUou1vuaWKzjtXq6Auw=s64","userId":"12971138652345879224"}},"outputId":"4b1b7aef-2739-438a-d70a-cc777c4149db"},"execution_count":105,"outputs":[{"output_type":"stream","name":"stdout","text":["호텔로 군집화 된 문서들의 DataFrame Index: Int64Index([3, 13, 18, 22, 29, 31, 34, 37, 48, 49], dtype='int64')\n","##### 비교 기준 문서명  transmission_toyota_camry_2007  와 타 문서 유사도#####\n","[[1.         0.03767558 0.11012824 0.07848359 0.06738807 0.03937962\n","  0.08217817 0.03617786 0.07459289 0.06229873]]\n"]}]},{"cell_type":"code","source":["import seaborn as sns\n","import numpy as np\n","import matplotlib.pyplot as plt\n","%matplotlib inline\n","\n","# 첫 번째 문서와 타 문서 간 유사도가 큰 순으로 정렬한 인덱스를 추출하되 자기 자신은 제외.\n","sorted_index = similarity_pair.argsort()[: , ::-1]\n","sorted_index = sorted_index[:,1:]\n","\n","# 유사도가 큰 순으로 hotel_indexes를 추출해 재정렬\n","hotel_sorted_indexes = hotel_indexes[sorted_index.reshape(-1)]\n","\n","# 유사도가 큰 순으로 유사도 값을 재정렬하되 자기 자신은 제외\n","hotel_1_sim_value = np.sort(similarity_pair.reshape(-1))[::-1]\n","hotel_1_sim_value = hotel_1_sim_value[1:]\n","\n","#유사도가 큰 순으로 정렬된 인덱스와 유사도 값을 이용해 파일명과 유사도 값을 막대 그래프로 시각화\n","hotel_1_sim_df = pd.DataFrame()\n","hotel_1_sim_df['filename'] = document_df.iloc[hotel_sorted_indexes]['filename']\n","hotel_1_sim_df['similarity'] = hotel_1_sim_value\n","\n","sns.barplot(x='similarity' , y='filename' , data=hotel_1_sim_df)\n","plt.title(comparison_docname)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":313},"id":"05aqFc0-pINa","executionInfo":{"status":"ok","timestamp":1643474484614,"user_tz":-540,"elapsed":924,"user":{"displayName":"김진우","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Ggb7NCfP7aAu0Hj8nNhErTzUou1vuaWKzjtXq6Auw=s64","userId":"12971138652345879224"}},"outputId":"fbfc0f79-5382-4900-d9e9-258a5a655d1e"},"execution_count":107,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Text(0.5, 1.0, 'transmission_toyota_camry_2007')"]},"metadata":{},"execution_count":107},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"needs_background":"light"}}]},{"cell_type":"markdown","source":["## 8-9 한글 텍스트 처리 - 네이버 영화 평점 감성 분석"],"metadata":{"id":"-ZC19ucgxHYa"}},{"cell_type":"markdown","source":["### 한글 NLP 처리의 어려움"],"metadata":{"id":"04--wjKNxfC5"}},{"cell_type":"markdown","source":["### KoNLPy소개"],"metadata":{"id":"qQpc9wVQx6Pt"}},{"cell_type":"markdown","source":["## 8-10 텍스트 분석 실습 - 캐글 Mercari Price Suggestion Challenge"],"metadata":{"id":"deQjYsJCyTFA"}},{"cell_type":"code","source":["/content/drive/MyDrive/AI/파이썬 머신러닝 완벽가이드/data_sets/mercari-price-suggestion-challenge"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":136},"id":"XG6DCN3Drp2Q","executionInfo":{"status":"error","timestamp":1643508557587,"user_tz":-540,"elapsed":889,"user":{"displayName":"김진우","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Ggb7NCfP7aAu0Hj8nNhErTzUou1vuaWKzjtXq6Auw=s64","userId":"12971138652345879224"}},"outputId":"d5996392-9ffe-4bc6-98c9-362c99d9e3eb"},"execution_count":2,"outputs":[{"output_type":"error","ename":"SyntaxError","evalue":"ignored","traceback":["\u001b[0;36m  File \u001b[0;32m\"<ipython-input-2-3aea45d7da03>\"\u001b[0;36m, line \u001b[0;32m1\u001b[0m\n\u001b[0;31m    content(/drive/MyDrive/AI/파이썬, 머신러닝, 완벽가이드/data_sets/mercari-price-suggestion-challenge)\u001b[0m\n\u001b[0m            ^\u001b[0m\n\u001b[0;31mSyntaxError\u001b[0m\u001b[0;31m:\u001b[0m invalid syntax\n"]}]},{"cell_type":"markdown","source":["### 데이터 전처리"],"metadata":{"id":"nEvg88Hx1ijr"}},{"cell_type":"code","source":["from sklearn.linear_model import Ridge, LogisticRegression\n","from sklearn.model_selection import train_test_split, cross_val_score\n","from sklearn.feature_extraction.text import CountVectorizer, TfidfVectorizer\n","import pandas as pd\n","\n","mercari_df = pd.read_csv('train.tsv' , sep = '\\t')\n","print(mercari_df.shape)\n","mercari_df.head(3)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":467},"id":"azzgQ3bl1gmR","executionInfo":{"status":"error","timestamp":1643508558541,"user_tz":-540,"elapsed":3,"user":{"displayName":"김진우","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Ggb7NCfP7aAu0Hj8nNhErTzUou1vuaWKzjtXq6Auw=s64","userId":"12971138652345879224"}},"outputId":"a91ba7fc-790c-40fd-e74d-3b23cd78029a"},"execution_count":3,"outputs":[{"output_type":"error","ename":"FileNotFoundError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mFileNotFoundError\u001b[0m                         Traceback (most recent call last)","\u001b[0;32m<ipython-input-3-931062d5a29a>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      4\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mpandas\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0mpd\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      5\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 6\u001b[0;31m \u001b[0mmercari_df\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mpd\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mread_csv\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'train.tsv'\u001b[0m \u001b[0;34m,\u001b[0m \u001b[0msep\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m'\\t'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      7\u001b[0m \u001b[0mprint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mmercari_df\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mshape\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      8\u001b[0m \u001b[0mmercari_df\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mhead\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;36m3\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/pandas/io/parsers.py\u001b[0m in \u001b[0;36mread_csv\u001b[0;34m(filepath_or_buffer, sep, delimiter, header, names, index_col, usecols, squeeze, prefix, mangle_dupe_cols, dtype, engine, converters, true_values, false_values, skipinitialspace, skiprows, skipfooter, nrows, na_values, keep_default_na, na_filter, verbose, skip_blank_lines, parse_dates, infer_datetime_format, keep_date_col, date_parser, dayfirst, cache_dates, iterator, chunksize, compression, thousands, decimal, lineterminator, quotechar, quoting, doublequote, escapechar, comment, encoding, dialect, error_bad_lines, warn_bad_lines, delim_whitespace, low_memory, memory_map, float_precision)\u001b[0m\n\u001b[1;32m    686\u001b[0m     )\n\u001b[1;32m    687\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 688\u001b[0;31m     \u001b[0;32mreturn\u001b[0m \u001b[0m_read\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfilepath_or_buffer\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mkwds\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    689\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    690\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/pandas/io/parsers.py\u001b[0m in \u001b[0;36m_read\u001b[0;34m(filepath_or_buffer, kwds)\u001b[0m\n\u001b[1;32m    452\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    453\u001b[0m     \u001b[0;31m# Create the parser.\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 454\u001b[0;31m     \u001b[0mparser\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mTextFileReader\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfp_or_buf\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwds\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    455\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    456\u001b[0m     \u001b[0;32mif\u001b[0m \u001b[0mchunksize\u001b[0m \u001b[0;32mor\u001b[0m \u001b[0miterator\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/pandas/io/parsers.py\u001b[0m in \u001b[0;36m__init__\u001b[0;34m(self, f, engine, **kwds)\u001b[0m\n\u001b[1;32m    946\u001b[0m             \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0moptions\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m\"has_index_names\"\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mkwds\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m\"has_index_names\"\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    947\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 948\u001b[0;31m         \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_make_engine\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mengine\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    949\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    950\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0mclose\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/pandas/io/parsers.py\u001b[0m in \u001b[0;36m_make_engine\u001b[0;34m(self, engine)\u001b[0m\n\u001b[1;32m   1178\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0m_make_engine\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mengine\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m\"c\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1179\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0mengine\u001b[0m \u001b[0;34m==\u001b[0m \u001b[0;34m\"c\"\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1180\u001b[0;31m             \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_engine\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mCParserWrapper\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mf\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0moptions\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1181\u001b[0m         \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1182\u001b[0m             \u001b[0;32mif\u001b[0m \u001b[0mengine\u001b[0m \u001b[0;34m==\u001b[0m \u001b[0;34m\"python\"\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/pandas/io/parsers.py\u001b[0m in \u001b[0;36m__init__\u001b[0;34m(self, src, **kwds)\u001b[0m\n\u001b[1;32m   2008\u001b[0m         \u001b[0mkwds\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m\"usecols\"\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0musecols\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   2009\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 2010\u001b[0;31m         \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_reader\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mparsers\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mTextReader\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0msrc\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwds\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   2011\u001b[0m         \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0munnamed_cols\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_reader\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0munnamed_cols\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   2012\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32mpandas/_libs/parsers.pyx\u001b[0m in \u001b[0;36mpandas._libs.parsers.TextReader.__cinit__\u001b[0;34m()\u001b[0m\n","\u001b[0;32mpandas/_libs/parsers.pyx\u001b[0m in \u001b[0;36mpandas._libs.parsers.TextReader._setup_parser_source\u001b[0;34m()\u001b[0m\n","\u001b[0;31mFileNotFoundError\u001b[0m: [Errno 2] No such file or directory: 'train.tsv'"]}]},{"cell_type":"code","source":["print(merari_df.info())"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":172},"id":"R1BibUJe2JfE","executionInfo":{"status":"error","timestamp":1643476858502,"user_tz":-540,"elapsed":610,"user":{"displayName":"김진우","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Ggb7NCfP7aAu0Hj8nNhErTzUou1vuaWKzjtXq6Auw=s64","userId":"12971138652345879224"}},"outputId":"79da1203-f6a5-40e3-92a7-a5068cce693c"},"execution_count":113,"outputs":[{"output_type":"error","ename":"NameError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m<ipython-input-113-934678844645>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mprint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mmerari_df\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0minfo\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;31mNameError\u001b[0m: name 'merari_df' is not defined"]}]},{"cell_type":"code","source":["import matplotlib.pyplot as plt\n","import seaborn as sns\n","%matplotlib inline\n","\n","y_train_df = mercari_df['price']\n","plt.figure(figsize=(6,4))\n","sns.distplot(y_train_df, kde=False)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":244},"id":"QBizgjUq2rIR","executionInfo":{"status":"error","timestamp":1643476974802,"user_tz":-540,"elapsed":540,"user":{"displayName":"김진우","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Ggb7NCfP7aAu0Hj8nNhErTzUou1vuaWKzjtXq6Auw=s64","userId":"12971138652345879224"}},"outputId":"29e896ff-0532-4ed9-b1c4-23d412cbbb9d"},"execution_count":114,"outputs":[{"output_type":"error","ename":"NameError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m<ipython-input-114-7891cefa6f67>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      3\u001b[0m \u001b[0mget_ipython\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mmagic\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'matplotlib inline'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      4\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 5\u001b[0;31m \u001b[0my_train_df\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mmercari_df\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'price'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      6\u001b[0m \u001b[0mplt\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mfigure\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfigsize\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;36m6\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;36m4\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      7\u001b[0m \u001b[0msns\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdistplot\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0my_train_df\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mkde\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mFalse\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mNameError\u001b[0m: name 'mercari_df' is not defined"]}]},{"cell_type":"code","source":["mercari_df['price'] = np.log1p(mercari_df['price'])\n","mercari_df['price'].head(3)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":190},"id":"a-S1z6Ho3HjK","executionInfo":{"status":"error","timestamp":1643477116165,"user_tz":-540,"elapsed":461,"user":{"displayName":"김진우","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Ggb7NCfP7aAu0Hj8nNhErTzUou1vuaWKzjtXq6Auw=s64","userId":"12971138652345879224"}},"outputId":"0a8a8ee8-fa7e-4211-aed5-0b3a1bc97684"},"execution_count":116,"outputs":[{"output_type":"error","ename":"NameError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m<ipython-input-116-839373e1a4ef>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mmercari_df\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'price'\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mnp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mlog1p\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mmercari_df\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'price'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      2\u001b[0m \u001b[0mmercari_df\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'price'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mhead\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;36m3\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mNameError\u001b[0m: name 'mercari_df' is not defined"]}]},{"cell_type":"code","source":["print('Shipping 값 유형:\\n' , mercari_df['shipping'].value_counts())\n","print('item_condition_id 값 유형:\\n',mercari_df['item_condition_id'].value_counts())"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":190},"id":"6xRuwRDh3qFH","executionInfo":{"status":"error","timestamp":1643477202656,"user_tz":-540,"elapsed":485,"user":{"displayName":"김진우","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Ggb7NCfP7aAu0Hj8nNhErTzUou1vuaWKzjtXq6Auw=s64","userId":"12971138652345879224"}},"outputId":"81ef1d63-f12d-4c23-f18a-68e6d27858b0"},"execution_count":117,"outputs":[{"output_type":"error","ename":"NameError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m<ipython-input-117-b8c0993eb95d>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mprint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'Shipping 값 유형:\\n'\u001b[0m \u001b[0;34m,\u001b[0m \u001b[0mmercari_df\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'shipping'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mvalue_counts\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      2\u001b[0m \u001b[0mprint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'item_condition_id 값 유형:\\n'\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0mmercari_df\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'item_condition_id'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mvalue_counts\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mNameError\u001b[0m: name 'mercari_df' is not defined"]}]},{"cell_type":"code","source":["boolean_cond = mercari_df['item_descripton'] == 'No descripton yet'\n","mercari_df[boolean_cond]['item_descripton'].count()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":190},"id":"wwmtQATu3_MC","executionInfo":{"status":"error","timestamp":1643477367919,"user_tz":-540,"elapsed":478,"user":{"displayName":"김진우","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Ggb7NCfP7aAu0Hj8nNhErTzUou1vuaWKzjtXq6Auw=s64","userId":"12971138652345879224"}},"outputId":"0d904853-66c8-49b1-cb1c-765ca6e8b69b"},"execution_count":119,"outputs":[{"output_type":"error","ename":"NameError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m<ipython-input-119-5796671fffd3>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mboolean_cond\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mmercari_df\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'item_descripton'\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m==\u001b[0m \u001b[0;34m'No descripton yet'\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      2\u001b[0m \u001b[0mmercari_df\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mboolean_cond\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'item_descripton'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcount\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mNameError\u001b[0m: name 'mercari_df' is not defined"]}]},{"cell_type":"code","source":["# apply lambda에서 호출되는 대, 중, 소 분할 함수 생성, 대, 중, 소 값을 리스트로 반환\n","def split_cat(category_name):\n","    try:\n","        return category_name.split('/')\n","    except:\n","        return ['Other_Null' , 'Other_Null' , 'Other_Null']\n","\n","# 위의 split_cat( )을 apply lambda에서 호출해 대, 중, 소 칼럼을 mercari_df에 생성.\n","mercari_df['cat_dae'], mercari_df['cat_jung'] , mercari_df['cat_so'] = \\\n","zip(*mercari_df['category_name'].apply(lambda x : split_cat(x)))\n","\n","#대분류만 값의 유형과 건수를 살펴보고 , 중분류, 소분류는 값의 유형이 많으므로 분류 개수만 추출\n","print('대분류 유형 :\\n' , mercari_df['cat_dae'].value_counts( ) )\n","print('중분류 개수 :\\n' , mercari_df['cat_jung'].nunique( ))\n","print('소분류 개수 :'   , mercari_df['cat_so'].nunique( ))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":262},"id":"K8usF45R4hk5","executionInfo":{"status":"error","timestamp":1643477943584,"user_tz":-540,"elapsed":734,"user":{"displayName":"김진우","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Ggb7NCfP7aAu0Hj8nNhErTzUou1vuaWKzjtXq6Auw=s64","userId":"12971138652345879224"}},"outputId":"97973286-420b-47d6-fe81-7aa03cb0eb1b"},"execution_count":120,"outputs":[{"output_type":"error","ename":"NameError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m<ipython-input-120-a402e68f0ad3>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      7\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      8\u001b[0m \u001b[0;31m# 위의 split_cat( )을 apply lambda에서 호출해 대, 중, 소 칼럼을 mercari_df에 생성.\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 9\u001b[0;31m \u001b[0mmercari_df\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'cat_dae'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mmercari_df\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'cat_jung'\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m,\u001b[0m \u001b[0mmercari_df\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'cat_so'\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mzip\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0mmercari_df\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'category_name'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mapply\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;32mlambda\u001b[0m \u001b[0mx\u001b[0m \u001b[0;34m:\u001b[0m \u001b[0msplit_cat\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mx\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     10\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     11\u001b[0m \u001b[0;31m#대분류만 값의 유형과 건수를 살펴보고 , 중분류, 소분류는 값의 유형이 많으므로 분류 개수만 추출\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mNameError\u001b[0m: name 'mercari_df' is not defined"]}]},{"cell_type":"code","source":[""],"metadata":{"id":"uRipy__H60Bc"},"execution_count":null,"outputs":[]}],"metadata":{"colab":{"name":"8단원","provenance":[],"mount_file_id":"1kEUjxwiAwrqJ4JDsi1VLEqiWBV7DC4qZ","authorship_tag":"ABX9TyNLVtq9wJ/psyFFJtwnO1JG"},"kernelspec":{"display_name":"Python 3","name":"python3"},"language_info":{"name":"python"}},"nbformat":4,"nbformat_minor":0}